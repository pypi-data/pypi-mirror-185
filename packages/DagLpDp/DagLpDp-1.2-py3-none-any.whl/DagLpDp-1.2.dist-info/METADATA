Metadata-Version: 2.1
Name: DagLpDp
Version: 1.2
Summary: 用动态规划求解有向无环图的最长路径问题
Home-page: https://github.com/wangwenhao-DATA-OG/DagLpDp
Author: 王文皓(wangwenhao)
Author-email: DATA-OG@139.com
License: UNKNOWN
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.0
Description-Content-Type: text/markdown
License-File: LICENSE

# DagLpDp
用动态规划求解有向无环图的最长路径问题

# 安装
pip install DagLpDp

# 功能
1.支持多起点和多终点  
2.可计算到任意节点的最长路径和路径值  
3.可计算到每个终点的最长路径和路径值  
4.可计算所有路径中的最长路径和路径值  
5.采用非递归方式求解，提升运行效率  

# 示例
```
from DagLpDp import DAGLP

def __print(daglp):
    print('起点（无入度）:',daglp.starts) 
    print('终点（无出度）:',daglp.ends) 
    if daglp.done:#在约定时间内计算完成
        print('到任意节点的最长路径:',daglp.nodePV)
        print('到每个终点的最长路径:',[v for k,v in daglp.nodePV.items() if k in daglp.ends])
        print('到达终点的最长路径:%s,到达终点的最长路径值:%f'%(daglp.max_full_path,daglp.max_full_value))
       
def test_single_start_and_end():
    graph = {}
    graph[(1,2)] = 2
    graph[(1,3)] = 10
    graph[(2,4)] = 5
    graph[(2,5)] = 12
    graph[(3,4)] = 2
    graph[(4,6)] = 2
    graph[(5,6)] = 1
    return DAGLP(graph) 
    
def test_multi_start_and_end():
    graph = {}
    graph[(0,2)] = 4
    graph[(1,2)] = 2
    graph[(1,3)] = 10
    graph[(2,4)] = 5
    graph[(2,5)] = 12
    graph[(3,4)] = 2
    graph[(4,6)] = 2
    graph[(4,7)] = 2
    graph[(5,6)] = 1
    #10秒内不能计算完毕，则停止运算，daglp.done则被记为False。默认为60秒
    return DAGLP(graph,10)   

if __name__ == '__main__':
    daglp_single = test_single_start_and_end()
    __print(daglp_single)   
    daglp_multi = test_multi_start_and_end()
    __print(daglp_multi)
```

