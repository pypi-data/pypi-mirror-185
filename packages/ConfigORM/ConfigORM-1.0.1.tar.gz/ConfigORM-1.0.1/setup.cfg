[tox:tox]
envlist = 
	tests
	coverage
	typing
	linter

[testenv]
basepython = python3.9
skip_install = true
install_command = python -m pip --disable-pip-version-check install {opts} {packages}

[testenv:tests]
whitelist_externals = /bin/bash
deps = 
	-r requirements.txt
	unittest-xml-reporting
commands = 
	bash -ec 'mkdir -p artifacts/tests'
	pip install --upgrade pip
	python3 -m xmlrunner discover tests -v -o artifacts/tests

[testenv:tests-debug]
deps = 
	-r requirements.txt
commands = 
	pip install --upgrade pip
	python3 -m unittest discover tests -v

[testenv:coverage]
whitelist_externals = /bin/bash
deps = 
	-r requirements.txt
	coverage
	coverage-badge
	anybadge
commands = 
	bash -ec 'mkdir -p artifacts/coverage'
	pip install --upgrade pip
	coverage run --source=. -m unittest discover -s tests
	coverage html --directory=artifacts/coverage
	bash -ec 'NA=$(python setup.py --name); coverage-badge > artifacts/$NA-coverage.svg'
	bash -ec 'NA=$(python setup.py --name); VE=$(python setup.py --version); anybadge --label=$NA --value=$VE --file=artifacts/$NA-badge.svg \
	--color=green --overwrite'

[testenv:typing]
whitelist_externals = /bin/bash
deps = 
	-r requirements.txt
	mypy-extensions==0.4.3
	mypy==0.910
	typed-ast==1.4.3
	typing-extensions==3.10.0.0
	mypy2junit
commands = 
	bash -ec 'mkdir -p artifacts/typing'
	pip install --upgrade pip
	- bash -ec 'mypy --no-strict-optional --no-warn-no-return --warn-unused-ignores --ignore-missing-imports --install-types \
	--non-interactive --exclude "(setup.py|tests|venv)" . 2> artifacts/typing/mypy.txt'
	bash -ec 'mypy2junit artifacts/typing/mypy.txt > artifacts/typing/mypy_junit.xml'

[testenv:typing-debug]
deps = 
	-r requirements.txt
	mypy-extensions==0.4.3
	mypy==0.910
	typed-ast==1.4.3
	typing-extensions==3.10.0.0
commands = 
	pip install --upgrade pip
	mypy .

[testenv:linter]
whitelist_externals = /bin/bash
deps = 
	-r requirements.txt
	flake8
	flake8-bugbear
	flake8-docstrings>=1.3.1
	flake8-typing-imports>=1.1
	pep8-naming
	flake8-formatter-junit-xml
commands = 
	bash -ec 'mkdir -p artifacts/linter'
	bash -ec 'flake8 --format junit-xml . > artifacts/linter/flake_junit.xml'

[testenv:linter-debug]
deps = 
	-r requirements.txt
	flake8
	flake8-bugbear
	flake8-docstrings>=1.3.1
	flake8-typing-imports>=1.1
	pep8-naming
commands = 
	flake8 .

[mypy]
files = configorm
strict_optional = False
warn_no_return = False
warn_unused_ignores = True
ignore_missing_imports = True
install_types = true
non_interactive = true
exclude = setup.py|tests/|venv
disallow_untyped_defs = True
disallow_incomplete_defs = True
check_untyped_defs = True

[flake8]
min_python_version = 3.9.0
max-complexity = 10
max-line-length = 120
ignore = D100, D104, D105, D107, D200, D205, D400, D401, D401,  W503, E266, N818, B019, C901
exclude = 
	.git,
	__pycache__,
	build,
	dist,
	venv,
	tests/*,
	*.pyc,
	*.egg-info,
	.cache,
	.eggs
per-file-ignores = 
	tests/*: N802,N803,N806

[coverage:run]
branch = True
omit = 
	*/setup.py
	*/.git/*
	*/tests/*
	*venv*
	*/site-packages/*
	*/distutils/*
	*/usr/local/lib*
	*__init__.py*

[coverage:report]
omit = 
	*/app.py
	*/.git/*
	*/tests/*
	*venv*
	*/site-packages/*
	*/distutils/*
	*/usr/local/lib*
	*__init__.py*
exclude_lines = 
	pass
ignore_errors = True

[coverage:html]
directory = coverage_html_report

[egg_info]
tag_build = 
tag_date = 0

