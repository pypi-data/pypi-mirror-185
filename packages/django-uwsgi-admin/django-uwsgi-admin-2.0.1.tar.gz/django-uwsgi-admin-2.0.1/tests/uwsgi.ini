[uwsgi]
# Error on unknown options (prevents typos)
strict = true

# Exit if no app can be loaded
need-app = true

# In case there's some bad global state (pointless to use with need-app = true)
;lazy-apps = true

# May be necessary when using mounts
;manage-script-name = true

# WSGI module (application callable expected inside)
module = $(DJANGO_PROJECT_NAME).wsgi

# Close fds on fork (don't make it possible that a subprocess messes with parent's fds)
close-on-exec = true
close-on-exec2 = true

# Enable an accept mutex for a more balanced worker load
thunder-lock = true

# Most of uWSGI features depend on the master mode
master = true

# Avoid multiple interpreters (automatically created for mounts - which may be completely unnecessary)
single-interpreter = true

# Respect SIGTERM and do shutdown instead of reload
die-on-term = true

# https://github.com/unbit/uwsgi/issues/849#issuecomment-118869386
hook-master-start = unix_signal:15 gracefully_kill_them_all

#
processes = 2

# Enable thread for sentry, https://docs.sentry.io/clients/python/advanced/#a-note-on-uwsgi
enable-threads = true

# Respawn processes that take more than ... seconds
harakiri = 300
harakiri-verbose = true

# Respawn processes after serving ... requests
max-requests = 5000

# Respawn if processes are bloated
reload-on-as = 1024
reload-on-rss = 512

# We don't expect abuse so lets have fastest respawn possible
forkbomb-delay = 0


# This is basically the limit for the headers, we definitely don't want the default 4k
# From: http://uwsgi-docs.readthedocs.io/en/latest/ThingsToKnow.html
#
#     By default uWSGI allocates a very small buffer (4096 bytes) for the headers of
#     each request. If you start receiving "invalid request block size" in your logs,
#     it could mean you need a bigger buffer.
buffer-size = 32768

# Good for debugging/development
auto-procname = true
log-5xx = true
log-zero = true
log-slow = 1000
log-date = [%%Y-%%m-%%d %%H:%%M:%%S]
log-format = %(ftime) "%(method) %(uri)" %(status) %(rsize)+%(hsize) in %(msecs)ms pid:%(pid) worker:%(wid) core:%(core)
log-format-strftime = [%%Y-%%m-%%d %%H:%%M:%%S]

# This is how a request runs with this setup:
#   http request -> http router -> fastrouter -> worker
http = 127.0.0.1:0
uwsgi-socket = uwsgi.sock
http-to = uwsgi.router
fastrouter = uwsgi.router
fastrouter-use-pattern = uwsgi.sock

# Buffer in-memory up to 64kb
fastrouter-post-buffering = %(64 * 1024)

# 10Mb request body limit
limit-post = %(10 * 1024 * 1024)

static-map = /static=static
# Expire after 24h
static-expires = .* %(24 * 60 * 60)
# Don't forget to run python -m whitenoise.compress or similar!
static-gzip-all = true

ignore-write-errors = true

# See: https://ugu.readthedocs.io/en/latest/compress.html
collect-header = Content-Type RESPONSE_CONTENT_TYPE
collect-header = Content-Length RESPONSE_CONTENT_LENGTH
response-route-if = empty:${RESPONSE_CONTENT_LENGTH} goto:no-length
response-route-if = islower:${RESPONSE_CONTENT_LENGTH};1000 last:
response-route-label = no-length
response-route-if = contains:${HTTP_ACCEPT_ENCODING};gzip goto:check-response
response-route-run = last:
response-route-label = check-response
response-route-if = equal:${RESPONSE_CONTENT_TYPE};application/json goto:apply-gzip
response-route-if = startswith:${RESPONSE_CONTENT_TYPE};text/ goto:apply-gzip
response-route-run = last:
response-route-label = apply-gzip
response-route-run = gzip:

http-auto-chunked = true
