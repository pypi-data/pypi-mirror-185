Metadata-Version: 2.1
Name: hyss
Version: 2.0.0
Summary: High impact style sheets, empowered by python
Author-email: Charlie Paterson <Charlieed.paterson@googlemail.com>
License: MIT License
        
        Copyright (c) 2022 Charlie Paterson
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the Software), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED AS IS, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Project-URL: Homepage, https://github.com/CpaterCodes/Hyss
Keywords: css,hyss,styles,stylesheets,animations,web,full stack
Classifier: License :: OSI Approved :: MIT License
Classifier: Development Status :: 5 - Production/Stable
Classifier: Operating System :: OS Independent
Requires-Python: >=3.6
Description-Content-Type: text/markdown
Provides-Extra: dev
License-File: LICENSE

# Hyss - High Ympact Style Sheets

## Rationale

Define styles as python dicts! 
All of the power of python, realised to create stylesheets.
Coming soon to a package index near you!

## Features

- Create minified css content from a nested dictionary structure

- Helper for compound css classes (think 'div p', 'main section')  


## Potential Future Features

- Generate helpers for various css features. Already exist for animations.

- Build an indenter for output css; ease of debugging for users

- Means to convert 

## Usage Demonstrations

Here is a set of examples to illustrate the behaviour of functions within 
hyss

**stylesheet(styles: dict) -> str**

Takes a fractal dictionary structure and generates a minified css string as
shown

```python
from hyss import stylesheet

css = stylesheet(
        {
            'body': {
                'background-color': 'yellow',
            }, 
            'div': {
                'color': 'red'
            }
        }

print(css)

# This prints the following

# "body{background-color:yellow;}div{color:red;}"
```

**with_linebreaks(css: str) -> str**

Applies linebreaks to a minified css string, for debugging purposes as shown

```python

from hyss.format import with_linebreaks

minified_css = "body{background-color:yellow;}div{color:red;}"

linebreak_css = with_linebreaks(minified_css)

print(linebreaks_css)

# This prints "body{\nbackground-color:yellow;\n}\ndiv{\ncolor:red;\n}\n"

```

In a file, *linebreak_css* will look as follows

```css

body{
background-color:yellow;
}
div{
color:red;
}

```

