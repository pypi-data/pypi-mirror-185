---
kind: Template
apiVersion: template.openshift.io/v1
# On DSRI with Virtuoso: 18s
# On node2 with GraphDB 6s
metadata:
  name: openpredict
  annotations:
    openshift.io/display-name: OpenPredict API
    description: |-
      Start an OpenPredict API
    iconClass: icon-python
    tags: translator,api,embeddings
    openshift.io/provider-display-name: Institute of Data Science, UM
    openshift.io/documentation-url: https://maastrichtu-ids.github.io/dsri-documentation/docs
    openshift.io/support-url: https://maastrichtu-ids.github.io/dsri-documentation/help
labels:
  template: openpredict
parameters:
- name: APPLICATION_NAME
  displayName: Application name
  description: Must be without spaces (use -), and unique in the project.
  value: api
  required: true
- name: APIKEY
  displayName: OpenPredict API KEY
  description: Define the API key to authenticate when adding new embeddings.
  # from: "[a-zA-Z0-9]{16}"
  # generate: expression
  required: true
- name: STORAGE_SIZE
  displayName: Storage size
  description: Size of the storage used for the notebook (approximate).
  value: 100Gi
  required: true
# - name: DEFAULT_GRAPH
#   displayName: Triplestore default graph
#   description: The default graph used by the Virtuoso triplestore
#   value: https://w3id.org/openpredict/graph
#   required: true
# - name: APPLICATION_IMAGE
#   displayName: Application Docker image
#   description: Docker image to deploy the Virtuoso triplestore
#   value: openlink/virtuoso-opensource-7:latest
#   required: true

objects:
- apiVersion: v1
  kind: Secret
  metadata:
    annotations:
      template.openshift.io/expose-password: "{.data['application-password']}"
    name: "${APPLICATION_NAME}"
    labels:
      app: "${APPLICATION_NAME}"
  stringData:
    application-password: "${APIKEY}"

- apiVersion: "v1"
  kind: "PersistentVolumeClaim"
  metadata:
    name: ${APPLICATION_NAME}
    labels:
      app: "${APPLICATION_NAME}"
  spec:
    accessModes:
      - "ReadWriteMany"
    resources:
      requests:
        storage: ${STORAGE_SIZE}

- kind: ImageStream
  apiVersion: image.openshift.io/v1
  metadata:
    name: ${APPLICATION_NAME}
    labels:
      app: "${APPLICATION_NAME}"
  spec:
    tags:
    - name: latest
      from:
        kind: DockerImage
        name: ghcr.io/maastrichtu-ids/openpredict-api:latest
      importPolicy:
        scheduled: false
    lookupPolicy:
      local: true

# Deploy OpenPredict API
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: "${APPLICATION_NAME}"
    labels:
      app: "${APPLICATION_NAME}"
      template: openpredict
  spec:
    replicas: 1
    strategy:
      type: Recreate
      # type: Rolling
    triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - openpredict-api
        from:
          kind: ImageStreamTag
          name: ${APPLICATION_NAME}:latest
    selector:
      app: "${APPLICATION_NAME}"
      deploymentconfig: "${APPLICATION_NAME}"
    template:
      metadata:
        labels:
          app: "${APPLICATION_NAME}"
          deploymentconfig: "${APPLICATION_NAME}"
      spec:
        serviceAccountName: "anyuid"
        # nodeSelector:
        #   dsri.unimaas.nl/cpu: 'true'
        containers:
        - name: openpredict-api
          image: "${APPLICATION_NAME}:latest"
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: 8808
            protocol: TCP
          env:
          - name: OPENPREDICT_APIKEY
            valueFrom:
              secretKeyRef:
                key: application-password
                name: "${APPLICATION_NAME}"
          # - name: SPARQL_USERNAME
          #   value: ${SPARQL_USERNAME}
          # - name: SPARQL_PASSWORD
          #   valueFrom:
          #     secretKeyRef:
          #       key: application-password
          #       name: "${APPLICATION_NAME}"
          # - name: SPARQL_ENDPOINT_URL
          #   value: "http://${APPLICATION_NAME}-virtuoso:8890/sparql"
          # - name: SPARQL_ENDPOINT_UPDATE_URL
          #   value: "http://${APPLICATION_NAME}-virtuoso:8890/sparql"
          volumeMounts:
          - name: data
            mountPath: "/data/openpredict"
            # subPath: "openpredict"
          - name: dshm
            mountPath: /dev/shm
          # resources:
          #   requests:
          #     cpu: "${CPU_LIMIT}"
          #     memory: "${MEMORY_LIMIT}"
          #   limits:
          #     cpu: "128"
          #     memory: "300Gi"
        automountServiceAccountToken: false
        volumes:
        - name: data
          persistentVolumeClaim:
            claimName: "${APPLICATION_NAME}"
        - name: dshm
          emptyDir:
            medium: Memory

- kind: Service
  apiVersion: v1
  metadata:
    name: "${APPLICATION_NAME}"
    labels:
      app: "${APPLICATION_NAME}"
      template: openpredict
  spec:
    ports:
    - name: 8808-tcp
      protocol: TCP
      port: 8808
      targetPort: 8808
    selector:
      app: "${APPLICATION_NAME}"
      deploymentconfig: "${APPLICATION_NAME}"
    type: ClusterIP
- kind: Route
  apiVersion: v1
  metadata:
    name: "${APPLICATION_NAME}"
    labels:
      app: "${APPLICATION_NAME}"
      template: openpredict
  spec:
    host: ''
    to:
      kind: Service
      name: "${APPLICATION_NAME}"
      weight: 100
    port:
      targetPort: 8808-tcp
    tls:
      termination: edge
      insecureEdgeTerminationPolicy: Redirect
