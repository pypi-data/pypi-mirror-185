Metadata-Version: 2.1
Name: py_metarium_encoder
Version: 0.0.1.1
Summary: Python package for Metarium Encoder
Author: MetariumProject
Project-URL: Homepage, https://github.com/MetariumProject/py-metarium-encoder
Project-URL: Bug Tracker, https://github.com/MetariumProject/py-metarium-encoder/issues
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.9
Description-Content-Type: text/markdown
License-File: LICENSE

# py-metarium-encoder

# Usage


## 1. Virtual environment

### 1.1. Install virtual environment

```
pip3 install virtualenv
```

### 1.2. Create virtual environment for metarium

```
python3 -m venv virtualenv ~/venv-metarium-encoder
```

### 1.3. Activate metarium virtual environment

```
source ~/.venv-py-metarium-encoder/bin/activate
```

## 2. Install

### 2.1. Install metarium

```
pip install py-metarium==0.0.2.5
```

### 2.2. Install substrate client

```
pip install substrate-interface==1.4.0
```

### 2.3. Install blake3

```
pip install blake3==0.3.3
```

### 2.4 Install dotenv
```
pip install python-dotenv==0.21.0
```

## 3. Example usage

### 3.1. Create a simple Uploader

#### 3.1.1. Environment file to store configuration

Create a `.env` file to store your secrets
```
MNEMONIC=your mnemonic here ...
NODE_URL=ws://127.0.0.1:9944
```

#### 3.1.2. Uploader script
Create a uploader script called `simple-uploader.py` with the following code block
```
from dotenv import dotenv_values

from py_metarium_encoder import (
    SubstrateKuriEncoder,
)

MNEMONIC = None
NODE_URL = None

def set_secrets():
    config = dotenv_values(".env")

    MNEMONIC = config.get("MNEMONIC", None)
    NODE_URL = config.get("NODE_URL", None)

def create_kuris():
    assert MNEMONIC is not None, "Please set the MNEMONIC in your .env file"
    assert NODE_URL is not None, "Please set the NODE_URL in your .env file"
    e = SubstrateKuriEncoder(url=NODE_URL, mnemonic=MNEMONIC)
    kuri_data = {
        "type": "text",
        "content": "idhayam"
    }
    transaction_hash = e.encode(
        data=kuri_data,
        wait_for_inclusion=True,
        wait_for_finalization=False
    )
    print(f"Transaction hash: {transaction_hash}")

if __name__ == "__main__":
    set_secrets()
    create_kuris()
```
Run the uploader script
```
python simple-uploader.py
```

## 4. Teardown

Please remember to deactivate the virtual environment after usage

```
deactivate
```
