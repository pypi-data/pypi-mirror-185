{"version":3,"sources":["components/terminal/Terminal.js"],"names":["Terminal","xtermRef","useRef","fitAddon","FitAddon","socket","io","process","REACT_APP_SOCKET_URL","withCredentials","useEffect","on","console","debug","id","connected","fit","dims","cols","current","terminal","rows","focus","emit","disconnect","data","write","output","options","cursorBlink","macOptionIsMeta","scrollback","theme","background","foreground","className","ref","onData","input","addons","memo"],"mappings":"wHAEA,6DAKMA,EAAW,WACb,IAAMC,EAAWC,mBACXC,EAAW,IAAIC,WACfC,EAASC,YAAGC,wJAAYC,qBAAsB,CAEhDC,iBAAiB,IA+BrB,OA7BAC,qBAAU,WACFL,GACAA,EAAOM,GAAG,WAAW,WAAO,IAAD,IACvBC,QAAQC,MAAR,iBAAwBR,EAAOS,GAA/B,gCAAyDT,EAAOU,YAChEZ,EAASa,MACT,IACe,EADTC,EAAO,CAAEC,KAAI,OAAEjB,QAAF,IAAEA,GAAF,UAAEA,EAAUkB,eAAZ,aAAE,EAAmBC,SAASF,KAAMG,KAAI,OAAEpB,QAAF,IAAEA,GAAF,UAAEA,EAAUkB,eAAZ,aAAE,EAAmBC,SAASC,MACrFJ,EAAKI,OACG,OAARpB,QAAQ,IAARA,GAAA,UAAAA,EAAUkB,eAAV,SAAmBC,SAASE,QAC5BjB,EAAOkB,KAAK,iBAAkBN,GAC9BZ,EAAOkB,KAAK,SAAUN,UAKtCP,qBAAU,WACN,GAAIL,EACA,OAAO,WACHA,EAAOmB,iBAKnBd,qBAAU,WACFL,GACAA,EAAOM,GAAG,cAAc,SAAUc,GAAO,IAAD,EAC5B,OAARxB,QAAQ,IAARA,GAAA,UAAAA,EAAUkB,eAAV,SAAmBC,SAASM,MAAMD,EAAKE,cAK/C,mCACKtB,GACG,cAAC,IAAD,CACIuB,QAAS,CACLC,aAAa,EACbC,iBAAiB,EACjBC,WAAY,IACZC,MAAO,CACHC,WAAY,UACZC,WAAY,YAGpBC,UAAU,OACVC,IAAKnC,EACLoC,OAAQ,SAACZ,GACLpB,EAAOkB,KAAK,YAAa,CAAEe,MAAOb,KAEtCc,OAAQ,CAACpC,QAKdqC,yBAAKxC","file":"static/js/3.7af04e8d.chunk.js","sourcesContent":["\n\nimport React, { useRef, useEffect, memo } from 'react'\nimport { XTerm } from 'xterm-for-react'\nimport { FitAddon } from 'xterm-addon-fit';\nimport io from 'socket.io-client'\nimport './index.css';\nconst Terminal = () => {\n    const xtermRef = useRef()\n    const fitAddon = new FitAddon();\n    const socket = io(process.env.REACT_APP_SOCKET_URL, {\n        // required for CORS\n        withCredentials: true,\n    })\n    useEffect(() => {\n        if (socket) {\n            socket.on('connect', () => {\n                console.debug(`socket ${socket.id} terminal connected: ${socket.connected}`)\n                fitAddon.fit();\n                const dims = { cols: xtermRef?.current?.terminal.cols, rows: xtermRef?.current?.terminal.rows };\n                if (dims.rows) {\n                    xtermRef?.current?.terminal.focus();\n                    socket.emit('start_terminal', dims);\n                    socket.emit(\"resize\", dims);\n                }\n            })\n        }\n    })\n    useEffect(() => {\n        if (socket) {\n            return () => {\n                socket.disconnect()\n            }\n        }\n\n    })\n    useEffect(() => {\n        if (socket) {\n            socket.on(\"pty-output\", function (data) {\n                xtermRef?.current?.terminal.write(data.output);\n            });\n        }\n    })\n    return (\n        <>\n            {socket && (\n                <XTerm\n                    options={{\n                        cursorBlink: true,\n                        macOptionIsMeta: true,\n                        scrollback: 500,\n                        theme: {\n                            background: '#08081A',\n                            foreground: '#AEB6FF'\n                        }\n                    }}\n                    className='term'\n                    ref={xtermRef}\n                    onData={(data) => {\n                        socket.emit(\"pty-input\", { input: data })\n                    }}\n                    addons={[fitAddon]} />\n            )}\n        </>\n    )\n}\nexport default memo(Terminal)\n"],"sourceRoot":""}