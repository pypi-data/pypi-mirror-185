"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.wrappers_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class WinLocator(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    LOCATOR_FIELD_NUMBER: builtins.int
    MATCHER_FIELD_NUMBER: builtins.int
    MATCHERINDEX_FIELD_NUMBER: builtins.int
    locator: typing.Text
    matcher: typing.Text
    @property
    def matcherIndex(self) -> google.protobuf.wrappers_pb2.Int32Value: ...
    def __init__(self,
        *,
        locator: typing.Text = ...,
        matcher: typing.Text = ...,
        matcherIndex: typing.Optional[google.protobuf.wrappers_pb2.Int32Value] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["matcherIndex",b"matcherIndex"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["locator",b"locator","matcher",b"matcher","matcherIndex",b"matcherIndex"]) -> None: ...
global___WinLocator = WinLocator

class BaseWinParams(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ID_FIELD_NUMBER: builtins.int
    EXECUTE_FIELD_NUMBER: builtins.int
    FROMROOT_FIELD_NUMBER: builtins.int
    EXPERIMENTALDRIVER_FIELD_NUMBER: builtins.int
    id: typing.Text
    execute: typing.Text
    fromRoot: builtins.bool
    experimentalDriver: builtins.bool
    def __init__(self,
        *,
        id: typing.Text = ...,
        execute: typing.Text = ...,
        fromRoot: builtins.bool = ...,
        experimentalDriver: builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["execute",b"execute","experimentalDriver",b"experimentalDriver","fromRoot",b"fromRoot","id",b"id"]) -> None: ...
global___BaseWinParams = BaseWinParams

class WinOpen(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    WORKDIR_FIELD_NUMBER: builtins.int
    APPFILE_FIELD_NUMBER: builtins.int
    APPARGS_FIELD_NUMBER: builtins.int
    BASEPARAMS_FIELD_NUMBER: builtins.int
    workDir: typing.Text
    appFile: typing.Text
    appArgs: typing.Text
    @property
    def baseParams(self) -> global___BaseWinParams: ...
    def __init__(self,
        *,
        workDir: typing.Text = ...,
        appFile: typing.Text = ...,
        appArgs: typing.Text = ...,
        baseParams: typing.Optional[global___BaseWinParams] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["baseParams",b"baseParams"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["appArgs",b"appArgs","appFile",b"appFile","baseParams",b"baseParams","workDir",b"workDir"]) -> None: ...
global___WinOpen = WinOpen

class WinClick(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _Button:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ButtonEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[WinClick._Button.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        LEFT: WinClick._Button.ValueType  # 0
        RIGHT: WinClick._Button.ValueType  # 1
        MIDDLE: WinClick._Button.ValueType  # 2
        DOUBLE: WinClick._Button.ValueType  # 3
    class Button(_Button, metaclass=_ButtonEnumTypeWrapper):
        pass

    LEFT: WinClick.Button.ValueType  # 0
    RIGHT: WinClick.Button.ValueType  # 1
    MIDDLE: WinClick.Button.ValueType  # 2
    DOUBLE: WinClick.Button.ValueType  # 3

    class _AttachedBorder:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _AttachedBorderEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[WinClick._AttachedBorder.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        NONE: WinClick._AttachedBorder.ValueType  # 0
        LEFT_TOP: WinClick._AttachedBorder.ValueType  # 1
        LEFT_BOTTOM: WinClick._AttachedBorder.ValueType  # 2
        RIGHT_TOP: WinClick._AttachedBorder.ValueType  # 3
        RIGHT_BOTTOM: WinClick._AttachedBorder.ValueType  # 4
    class AttachedBorder(_AttachedBorder, metaclass=_AttachedBorderEnumTypeWrapper):
        pass

    NONE: WinClick.AttachedBorder.ValueType  # 0
    LEFT_TOP: WinClick.AttachedBorder.ValueType  # 1
    LEFT_BOTTOM: WinClick.AttachedBorder.ValueType  # 2
    RIGHT_TOP: WinClick.AttachedBorder.ValueType  # 3
    RIGHT_BOTTOM: WinClick.AttachedBorder.ValueType  # 4

    LOCATORS_FIELD_NUMBER: builtins.int
    BUTTON_FIELD_NUMBER: builtins.int
    XOFFSET_FIELD_NUMBER: builtins.int
    YOFFSET_FIELD_NUMBER: builtins.int
    BASEPARAMS_FIELD_NUMBER: builtins.int
    MODIFIERS_FIELD_NUMBER: builtins.int
    @property
    def locators(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___WinLocator]: ...
    button: global___WinClick.Button.ValueType
    xOffset: typing.Text
    yOffset: typing.Text
    @property
    def baseParams(self) -> global___BaseWinParams: ...
    modifiers: typing.Text
    def __init__(self,
        *,
        locators: typing.Optional[typing.Iterable[global___WinLocator]] = ...,
        button: global___WinClick.Button.ValueType = ...,
        xOffset: typing.Text = ...,
        yOffset: typing.Text = ...,
        baseParams: typing.Optional[global___BaseWinParams] = ...,
        modifiers: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["baseParams",b"baseParams"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["baseParams",b"baseParams","button",b"button","locators",b"locators","modifiers",b"modifiers","xOffset",b"xOffset","yOffset",b"yOffset"]) -> None: ...
global___WinClick = WinClick

class WinSendText(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    LOCATORS_FIELD_NUMBER: builtins.int
    TEXT_FIELD_NUMBER: builtins.int
    CLEARBEFORE_FIELD_NUMBER: builtins.int
    ISDIRECTTEXT_FIELD_NUMBER: builtins.int
    BASEPARAMS_FIELD_NUMBER: builtins.int
    @property
    def locators(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___WinLocator]: ...
    text: typing.Text
    clearBefore: typing.Text
    isDirectText: typing.Text
    @property
    def baseParams(self) -> global___BaseWinParams: ...
    def __init__(self,
        *,
        locators: typing.Optional[typing.Iterable[global___WinLocator]] = ...,
        text: typing.Text = ...,
        clearBefore: typing.Text = ...,
        isDirectText: typing.Text = ...,
        baseParams: typing.Optional[global___BaseWinParams] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["baseParams",b"baseParams"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["baseParams",b"baseParams","clearBefore",b"clearBefore","isDirectText",b"isDirectText","locators",b"locators","text",b"text"]) -> None: ...
global___WinSendText = WinSendText

class WinGetActiveWindow(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    WINDOWNAME_FIELD_NUMBER: builtins.int
    ACCESSIBILITYID_FIELD_NUMBER: builtins.int
    MAXTIMEOUT_FIELD_NUMBER: builtins.int
    BASEPARAMS_FIELD_NUMBER: builtins.int
    windowName: typing.Text
    accessibilityId: typing.Text
    maxTimeout: builtins.int
    @property
    def baseParams(self) -> global___BaseWinParams: ...
    def __init__(self,
        *,
        windowName: typing.Text = ...,
        accessibilityId: typing.Text = ...,
        maxTimeout: builtins.int = ...,
        baseParams: typing.Optional[global___BaseWinParams] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["baseParams",b"baseParams"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["accessibilityId",b"accessibilityId","baseParams",b"baseParams","maxTimeout",b"maxTimeout","windowName",b"windowName"]) -> None: ...
global___WinGetActiveWindow = WinGetActiveWindow

class MaximizeMainWindow(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    BASEPARAMS_FIELD_NUMBER: builtins.int
    @property
    def baseParams(self) -> global___BaseWinParams: ...
    def __init__(self,
        *,
        baseParams: typing.Optional[global___BaseWinParams] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["baseParams",b"baseParams"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["baseParams",b"baseParams"]) -> None: ...
global___MaximizeMainWindow = MaximizeMainWindow

class WinGetElementAttribute(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    LOCATORS_FIELD_NUMBER: builtins.int
    ATTRIBUTENAME_FIELD_NUMBER: builtins.int
    BASEPARAMS_FIELD_NUMBER: builtins.int
    @property
    def locators(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___WinLocator]: ...
    attributeName: typing.Text
    @property
    def baseParams(self) -> global___BaseWinParams: ...
    def __init__(self,
        *,
        locators: typing.Optional[typing.Iterable[global___WinLocator]] = ...,
        attributeName: typing.Text = ...,
        baseParams: typing.Optional[global___BaseWinParams] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["baseParams",b"baseParams"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["attributeName",b"attributeName","baseParams",b"baseParams","locators",b"locators"]) -> None: ...
global___WinGetElementAttribute = WinGetElementAttribute

class WinWait(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    MILLIS_FIELD_NUMBER: builtins.int
    BASEPARAMS_FIELD_NUMBER: builtins.int
    millis: builtins.int
    @property
    def baseParams(self) -> global___BaseWinParams: ...
    def __init__(self,
        *,
        millis: builtins.int = ...,
        baseParams: typing.Optional[global___BaseWinParams] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["baseParams",b"baseParams"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["baseParams",b"baseParams","millis",b"millis"]) -> None: ...
global___WinWait = WinWait

class WinToggleCheckBox(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    LOCATORS_FIELD_NUMBER: builtins.int
    EXPECTEDSTATE_FIELD_NUMBER: builtins.int
    BASEPARAMS_FIELD_NUMBER: builtins.int
    @property
    def locators(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___WinLocator]: ...
    expectedState: typing.Text
    @property
    def baseParams(self) -> global___BaseWinParams: ...
    def __init__(self,
        *,
        locators: typing.Optional[typing.Iterable[global___WinLocator]] = ...,
        expectedState: typing.Text = ...,
        baseParams: typing.Optional[global___BaseWinParams] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["baseParams",b"baseParams"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["baseParams",b"baseParams","expectedState",b"expectedState","locators",b"locators"]) -> None: ...
global___WinToggleCheckBox = WinToggleCheckBox

class WinCheckElement(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    LOCATORS_FIELD_NUMBER: builtins.int
    BASEPARAMS_FIELD_NUMBER: builtins.int
    SAVEELEMENT_FIELD_NUMBER: builtins.int
    @property
    def locators(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___WinLocator]: ...
    @property
    def baseParams(self) -> global___BaseWinParams: ...
    saveElement: builtins.bool
    def __init__(self,
        *,
        locators: typing.Optional[typing.Iterable[global___WinLocator]] = ...,
        baseParams: typing.Optional[global___BaseWinParams] = ...,
        saveElement: builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["baseParams",b"baseParams"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["baseParams",b"baseParams","locators",b"locators","saveElement",b"saveElement"]) -> None: ...
global___WinCheckElement = WinCheckElement

class WinGetWindow(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    WINDOWNAME_FIELD_NUMBER: builtins.int
    ACCESSIBILITYID_FIELD_NUMBER: builtins.int
    BASEPARAMS_FIELD_NUMBER: builtins.int
    windowName: typing.Text
    accessibilityId: typing.Text
    @property
    def baseParams(self) -> global___BaseWinParams: ...
    def __init__(self,
        *,
        windowName: typing.Text = ...,
        accessibilityId: typing.Text = ...,
        baseParams: typing.Optional[global___BaseWinParams] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["baseParams",b"baseParams"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["accessibilityId",b"accessibilityId","baseParams",b"baseParams","windowName",b"windowName"]) -> None: ...
global___WinGetWindow = WinGetWindow

class WinSearchElement(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    LOCATORS_FIELD_NUMBER: builtins.int
    BASEPARAMS_FIELD_NUMBER: builtins.int
    MULTIPLEELEMENTS_FIELD_NUMBER: builtins.int
    @property
    def locators(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___WinLocator]: ...
    @property
    def baseParams(self) -> global___BaseWinParams: ...
    multipleElements: builtins.bool
    def __init__(self,
        *,
        locators: typing.Optional[typing.Iterable[global___WinLocator]] = ...,
        baseParams: typing.Optional[global___BaseWinParams] = ...,
        multipleElements: builtins.bool = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["baseParams",b"baseParams"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["baseParams",b"baseParams","locators",b"locators","multipleElements",b"multipleElements"]) -> None: ...
global___WinSearchElement = WinSearchElement

class WinWaitForAttribute(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    LOCATORS_FIELD_NUMBER: builtins.int
    ATTRIBUTENAME_FIELD_NUMBER: builtins.int
    EXPECTEDVALUE_FIELD_NUMBER: builtins.int
    MAXTIMEOUT_FIELD_NUMBER: builtins.int
    CHECKINTERVAL_FIELD_NUMBER: builtins.int
    BASEPARAMS_FIELD_NUMBER: builtins.int
    @property
    def locators(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___WinLocator]: ...
    attributeName: typing.Text
    expectedValue: typing.Text
    maxTimeout: typing.Text
    checkInterval: typing.Text
    @property
    def baseParams(self) -> global___BaseWinParams: ...
    def __init__(self,
        *,
        locators: typing.Optional[typing.Iterable[global___WinLocator]] = ...,
        attributeName: typing.Text = ...,
        expectedValue: typing.Text = ...,
        maxTimeout: typing.Text = ...,
        checkInterval: typing.Text = ...,
        baseParams: typing.Optional[global___BaseWinParams] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["baseParams",b"baseParams"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["attributeName",b"attributeName","baseParams",b"baseParams","checkInterval",b"checkInterval","expectedValue",b"expectedValue","locators",b"locators","maxTimeout",b"maxTimeout"]) -> None: ...
global___WinWaitForAttribute = WinWaitForAttribute

class WinScrollUsingText(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    LOCATORS_FIELD_NUMBER: builtins.int
    TEXTTOSEND_FIELD_NUMBER: builtins.int
    MAXITERATIONS_FIELD_NUMBER: builtins.int
    TEXTLOCATORS_FIELD_NUMBER: builtins.int
    BASEPARAMS_FIELD_NUMBER: builtins.int
    @property
    def locators(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___WinLocator]: ...
    textToSend: typing.Text
    maxIterations: typing.Text
    @property
    def textLocators(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___WinLocator]: ...
    @property
    def baseParams(self) -> global___BaseWinParams: ...
    def __init__(self,
        *,
        locators: typing.Optional[typing.Iterable[global___WinLocator]] = ...,
        textToSend: typing.Text = ...,
        maxIterations: typing.Text = ...,
        textLocators: typing.Optional[typing.Iterable[global___WinLocator]] = ...,
        baseParams: typing.Optional[global___BaseWinParams] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["baseParams",b"baseParams"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["baseParams",b"baseParams","locators",b"locators","maxIterations",b"maxIterations","textLocators",b"textLocators","textToSend",b"textToSend"]) -> None: ...
global___WinScrollUsingText = WinScrollUsingText

class WinGetDataFromClipboard(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    BASEPARAMS_FIELD_NUMBER: builtins.int
    @property
    def baseParams(self) -> global___BaseWinParams: ...
    def __init__(self,
        *,
        baseParams: typing.Optional[global___BaseWinParams] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["baseParams",b"baseParams"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["baseParams",b"baseParams"]) -> None: ...
global___WinGetDataFromClipboard = WinGetDataFromClipboard

class WinTableClick(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    LOCATORS_FIELD_NUMBER: builtins.int
    SEARCHPARAMS_FIELD_NUMBER: builtins.int
    TARGETCOLUMN_FIELD_NUMBER: builtins.int
    COLUMNINDEX_FIELD_NUMBER: builtins.int
    BASEPARAMS_FIELD_NUMBER: builtins.int
    @property
    def locators(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___WinLocator]: ...
    searchParams: typing.Text
    targetColumn: typing.Text
    columnIndex: typing.Text
    @property
    def baseParams(self) -> global___BaseWinParams: ...
    def __init__(self,
        *,
        locators: typing.Optional[typing.Iterable[global___WinLocator]] = ...,
        searchParams: typing.Text = ...,
        targetColumn: typing.Text = ...,
        columnIndex: typing.Text = ...,
        baseParams: typing.Optional[global___BaseWinParams] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["baseParams",b"baseParams"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["baseParams",b"baseParams","columnIndex",b"columnIndex","locators",b"locators","searchParams",b"searchParams","targetColumn",b"targetColumn"]) -> None: ...
global___WinTableClick = WinTableClick

class WinTableSearch(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    LOCATORS_FIELD_NUMBER: builtins.int
    SEARCHPARAMS_FIELD_NUMBER: builtins.int
    TARGETCOLUMN_FIELD_NUMBER: builtins.int
    COLUMNINDEX_FIELD_NUMBER: builtins.int
    FIRSTROWINDEX_FIELD_NUMBER: builtins.int
    ROWNAMEFORMAT_FIELD_NUMBER: builtins.int
    ROWELEMENTNAMEFORMAT_FIELD_NUMBER: builtins.int
    ROWELEMENTVALUEFORMAT_FIELD_NUMBER: builtins.int
    SAVERESULT_FIELD_NUMBER: builtins.int
    BASEPARAMS_FIELD_NUMBER: builtins.int
    @property
    def locators(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___WinLocator]: ...
    searchParams: typing.Text
    targetColumn: typing.Text
    columnIndex: typing.Text
    firstRowIndex: typing.Text
    rowNameFormat: typing.Text
    rowElementNameFormat: typing.Text
    rowElementValueFormat: typing.Text
    saveResult: typing.Text
    @property
    def baseParams(self) -> global___BaseWinParams: ...
    def __init__(self,
        *,
        locators: typing.Optional[typing.Iterable[global___WinLocator]] = ...,
        searchParams: typing.Text = ...,
        targetColumn: typing.Text = ...,
        columnIndex: typing.Text = ...,
        firstRowIndex: typing.Text = ...,
        rowNameFormat: typing.Text = ...,
        rowElementNameFormat: typing.Text = ...,
        rowElementValueFormat: typing.Text = ...,
        saveResult: typing.Text = ...,
        baseParams: typing.Optional[global___BaseWinParams] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["baseParams",b"baseParams"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["baseParams",b"baseParams","columnIndex",b"columnIndex","firstRowIndex",b"firstRowIndex","locators",b"locators","rowElementNameFormat",b"rowElementNameFormat","rowElementValueFormat",b"rowElementValueFormat","rowNameFormat",b"rowNameFormat","saveResult",b"saveResult","searchParams",b"searchParams","targetColumn",b"targetColumn"]) -> None: ...
global___WinTableSearch = WinTableSearch

class WinWaitForElement(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    LOCATORS_FIELD_NUMBER: builtins.int
    TIMEOUT_FIELD_NUMBER: builtins.int
    BASEPARAMS_FIELD_NUMBER: builtins.int
    @property
    def locators(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___WinLocator]: ...
    timeout: typing.Text
    @property
    def baseParams(self) -> global___BaseWinParams: ...
    def __init__(self,
        *,
        locators: typing.Optional[typing.Iterable[global___WinLocator]] = ...,
        timeout: typing.Text = ...,
        baseParams: typing.Optional[global___BaseWinParams] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["baseParams",b"baseParams"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["baseParams",b"baseParams","locators",b"locators","timeout",b"timeout"]) -> None: ...
global___WinWaitForElement = WinWaitForElement

class WinGetScreenshot(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    LOCATORS_FIELD_NUMBER: builtins.int
    BASEPARAMS_FIELD_NUMBER: builtins.int
    @property
    def locators(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___WinLocator]: ...
    @property
    def baseParams(self) -> global___BaseWinParams: ...
    def __init__(self,
        *,
        locators: typing.Optional[typing.Iterable[global___WinLocator]] = ...,
        baseParams: typing.Optional[global___BaseWinParams] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["baseParams",b"baseParams"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["baseParams",b"baseParams","locators",b"locators"]) -> None: ...
global___WinGetScreenshot = WinGetScreenshot

class WinTakeScreenshot(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    LOCATORS_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    BASEPARAMS_FIELD_NUMBER: builtins.int
    @property
    def locators(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___WinLocator]: ...
    name: typing.Text
    @property
    def baseParams(self) -> global___BaseWinParams: ...
    def __init__(self,
        *,
        locators: typing.Optional[typing.Iterable[global___WinLocator]] = ...,
        name: typing.Text = ...,
        baseParams: typing.Optional[global___BaseWinParams] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["baseParams",b"baseParams"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["baseParams",b"baseParams","locators",b"locators","name",b"name"]) -> None: ...
global___WinTakeScreenshot = WinTakeScreenshot

class WinRestartDriver(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    BASEPARAMS_FIELD_NUMBER: builtins.int
    @property
    def baseParams(self) -> global___BaseWinParams: ...
    def __init__(self,
        *,
        baseParams: typing.Optional[global___BaseWinParams] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["baseParams",b"baseParams"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["baseParams",b"baseParams"]) -> None: ...
global___WinRestartDriver = WinRestartDriver

class WinGetElementColor(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    LOCATORS_FIELD_NUMBER: builtins.int
    XOFFSET_FIELD_NUMBER: builtins.int
    YOFFSET_FIELD_NUMBER: builtins.int
    BASEPARAMS_FIELD_NUMBER: builtins.int
    @property
    def locators(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___WinLocator]: ...
    xOffset: typing.Text
    yOffset: typing.Text
    @property
    def baseParams(self) -> global___BaseWinParams: ...
    def __init__(self,
        *,
        locators: typing.Optional[typing.Iterable[global___WinLocator]] = ...,
        xOffset: typing.Text = ...,
        yOffset: typing.Text = ...,
        baseParams: typing.Optional[global___BaseWinParams] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["baseParams",b"baseParams"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["baseParams",b"baseParams","locators",b"locators","xOffset",b"xOffset","yOffset",b"yOffset"]) -> None: ...
global___WinGetElementColor = WinGetElementColor

class WinDragAndDrop(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    FROMLOCATORS_FIELD_NUMBER: builtins.int
    TOLOCATORS_FIELD_NUMBER: builtins.int
    FROMOFFSETX_FIELD_NUMBER: builtins.int
    FROMOFFSETY_FIELD_NUMBER: builtins.int
    TOOFFSETX_FIELD_NUMBER: builtins.int
    TOOFFSETY_FIELD_NUMBER: builtins.int
    BASEPARAMS_FIELD_NUMBER: builtins.int
    @property
    def fromLocators(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___WinLocator]: ...
    @property
    def toLocators(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___WinLocator]: ...
    fromOffsetX: typing.Text
    fromOffsetY: typing.Text
    toOffsetX: typing.Text
    toOffsetY: typing.Text
    @property
    def baseParams(self) -> global___BaseWinParams: ...
    def __init__(self,
        *,
        fromLocators: typing.Optional[typing.Iterable[global___WinLocator]] = ...,
        toLocators: typing.Optional[typing.Iterable[global___WinLocator]] = ...,
        fromOffsetX: typing.Text = ...,
        fromOffsetY: typing.Text = ...,
        toOffsetX: typing.Text = ...,
        toOffsetY: typing.Text = ...,
        baseParams: typing.Optional[global___BaseWinParams] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["baseParams",b"baseParams"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["baseParams",b"baseParams","fromLocators",b"fromLocators","fromOffsetX",b"fromOffsetX","fromOffsetY",b"fromOffsetY","toLocators",b"toLocators","toOffsetX",b"toOffsetX","toOffsetY",b"toOffsetY"]) -> None: ...
global___WinDragAndDrop = WinDragAndDrop

class WinScrollToElement(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class _ScrollType:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType
    class _ScrollTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[WinScrollToElement._ScrollType.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        CLICK: WinScrollToElement._ScrollType.ValueType  # 0
        TEXT: WinScrollToElement._ScrollType.ValueType  # 1
    class ScrollType(_ScrollType, metaclass=_ScrollTypeEnumTypeWrapper):
        pass

    CLICK: WinScrollToElement.ScrollType.ValueType  # 0
    TEXT: WinScrollToElement.ScrollType.ValueType  # 1

    ELEMENTLOCATORS_FIELD_NUMBER: builtins.int
    ACTIONLOCATORS_FIELD_NUMBER: builtins.int
    ISELEMENTINTREE_FIELD_NUMBER: builtins.int
    ISELEMENTSHOULDBEDISPLAYED_FIELD_NUMBER: builtins.int
    SCROLLTYPE_FIELD_NUMBER: builtins.int
    MAXITERATIONS_FIELD_NUMBER: builtins.int
    CLICKOFFSETX_FIELD_NUMBER: builtins.int
    CLICKOFFSETY_FIELD_NUMBER: builtins.int
    TEXTTOSEND_FIELD_NUMBER: builtins.int
    BASEPARAMS_FIELD_NUMBER: builtins.int
    @property
    def elementLocators(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___WinLocator]: ...
    @property
    def actionLocators(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___WinLocator]: ...
    isElementInTree: builtins.bool
    isElementShouldBeDisplayed: builtins.bool
    scrollType: global___WinScrollToElement.ScrollType.ValueType
    maxIterations: builtins.int
    clickOffsetX: typing.Text
    clickOffsetY: typing.Text
    textToSend: typing.Text
    @property
    def baseParams(self) -> global___BaseWinParams: ...
    def __init__(self,
        *,
        elementLocators: typing.Optional[typing.Iterable[global___WinLocator]] = ...,
        actionLocators: typing.Optional[typing.Iterable[global___WinLocator]] = ...,
        isElementInTree: builtins.bool = ...,
        isElementShouldBeDisplayed: builtins.bool = ...,
        scrollType: global___WinScrollToElement.ScrollType.ValueType = ...,
        maxIterations: builtins.int = ...,
        clickOffsetX: typing.Text = ...,
        clickOffsetY: typing.Text = ...,
        textToSend: typing.Text = ...,
        baseParams: typing.Optional[global___BaseWinParams] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["baseParams",b"baseParams"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["actionLocators",b"actionLocators","baseParams",b"baseParams","clickOffsetX",b"clickOffsetX","clickOffsetY",b"clickOffsetY","elementLocators",b"elementLocators","isElementInTree",b"isElementInTree","isElementShouldBeDisplayed",b"isElementShouldBeDisplayed","maxIterations",b"maxIterations","scrollType",b"scrollType","textToSend",b"textToSend"]) -> None: ...
global___WinScrollToElement = WinScrollToElement

class WinColorsCollector(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    LOCATORS_FIELD_NUMBER: builtins.int
    BASEPARAMS_FIELD_NUMBER: builtins.int
    STARTXOFFSET_FIELD_NUMBER: builtins.int
    STARTYOFFSET_FIELD_NUMBER: builtins.int
    ENDXOFFSET_FIELD_NUMBER: builtins.int
    ENDYOFFSET_FIELD_NUMBER: builtins.int
    @property
    def locators(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___WinLocator]: ...
    @property
    def baseParams(self) -> global___BaseWinParams: ...
    startXOffset: typing.Text
    startYOffset: typing.Text
    endXOffset: typing.Text
    endYOffset: typing.Text
    def __init__(self,
        *,
        locators: typing.Optional[typing.Iterable[global___WinLocator]] = ...,
        baseParams: typing.Optional[global___BaseWinParams] = ...,
        startXOffset: typing.Text = ...,
        startYOffset: typing.Text = ...,
        endXOffset: typing.Text = ...,
        endYOffset: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["baseParams",b"baseParams"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["baseParams",b"baseParams","endXOffset",b"endXOffset","endYOffset",b"endYOffset","locators",b"locators","startXOffset",b"startXOffset","startYOffset",b"startYOffset"]) -> None: ...
global___WinColorsCollector = WinColorsCollector

class RhWinActionList(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    WINACTIONLIST_FIELD_NUMBER: builtins.int
    @property
    def winActionList(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___RhWinActions]: ...
    def __init__(self,
        *,
        winActionList: typing.Optional[typing.Iterable[global___RhWinActions]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["winActionList",b"winActionList"]) -> None: ...
global___RhWinActionList = RhWinActionList

class RhWinActions(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    WINOPEN_FIELD_NUMBER: builtins.int
    WINCLICK_FIELD_NUMBER: builtins.int
    WINSENDTEXT_FIELD_NUMBER: builtins.int
    WINGETACTIVEWINDOW_FIELD_NUMBER: builtins.int
    WINGETELEMENTATTRIBUTE_FIELD_NUMBER: builtins.int
    WINWAIT_FIELD_NUMBER: builtins.int
    WINTOGGLECHECKBOX_FIELD_NUMBER: builtins.int
    WINCHECKELEMENT_FIELD_NUMBER: builtins.int
    WINGETWINDOW_FIELD_NUMBER: builtins.int
    WINSEARCHELEMENT_FIELD_NUMBER: builtins.int
    WINWAITFORATTRIBUTE_FIELD_NUMBER: builtins.int
    WINSCROLLUSINGTEXT_FIELD_NUMBER: builtins.int
    WINGETDATAFROMCLIPBOARD_FIELD_NUMBER: builtins.int
    WINWAITFORELEMENT_FIELD_NUMBER: builtins.int
    WINTABLESEARCH_FIELD_NUMBER: builtins.int
    WINMAXIMIZEMAINWINDOW_FIELD_NUMBER: builtins.int
    WINGETSCREENSHOT_FIELD_NUMBER: builtins.int
    WINGETELEMENTCOLOR_FIELD_NUMBER: builtins.int
    WINDRAGANDDROP_FIELD_NUMBER: builtins.int
    WINSCROLLTOELEMENT_FIELD_NUMBER: builtins.int
    WINRESTARTDRIVER_FIELD_NUMBER: builtins.int
    WINCOLORSCOLLECTOR_FIELD_NUMBER: builtins.int
    WINTAKESCREENSHOT_FIELD_NUMBER: builtins.int
    @property
    def winOpen(self) -> global___WinOpen: ...
    @property
    def winClick(self) -> global___WinClick: ...
    @property
    def winSendText(self) -> global___WinSendText: ...
    @property
    def winGetActiveWindow(self) -> global___WinGetActiveWindow: ...
    @property
    def winGetElementAttribute(self) -> global___WinGetElementAttribute: ...
    @property
    def winWait(self) -> global___WinWait: ...
    @property
    def winToggleCheckBox(self) -> global___WinToggleCheckBox: ...
    @property
    def winCheckElement(self) -> global___WinCheckElement: ...
    @property
    def winGetWindow(self) -> global___WinGetWindow: ...
    @property
    def winSearchElement(self) -> global___WinSearchElement: ...
    @property
    def winWaitForAttribute(self) -> global___WinWaitForAttribute: ...
    @property
    def winScrollUsingText(self) -> global___WinScrollUsingText: ...
    @property
    def winGetDataFromClipboard(self) -> global___WinGetDataFromClipboard: ...
    @property
    def winWaitForElement(self) -> global___WinWaitForElement: ...
    @property
    def winTableSearch(self) -> global___WinTableSearch: ...
    @property
    def winMaximizeMainWindow(self) -> global___MaximizeMainWindow: ...
    @property
    def winGetScreenshot(self) -> global___WinGetScreenshot: ...
    @property
    def winGetElementColor(self) -> global___WinGetElementColor: ...
    @property
    def winDragAndDrop(self) -> global___WinDragAndDrop: ...
    @property
    def winScrollToElement(self) -> global___WinScrollToElement: ...
    @property
    def winRestartDriver(self) -> global___WinRestartDriver: ...
    @property
    def winColorsCollector(self) -> global___WinColorsCollector: ...
    @property
    def winTakeScreenshot(self) -> global___WinTakeScreenshot: ...
    def __init__(self,
        *,
        winOpen: typing.Optional[global___WinOpen] = ...,
        winClick: typing.Optional[global___WinClick] = ...,
        winSendText: typing.Optional[global___WinSendText] = ...,
        winGetActiveWindow: typing.Optional[global___WinGetActiveWindow] = ...,
        winGetElementAttribute: typing.Optional[global___WinGetElementAttribute] = ...,
        winWait: typing.Optional[global___WinWait] = ...,
        winToggleCheckBox: typing.Optional[global___WinToggleCheckBox] = ...,
        winCheckElement: typing.Optional[global___WinCheckElement] = ...,
        winGetWindow: typing.Optional[global___WinGetWindow] = ...,
        winSearchElement: typing.Optional[global___WinSearchElement] = ...,
        winWaitForAttribute: typing.Optional[global___WinWaitForAttribute] = ...,
        winScrollUsingText: typing.Optional[global___WinScrollUsingText] = ...,
        winGetDataFromClipboard: typing.Optional[global___WinGetDataFromClipboard] = ...,
        winWaitForElement: typing.Optional[global___WinWaitForElement] = ...,
        winTableSearch: typing.Optional[global___WinTableSearch] = ...,
        winMaximizeMainWindow: typing.Optional[global___MaximizeMainWindow] = ...,
        winGetScreenshot: typing.Optional[global___WinGetScreenshot] = ...,
        winGetElementColor: typing.Optional[global___WinGetElementColor] = ...,
        winDragAndDrop: typing.Optional[global___WinDragAndDrop] = ...,
        winScrollToElement: typing.Optional[global___WinScrollToElement] = ...,
        winRestartDriver: typing.Optional[global___WinRestartDriver] = ...,
        winColorsCollector: typing.Optional[global___WinColorsCollector] = ...,
        winTakeScreenshot: typing.Optional[global___WinTakeScreenshot] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["action",b"action","winCheckElement",b"winCheckElement","winClick",b"winClick","winColorsCollector",b"winColorsCollector","winDragAndDrop",b"winDragAndDrop","winGetActiveWindow",b"winGetActiveWindow","winGetDataFromClipboard",b"winGetDataFromClipboard","winGetElementAttribute",b"winGetElementAttribute","winGetElementColor",b"winGetElementColor","winGetScreenshot",b"winGetScreenshot","winGetWindow",b"winGetWindow","winMaximizeMainWindow",b"winMaximizeMainWindow","winOpen",b"winOpen","winRestartDriver",b"winRestartDriver","winScrollToElement",b"winScrollToElement","winScrollUsingText",b"winScrollUsingText","winSearchElement",b"winSearchElement","winSendText",b"winSendText","winTableSearch",b"winTableSearch","winTakeScreenshot",b"winTakeScreenshot","winToggleCheckBox",b"winToggleCheckBox","winWait",b"winWait","winWaitForAttribute",b"winWaitForAttribute","winWaitForElement",b"winWaitForElement"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["action",b"action","winCheckElement",b"winCheckElement","winClick",b"winClick","winColorsCollector",b"winColorsCollector","winDragAndDrop",b"winDragAndDrop","winGetActiveWindow",b"winGetActiveWindow","winGetDataFromClipboard",b"winGetDataFromClipboard","winGetElementAttribute",b"winGetElementAttribute","winGetElementColor",b"winGetElementColor","winGetScreenshot",b"winGetScreenshot","winGetWindow",b"winGetWindow","winMaximizeMainWindow",b"winMaximizeMainWindow","winOpen",b"winOpen","winRestartDriver",b"winRestartDriver","winScrollToElement",b"winScrollToElement","winScrollUsingText",b"winScrollUsingText","winSearchElement",b"winSearchElement","winSendText",b"winSendText","winTableSearch",b"winTableSearch","winTakeScreenshot",b"winTakeScreenshot","winToggleCheckBox",b"winToggleCheckBox","winWait",b"winWait","winWaitForAttribute",b"winWaitForAttribute","winWaitForElement",b"winWaitForElement"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["action",b"action"]) -> typing.Optional[typing_extensions.Literal["winOpen","winClick","winSendText","winGetActiveWindow","winGetElementAttribute","winWait","winToggleCheckBox","winCheckElement","winGetWindow","winSearchElement","winWaitForAttribute","winScrollUsingText","winGetDataFromClipboard","winWaitForElement","winTableSearch","winMaximizeMainWindow","winGetScreenshot","winGetElementColor","winDragAndDrop","winScrollToElement","winRestartDriver","winColorsCollector","winTakeScreenshot"]]: ...
global___RhWinActions = RhWinActions
