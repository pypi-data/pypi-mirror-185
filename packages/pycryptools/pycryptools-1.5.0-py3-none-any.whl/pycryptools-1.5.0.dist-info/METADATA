Metadata-Version: 2.1
Name: pycryptools
Version: 1.5.0
Summary: PyCrypTools is a python library that brings us a series of algorithms to encrypt and decrypt inputs.
Home-page: https://pypi.org/project/pycryptools/
Author: Carlos Padilla
Author-email: cpadlab@gmail.com
License: CC0-1.0 License
Project-URL: Source Code, https://github.com/14wual/pycryptools/
Project-URL: Bug Tracker, https://github.com/14wual/pycryptools/issues
Project-URL: Documentation, https://pycryptools.readthedocs.io/
Keywords: encrypt decrypt
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Operating System :: OS Independent
Description-Content-Type: text/markdown
License-File: LICENSE

# Algorithms

[PyCrypTools](https://github.com/14wual/pycryptools) currently has 4 algorithm.

1. [AtBash](https://github.com/14wual/pycryptools/blob/main/about/algorithms.md#atbash)
2. [Scytale](https://github.com/14wual/pycryptools/blob/main/about/algorithms.md#scytale)
3. [Polybios](https://github.com/14wual/pycryptools/blob/main/about/algorithms.md#polybios)
4. [Caesar](https://github.com/14wual/pycryptools/blob/main/about/README.md#caesar)
5. [Alberti](https://github.com/14wual/pycryptools/blob/main/about/README.md#alberti-disk)

### AtBash

Usage:
```python
from pycryptools.atbash import atbash

message = "example"

encrypt = atbash.encrypt(message)
print(encrypt)

decrypt = atbash.decrypt(encrypt)
print(decrypt)
```

Atbash is a monoalphabetic substitution encryption algorithm. This means that it uses a single substitution table to encode all the letters in the original message. In the case of Atbash encryption, the substitution table is built from a given keyword and consists of reversing the order of the letters of the alphabet to substitute each letter of the original message.

### Scytale

Usage: 
```python
from pycryptools.scytale import scytale

message = "example"
keyword = "random"

encrypt = scytale.encrypt(message, keyword)
print(encrypt)

decrypt = scytale.decrypt(encrypt, keyword)
print(decrypt)
```

To encrypt a message, the message is written on a strip of paper or a stick and wrapped around the cylindrical object using the keyword to determine the number of columns. The message is then read across the columns, from top to bottom. The result is an encrypted message in which the letters appear in a different order than in the original message.

To decrypt the message, you need to know the keyword used to encrypt it, since it determines the number of columns and the order in which the letters must be read.

### Polybios

Usage: 
```python
from pycryptools.polybios import polybios

message = "example"

encrypt = polybios.encrypt(message)
print(encrypt)

decrypt = polybios.decrypt(encrypt)
print(decrypt)
```

The Polybios cipher is a polyalphabetic substitution cipher technique that uses a 5x5 table to assign a pair of numerical coordinates to each letter of the alphabet. The table is built using a 5x5 matrix where the letters of the alphabet are placed in a specific order, rather than in alphabetical order.

### Alberti Disk

Usage:
```python
from pycryptools.alberti import alberti

message = "example"
outer_alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
inner_alphabet = "XZYWVUTSRQPONMLKJIHGFEDCBA"

encrypt = alberti.encrypt(message, inner_alphabet, outer_alphabet)
print(encrypt)

decrypt = alberti.decrypt(encrypt, inner_alphabet, outer_alphabet)
print(decrypt)
```

The Alberti disk is a mechanical device used to encrypt and decrypt messages using the polyalphabetic substitution cipher. It was invented by the Italian humanist and scientist Leon Battista Alberti in the 15th century. The disk consists of two overlapping wheels, each with an alphabet printed on its rim. The top wheel, known as the recorder wheel, is free to rotate and has a hole in the center through which the bottom wheel, known as the decryption wheel, can be seen.
