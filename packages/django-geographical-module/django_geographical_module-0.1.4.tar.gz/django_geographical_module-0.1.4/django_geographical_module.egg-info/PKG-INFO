Metadata-Version: 2.1
Name: django-geographical-module
Version: 0.1.4
Summary: A Django app that helps managing geographical information in multiple levels, in a standardized way across countries/continents etc.
Home-page: https://github.com/CardoAI/django-geographical-module
Author: Kristi Kotini, Elivjo Xhafi
Author-email: hello@cardoai.com
License: MIT (X11)
Platform: UNKNOWN
Classifier: Environment :: Web Environment
Classifier: Framework :: Django
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Topic :: Internet :: WWW/HTTP :: Dynamic Content
Requires-Python: >=3.9
License-File: LICENSE

==========================
Django Geographical Module
==========================

Quick start
-----------

1. Add "geographical_module" to your INSTALLED_APPS setting like this::

    INSTALLED_APPS = [
        ...
        'geographical_module',
    ]

2. Run ``python manage.py migrate`` to create the models.

3. Run ``python manage.py load_geo_records`` to populate the database with the initial records.

4. Run ``python manage.py load_nuts_postcode_records`` to populate the database with the NUTS-postcode relationship.


