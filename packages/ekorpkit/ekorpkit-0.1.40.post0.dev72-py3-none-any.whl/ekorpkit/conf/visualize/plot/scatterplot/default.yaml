_func_: snsplot
_name_: scatterplot
axno: 0
datano: 0
x:
y:
secondary_y: false
secondary_to: 0
hue:
# vector or key in data
# Grouping variable that will produce points with different colors. Can be either categorical or numeric, although color mapping will behave differently in latter case.
size:
# vector or key in data
# Grouping variable that will produce points with different sizes. Can be either categorical or numeric, although size mapping will behave differently in latter case.
style:
# vector or key in data
# Grouping variable that will produce points with different markers. Can have a numeric dtype but will always be treated as categorical.
palette:
# string, list, dict, or matplotlib.colors.Colormap
# Method for choosing the colors to use when mapping the hue semantic. String values are passed to color_palette(). List or dict values imply categorical mapping, while a colormap object implies numeric mapping.
hue_order:
# vector of strings
# Specify the order of processing and plotting for categorical levels of the hue semantic.
hue_norm:
# tuple or matplotlib.colors.Normalize
# Either a pair of values that set the normalization range in data units or an object that will map from data units into a [0, 1] interval. Usage implies numeric mapping.
sizes:
# list, dict, or tuple
# An object that determines how sizes are chosen when size is used. It can always be a list of size values or a dict mapping levels of the size variable to sizes. When size is numeric, it can also be a tuple specifying the minimum and maximum size to use such that other values are normalized within this range.
size_order:
# list
# Specified order for appearance of the size variable levels, otherwise they are determined from the data. Not relevant when the size variable is numeric.
size_norm:
# tuple or Normalize object
# Normalization in data units for scaling plot objects when the size variable is numeric.
markers:
# boolean, list, or dictionary
# Object determining how to draw the markers for different levels of the style variable. Setting to True will use default markers, or you can pass a list of markers or a dictionary mapping levels of the style variable to markers. Setting to False will draw marker-less lines. Markers are specified as in matplotlib.
style_order:
# list
# Specified order for appearance of the style variable levels otherwise they are determined from the data. Not relevant when the style variable is numeric.
alpha:
# float
# Proportional opacity of the points.
legend: false
# “auto”, “brief”, “full”, or False
rcParams:
