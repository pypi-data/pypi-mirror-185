# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: autodiscoveryservice.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x1a\x61utodiscoveryservice.proto\x12\x08\x64\x61takube\"\x95\x02\n\x12SchemaDiscoveryDTO\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\"\n\x06tables\x18\x02 \x03(\x0b\x32\x12.datakube.TableDTO\x12-\n\x0c\x64\x65pendencies\x18\x03 \x03(\x0b\x32\x17.datakube.DependencyDTO\x12\x16\n\x0enumberOfTables\x18\x04 \x01(\x05\x12\x17\n\x0fnumberOfRecords\x18\x05 \x01(\x03\x12\x17\n\x0fnumberOfColumns\x18\x06 \x01(\x05\x12\x10\n\x08\x64\x61taSize\x18\x07 \x01(\x02\x12\x1c\n\x14numberOfDependencies\x18\x08 \x01(\x05\x12\x13\n\x0bisValidated\x18\t \x01(\x08\x12\x0f\n\x07version\x18\x63 \x01(\t\"\xc0\x04\n\x08TableDTO\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0c\n\x04size\x18\x02 \x01(\x04\x12$\n\x07\x63olumns\x18\x03 \x03(\x0b\x32\x13.datakube.ColumnDTO\x12\x0f\n\x07isFixed\x18\x05 \x01(\x08\x12\x31\n\nsequential\x18\x06 \x01(\x0b\x32\x1d.datakube.TableDTO.Sequential\x12!\n\nprimaryKey\x18\x07 \x01(\x0b\x32\r.datakube.Key\x12\"\n\x0b\x66oreignKeys\x18\x08 \x03(\x0b\x32\r.datakube.Key\x12(\n\nCandidates\x18\n \x01(\x0b\x32\x14.datakube.Candidates\x12.\n\rmappingConfig\x18\x0b \x01(\x0b\x32\x17.datakube.MappingConfig\x12\x10\n\x08\x45ntities\x18\x0c \x03(\r\x12\x10\n\x08\x64\x61taSize\x18\r \x01(\x02\x1a\xa9\x01\n\nSequential\x12\x35\n\x0cisSequential\x18\x01 \x01(\x0e\x32\x1f.datakube.TableDTO.IsSequential\x12+\n\x0esequenceSource\x18\x02 \x01(\x0e\x32\x13.datakube.KeySource\x12\x0f\n\x07groupBy\x18\x03 \x03(\t\x12\x0e\n\x06sortBy\x18\x04 \x03(\t\x12\x16\n\x0esequenceLength\x18\x05 \x01(\x02\"=\n\x0cIsSequential\x12\x06\n\x02NO\x10\x00\x12\x07\n\x03YES\x10\x01\x12\r\n\tSUSPECTED\x10\x02\x12\r\n\tNOT_VALID\x10\x03\"\x8f\x01\n\nCandidates\x12*\n\nprimaryKey\x18\x01 \x03(\x0b\x32\x16.datakube.CandidateKey\x12+\n\x0b\x66oreignKeys\x18\x02 \x03(\x0b\x32\x16.datakube.CandidateKey\x12(\n\x0c\x65rrorSummery\x18\x62 \x03(\x0b\x32\x12.datakube.ErrorDTO\"E\n\rMappingConfig\x12\x1c\n\x14shouldMaskIdentifier\x18\x01 \x01(\x08\x12\x16\n\x0eshouldMaskText\x18\x02 \x01(\x08\"E\n\x0c\x43\x61ndidateKey\x12\x12\n\ncolumnName\x18\x01 \x03(\t\x12!\n\x05state\x18\x02 \x01(\x0b\x32\x12.datakube.StateDTO\"M\n\x03Key\x12\r\n\x05keyId\x18\x01 \x01(\r\x12\x12\n\ncolumnName\x18\x02 \x03(\t\x12#\n\x06source\x18\x03 \x01(\x0e\x32\x13.datakube.KeySource\"\xb8\x04\n\tColumnDTO\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0f\n\x07rawType\x18\x02 \x01(\t\x12\x13\n\x0buniqueCount\x18\x04 \x01(\x04\x12\x14\n\x0cnotNullCount\x18\x05 \x01(\x04\x12\x11\n\tminDigits\x18\x06 \x01(\x04\x12\x11\n\tmaxDigits\x18\x07 \x01(\x04\x12\x17\n\x0fisRunningNumber\x18\x08 \x01(\x08\x12\x10\n\x08minValue\x18\t \x01(\t\x12\x10\n\x08maxValue\x18\n \x01(\t\x12\x0f\n\x07isFixed\x18\x0b \x01(\x08\x12\x16\n\x0e\x61vailableRoles\x18\x0c \x03(\t\x12\x0c\n\x04role\x18\r \x01(\t\x12\x0f\n\x07\x66ormats\x18\x0e \x03(\t\x12\x14\n\x0cinferredType\x18\x0f \x01(\t\x12+\n\nstatistics\x18\x10 \x01(\x0b\x32\x17.datakube.StatisticsDTO\x12!\n\x05state\x18\x11 \x01(\x0b\x32\x12.datakube.StateDTO\x12\x13\n\x0bisSupported\x18\x12 \x01(\x08\x12\r\n\x05train\x18\x13 \x01(\x08\x12\x16\n\x0e\x61vailableTypes\x18\x14 \x03(\t\x12\x15\n\rfloatPercison\x18\x15 \x01(\x04\x12\x10\n\x08\x45ntityID\x18\x16 \x01(\r\x12/\n\x0c\x63ustomParams\x18\x17 \x01(\x0b\x32\x19.datakube.CustomParamsDTO\x12\x10\n\x08isIgnore\x18\x18 \x01(\x08\x12(\n\x0c\x65rrorSummery\x18\x62 \x03(\x0b\x32\x12.datakube.ErrorDTO\"[\n\x08StateDTO\x12\x1f\n\x06status\x18\x01 \x01(\x0e\x32\x0f.datakube.State\x12.\n\rchangedFields\x18\x02 \x03(\x0e\x32\x17.datakube.MutableFields\"\xd6\x01\n\rDependencyDTO\x12#\n\x04left\x18\x01 \x01(\x0b\x32\x15.datakube.TableRefDTO\x12$\n\x05right\x18\x02 \x01(\x0b\x32\x15.datakube.TableRefDTO\x12-\n\x10\x64\x65pendencySource\x18\x03 \x01(\x0e\x32\x13.datakube.KeySource\x12!\n\x05state\x18\x04 \x01(\x0b\x32\x12.datakube.StateDTO\x12(\n\x0c\x65rrorSummery\x18\x62 \x03(\x0b\x32\x12.datakube.ErrorDTO\"\x95\x03\n\x0bTableRefDTO\x12\x11\n\ttableName\x18\x01 \x01(\t\x12\r\n\x05keyId\x18\x02 \x01(\r\x12.\n\x07keyType\x18\x03 \x01(\x0e\x32\x1d.datakube.TableRefDTO.KeyType\x12>\n\x0f\x63\x61rdinalityType\x18\x04 \x01(\x0e\x32%.datakube.TableRefDTO.CardinalityType\x12@\n\x10relationshipType\x18\x05 \x01(\x0e\x32&.datakube.TableRefDTO.RelationshipType\"3\n\x07KeyType\x12\x08\n\x04NONE\x10\x00\x12\x06\n\x02PK\x10\x01\x12\x06\n\x02\x46K\x10\x02\x12\x0e\n\nComposedPK\x10\x03\"4\n\x0f\x43\x61rdinalityType\x12\x07\n\x03One\x10\x00\x12\x08\n\x04Many\x10\x01\x12\x0e\n\nUnassigned\x10\x03\"G\n\x10RelationshipType\x12\t\n\x05\x45qual\x10\x00\x12\x0b\n\x07Overlap\x10\x01\x12\x0c\n\x08\x43ontains\x10\x02\x12\r\n\tContained\x10\x03\"G\n\x08\x45rrorDTO\x12(\n\nerrorState\x18\x01 \x01(\x0e\x32\x14.datakube.ErrorState\x12\x11\n\terrorInfo\x18\x02 \x01(\t\"\x9d\x01\n\rStatisticsDTO\x12\x17\n\x0ftypeConsistency\x18\x01 \x01(\x02\x12\x14\n\x0c\x61verageValue\x18\x02 \x01(\x02\x12\x19\n\x11standardDeviation\x18\x03 \x01(\x02\x12\x0f\n\x07\x65ntropy\x18\x04 \x01(\x02\x12\x31\n\rtypeRoleScore\x18\x05 \x03(\x0b\x32\x1a.datakube.TypeRoleScoreDTO\"d\n\x10TypeRoleScoreDTO\x12\x0c\n\x04type\x18\x01 \x01(\t\x12\x17\n\x0ftypeConsistency\x18\x02 \x01(\x02\x12)\n\troleScore\x18\x03 \x03(\x0b\x32\x16.datakube.RoleScoreDTO\"+\n\x0cRoleScoreDTO\x12\x0c\n\x04role\x18\x01 \x01(\t\x12\r\n\x05score\x18\x02 \x01(\x02\"#\n\x0f\x43ustomParamsDTO\x12\x10\n\x08isFreeze\x18\x01 \x01(\x08\"I\n\x12SchemaHistogramDTO\x12\x33\n\x0etableHistogram\x18\x01 \x03(\x0b\x32\x1b.datakube.TableHistogramDTO\"^\n\x11TableHistogramDTO\x12\x11\n\ttableName\x18\x01 \x01(\t\x12\x36\n\x10\x63olumnsHistogram\x18\x02 \x03(\x0b\x32\x1c.datakube.ColumnHistogramDTO\"r\n\x12\x43olumnHistogramDTO\x12\x12\n\ncolumnName\x18\x01 \x01(\t\x12,\n\x07\x65ntries\x18\x02 \x03(\x0b\x32\x1b.datakube.HistogramEntryDTO\x12\x0c\n\x04type\x18\x03 \x01(\t\x12\x0c\n\x04role\x18\x04 \x01(\t\"A\n\x11HistogramEntryDTO\x12\r\n\x05value\x18\x01 \x01(\t\x12\x0e\n\x06isNull\x18\x02 \x01(\x08\x12\r\n\x05\x63ount\x18\x03 \x01(\x05*M\n\tKeySource\x12\x08\n\x04NONE\x10\x00\x12\x0c\n\x08METADATA\x10\x01\x12\x0e\n\nDISCOVERED\x10\x02\x12\n\n\x06MANUAL\x10\x03\x12\x0c\n\x08INTERNAL\x10\x04*N\n\x05State\x12\t\n\x05VALID\x10\x00\x12\r\n\tNOT_VALID\x10\x01\x12\x11\n\rUSER_MODIFIED\x10\x02\x12\x18\n\x14MODIFICATION_FAILURE\x10\x03*r\n\rMutableFields\x12\x19\n\x15\x43HANGED_COLUMN_FORMAT\x10\x00\x12\x17\n\x13\x43HANGED_COLUMN_TYPE\x10\x01\x12\x17\n\x13\x43HANGED_COLUMN_ROLE\x10\x02\x12\x14\n\x10\x41\x44\x44\x45\x44_DEPENDENCY\x10\x03*\x88\x01\n\nErrorState\x12\x11\n\rGENERAL_ERROR\x10\x00\x12\x14\n\x10\x43ONNECTION_ERROR\x10\x01\x12\x10\n\x0cMEMORY_ERROR\x10\x02\x12\x1a\n\x16\x41UTHENTICATION_FAILURE\x10\x03\x12\x11\n\rPARSING_ERROR\x10\x04\x12\x10\n\x0cUNKNOWN_TYPE\x10\x05\x42k\nMcom.datomize.datomizer.backend.components.management.dto.autodiscoveryserviceB\x1a\x41utoDiscoveryServiceProtosb\x06proto3')

_KEYSOURCE = DESCRIPTOR.enum_types_by_name['KeySource']
KeySource = enum_type_wrapper.EnumTypeWrapper(_KEYSOURCE)
_STATE = DESCRIPTOR.enum_types_by_name['State']
State = enum_type_wrapper.EnumTypeWrapper(_STATE)
_MUTABLEFIELDS = DESCRIPTOR.enum_types_by_name['MutableFields']
MutableFields = enum_type_wrapper.EnumTypeWrapper(_MUTABLEFIELDS)
_ERRORSTATE = DESCRIPTOR.enum_types_by_name['ErrorState']
ErrorState = enum_type_wrapper.EnumTypeWrapper(_ERRORSTATE)
NONE = 0
METADATA = 1
DISCOVERED = 2
MANUAL = 3
INTERNAL = 4
VALID = 0
NOT_VALID = 1
USER_MODIFIED = 2
MODIFICATION_FAILURE = 3
CHANGED_COLUMN_FORMAT = 0
CHANGED_COLUMN_TYPE = 1
CHANGED_COLUMN_ROLE = 2
ADDED_DEPENDENCY = 3
GENERAL_ERROR = 0
CONNECTION_ERROR = 1
MEMORY_ERROR = 2
AUTHENTICATION_FAILURE = 3
PARSING_ERROR = 4
UNKNOWN_TYPE = 5


_SCHEMADISCOVERYDTO = DESCRIPTOR.message_types_by_name['SchemaDiscoveryDTO']
_TABLEDTO = DESCRIPTOR.message_types_by_name['TableDTO']
_TABLEDTO_SEQUENTIAL = _TABLEDTO.nested_types_by_name['Sequential']
_CANDIDATES = DESCRIPTOR.message_types_by_name['Candidates']
_MAPPINGCONFIG = DESCRIPTOR.message_types_by_name['MappingConfig']
_CANDIDATEKEY = DESCRIPTOR.message_types_by_name['CandidateKey']
_KEY = DESCRIPTOR.message_types_by_name['Key']
_COLUMNDTO = DESCRIPTOR.message_types_by_name['ColumnDTO']
_STATEDTO = DESCRIPTOR.message_types_by_name['StateDTO']
_DEPENDENCYDTO = DESCRIPTOR.message_types_by_name['DependencyDTO']
_TABLEREFDTO = DESCRIPTOR.message_types_by_name['TableRefDTO']
_ERRORDTO = DESCRIPTOR.message_types_by_name['ErrorDTO']
_STATISTICSDTO = DESCRIPTOR.message_types_by_name['StatisticsDTO']
_TYPEROLESCOREDTO = DESCRIPTOR.message_types_by_name['TypeRoleScoreDTO']
_ROLESCOREDTO = DESCRIPTOR.message_types_by_name['RoleScoreDTO']
_CUSTOMPARAMSDTO = DESCRIPTOR.message_types_by_name['CustomParamsDTO']
_SCHEMAHISTOGRAMDTO = DESCRIPTOR.message_types_by_name['SchemaHistogramDTO']
_TABLEHISTOGRAMDTO = DESCRIPTOR.message_types_by_name['TableHistogramDTO']
_COLUMNHISTOGRAMDTO = DESCRIPTOR.message_types_by_name['ColumnHistogramDTO']
_HISTOGRAMENTRYDTO = DESCRIPTOR.message_types_by_name['HistogramEntryDTO']
_TABLEDTO_ISSEQUENTIAL = _TABLEDTO.enum_types_by_name['IsSequential']
_TABLEREFDTO_KEYTYPE = _TABLEREFDTO.enum_types_by_name['KeyType']
_TABLEREFDTO_CARDINALITYTYPE = _TABLEREFDTO.enum_types_by_name['CardinalityType']
_TABLEREFDTO_RELATIONSHIPTYPE = _TABLEREFDTO.enum_types_by_name['RelationshipType']
SchemaDiscoveryDTO = _reflection.GeneratedProtocolMessageType('SchemaDiscoveryDTO', (_message.Message,), {
  'DESCRIPTOR' : _SCHEMADISCOVERYDTO,
  '__module__' : 'autodiscoveryservice_pb2'
  # @@protoc_insertion_point(class_scope:datakube.SchemaDiscoveryDTO)
  })
_sym_db.RegisterMessage(SchemaDiscoveryDTO)

TableDTO = _reflection.GeneratedProtocolMessageType('TableDTO', (_message.Message,), {

  'Sequential' : _reflection.GeneratedProtocolMessageType('Sequential', (_message.Message,), {
    'DESCRIPTOR' : _TABLEDTO_SEQUENTIAL,
    '__module__' : 'autodiscoveryservice_pb2'
    # @@protoc_insertion_point(class_scope:datakube.TableDTO.Sequential)
    })
  ,
  'DESCRIPTOR' : _TABLEDTO,
  '__module__' : 'autodiscoveryservice_pb2'
  # @@protoc_insertion_point(class_scope:datakube.TableDTO)
  })
_sym_db.RegisterMessage(TableDTO)
_sym_db.RegisterMessage(TableDTO.Sequential)

Candidates = _reflection.GeneratedProtocolMessageType('Candidates', (_message.Message,), {
  'DESCRIPTOR' : _CANDIDATES,
  '__module__' : 'autodiscoveryservice_pb2'
  # @@protoc_insertion_point(class_scope:datakube.Candidates)
  })
_sym_db.RegisterMessage(Candidates)

MappingConfig = _reflection.GeneratedProtocolMessageType('MappingConfig', (_message.Message,), {
  'DESCRIPTOR' : _MAPPINGCONFIG,
  '__module__' : 'autodiscoveryservice_pb2'
  # @@protoc_insertion_point(class_scope:datakube.MappingConfig)
  })
_sym_db.RegisterMessage(MappingConfig)

CandidateKey = _reflection.GeneratedProtocolMessageType('CandidateKey', (_message.Message,), {
  'DESCRIPTOR' : _CANDIDATEKEY,
  '__module__' : 'autodiscoveryservice_pb2'
  # @@protoc_insertion_point(class_scope:datakube.CandidateKey)
  })
_sym_db.RegisterMessage(CandidateKey)

Key = _reflection.GeneratedProtocolMessageType('Key', (_message.Message,), {
  'DESCRIPTOR' : _KEY,
  '__module__' : 'autodiscoveryservice_pb2'
  # @@protoc_insertion_point(class_scope:datakube.Key)
  })
_sym_db.RegisterMessage(Key)

ColumnDTO = _reflection.GeneratedProtocolMessageType('ColumnDTO', (_message.Message,), {
  'DESCRIPTOR' : _COLUMNDTO,
  '__module__' : 'autodiscoveryservice_pb2'
  # @@protoc_insertion_point(class_scope:datakube.ColumnDTO)
  })
_sym_db.RegisterMessage(ColumnDTO)

StateDTO = _reflection.GeneratedProtocolMessageType('StateDTO', (_message.Message,), {
  'DESCRIPTOR' : _STATEDTO,
  '__module__' : 'autodiscoveryservice_pb2'
  # @@protoc_insertion_point(class_scope:datakube.StateDTO)
  })
_sym_db.RegisterMessage(StateDTO)

DependencyDTO = _reflection.GeneratedProtocolMessageType('DependencyDTO', (_message.Message,), {
  'DESCRIPTOR' : _DEPENDENCYDTO,
  '__module__' : 'autodiscoveryservice_pb2'
  # @@protoc_insertion_point(class_scope:datakube.DependencyDTO)
  })
_sym_db.RegisterMessage(DependencyDTO)

TableRefDTO = _reflection.GeneratedProtocolMessageType('TableRefDTO', (_message.Message,), {
  'DESCRIPTOR' : _TABLEREFDTO,
  '__module__' : 'autodiscoveryservice_pb2'
  # @@protoc_insertion_point(class_scope:datakube.TableRefDTO)
  })
_sym_db.RegisterMessage(TableRefDTO)

ErrorDTO = _reflection.GeneratedProtocolMessageType('ErrorDTO', (_message.Message,), {
  'DESCRIPTOR' : _ERRORDTO,
  '__module__' : 'autodiscoveryservice_pb2'
  # @@protoc_insertion_point(class_scope:datakube.ErrorDTO)
  })
_sym_db.RegisterMessage(ErrorDTO)

StatisticsDTO = _reflection.GeneratedProtocolMessageType('StatisticsDTO', (_message.Message,), {
  'DESCRIPTOR' : _STATISTICSDTO,
  '__module__' : 'autodiscoveryservice_pb2'
  # @@protoc_insertion_point(class_scope:datakube.StatisticsDTO)
  })
_sym_db.RegisterMessage(StatisticsDTO)

TypeRoleScoreDTO = _reflection.GeneratedProtocolMessageType('TypeRoleScoreDTO', (_message.Message,), {
  'DESCRIPTOR' : _TYPEROLESCOREDTO,
  '__module__' : 'autodiscoveryservice_pb2'
  # @@protoc_insertion_point(class_scope:datakube.TypeRoleScoreDTO)
  })
_sym_db.RegisterMessage(TypeRoleScoreDTO)

RoleScoreDTO = _reflection.GeneratedProtocolMessageType('RoleScoreDTO', (_message.Message,), {
  'DESCRIPTOR' : _ROLESCOREDTO,
  '__module__' : 'autodiscoveryservice_pb2'
  # @@protoc_insertion_point(class_scope:datakube.RoleScoreDTO)
  })
_sym_db.RegisterMessage(RoleScoreDTO)

CustomParamsDTO = _reflection.GeneratedProtocolMessageType('CustomParamsDTO', (_message.Message,), {
  'DESCRIPTOR' : _CUSTOMPARAMSDTO,
  '__module__' : 'autodiscoveryservice_pb2'
  # @@protoc_insertion_point(class_scope:datakube.CustomParamsDTO)
  })
_sym_db.RegisterMessage(CustomParamsDTO)

SchemaHistogramDTO = _reflection.GeneratedProtocolMessageType('SchemaHistogramDTO', (_message.Message,), {
  'DESCRIPTOR' : _SCHEMAHISTOGRAMDTO,
  '__module__' : 'autodiscoveryservice_pb2'
  # @@protoc_insertion_point(class_scope:datakube.SchemaHistogramDTO)
  })
_sym_db.RegisterMessage(SchemaHistogramDTO)

TableHistogramDTO = _reflection.GeneratedProtocolMessageType('TableHistogramDTO', (_message.Message,), {
  'DESCRIPTOR' : _TABLEHISTOGRAMDTO,
  '__module__' : 'autodiscoveryservice_pb2'
  # @@protoc_insertion_point(class_scope:datakube.TableHistogramDTO)
  })
_sym_db.RegisterMessage(TableHistogramDTO)

ColumnHistogramDTO = _reflection.GeneratedProtocolMessageType('ColumnHistogramDTO', (_message.Message,), {
  'DESCRIPTOR' : _COLUMNHISTOGRAMDTO,
  '__module__' : 'autodiscoveryservice_pb2'
  # @@protoc_insertion_point(class_scope:datakube.ColumnHistogramDTO)
  })
_sym_db.RegisterMessage(ColumnHistogramDTO)

HistogramEntryDTO = _reflection.GeneratedProtocolMessageType('HistogramEntryDTO', (_message.Message,), {
  'DESCRIPTOR' : _HISTOGRAMENTRYDTO,
  '__module__' : 'autodiscoveryservice_pb2'
  # @@protoc_insertion_point(class_scope:datakube.HistogramEntryDTO)
  })
_sym_db.RegisterMessage(HistogramEntryDTO)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\nMcom.datomize.datomizer.backend.components.management.dto.autodiscoveryserviceB\032AutoDiscoveryServiceProtos'
  _KEYSOURCE._serialized_start=3326
  _KEYSOURCE._serialized_end=3403
  _STATE._serialized_start=3405
  _STATE._serialized_end=3483
  _MUTABLEFIELDS._serialized_start=3485
  _MUTABLEFIELDS._serialized_end=3599
  _ERRORSTATE._serialized_start=3602
  _ERRORSTATE._serialized_end=3738
  _SCHEMADISCOVERYDTO._serialized_start=41
  _SCHEMADISCOVERYDTO._serialized_end=318
  _TABLEDTO._serialized_start=321
  _TABLEDTO._serialized_end=897
  _TABLEDTO_SEQUENTIAL._serialized_start=665
  _TABLEDTO_SEQUENTIAL._serialized_end=834
  _TABLEDTO_ISSEQUENTIAL._serialized_start=836
  _TABLEDTO_ISSEQUENTIAL._serialized_end=897
  _CANDIDATES._serialized_start=900
  _CANDIDATES._serialized_end=1043
  _MAPPINGCONFIG._serialized_start=1045
  _MAPPINGCONFIG._serialized_end=1114
  _CANDIDATEKEY._serialized_start=1116
  _CANDIDATEKEY._serialized_end=1185
  _KEY._serialized_start=1187
  _KEY._serialized_end=1264
  _COLUMNDTO._serialized_start=1267
  _COLUMNDTO._serialized_end=1835
  _STATEDTO._serialized_start=1837
  _STATEDTO._serialized_end=1928
  _DEPENDENCYDTO._serialized_start=1931
  _DEPENDENCYDTO._serialized_end=2145
  _TABLEREFDTO._serialized_start=2148
  _TABLEREFDTO._serialized_end=2553
  _TABLEREFDTO_KEYTYPE._serialized_start=2375
  _TABLEREFDTO_KEYTYPE._serialized_end=2426
  _TABLEREFDTO_CARDINALITYTYPE._serialized_start=2428
  _TABLEREFDTO_CARDINALITYTYPE._serialized_end=2480
  _TABLEREFDTO_RELATIONSHIPTYPE._serialized_start=2482
  _TABLEREFDTO_RELATIONSHIPTYPE._serialized_end=2553
  _ERRORDTO._serialized_start=2555
  _ERRORDTO._serialized_end=2626
  _STATISTICSDTO._serialized_start=2629
  _STATISTICSDTO._serialized_end=2786
  _TYPEROLESCOREDTO._serialized_start=2788
  _TYPEROLESCOREDTO._serialized_end=2888
  _ROLESCOREDTO._serialized_start=2890
  _ROLESCOREDTO._serialized_end=2933
  _CUSTOMPARAMSDTO._serialized_start=2935
  _CUSTOMPARAMSDTO._serialized_end=2970
  _SCHEMAHISTOGRAMDTO._serialized_start=2972
  _SCHEMAHISTOGRAMDTO._serialized_end=3045
  _TABLEHISTOGRAMDTO._serialized_start=3047
  _TABLEHISTOGRAMDTO._serialized_end=3141
  _COLUMNHISTOGRAMDTO._serialized_start=3143
  _COLUMNHISTOGRAMDTO._serialized_end=3257
  _HISTOGRAMENTRYDTO._serialized_start=3259
  _HISTOGRAMENTRYDTO._serialized_end=3324
# @@protoc_insertion_point(module_scope)
