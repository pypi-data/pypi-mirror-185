Metadata-Version: 2.1
Name: yolov8tohf
Version: 0.0.2
Summary: Huggingface utilities for Ultralytics/YOLOv8.
Author: 
License: MIT
Keywords: machine-learning,deep-learning,ml,vision,yolov8,object-detection,huggingface,datasets
Classifier: Development Status :: 5 - Production/Stable
Classifier: Operating System :: OS Independent
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: Programming Language :: Python :: 3
Classifier: Topic :: Software Development :: Libraries
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Education
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: huggingface-hub
Requires-Dist: fire
Requires-Dist: ultralytics
Provides-Extra: dev
Requires-Dist: black (==21.7b0) ; extra == 'dev'
Requires-Dist: flake8 (==3.9.2) ; extra == 'dev'
Requires-Dist: isort (==5.9.2) ; extra == 'dev'
Requires-Dist: click (==8.0.4) ; extra == 'dev'
Requires-Dist: importlib-metadata (<4.3,>=1.1.0) ; (python_version < "3.8") and extra == 'dev'
Provides-Extra: tests
Requires-Dist: black (==21.7b0) ; extra == 'tests'
Requires-Dist: flake8 (==3.9.2) ; extra == 'tests'
Requires-Dist: isort (==5.9.2) ; extra == 'tests'
Requires-Dist: click (==8.0.4) ; extra == 'tests'
Requires-Dist: importlib-metadata (<4.3,>=1.1.0) ; (python_version < "3.8") and extra == 'tests'

# YOLOv8 to ðŸ¤—
HuggingFace utilities for Ultralytics/YOLOv8

## installation

```bash
pip install yolov8tohf
```

## push to hub

```bash
yolov8tohf --exp_dir runs/detect/train --hf_model_id HF_USERNAME/MODELNAME
```

## load from hub

```python
from yolov8tohf import YOLO

# load model
model = YOLO('fcakyon/yolov8s-test')

# set model parameters
model.overrides['conf'] = 0.25  # NMS confidence threshold
model.overrides['iou'] = 0.45  # NMS IoU threshold
model.overrides['agnostic_nms'] = False  # NMS class-agnostic
model.overrides['max_det'] = 1000  # maximum number of detections per image

# set image
img = 'https://github.com/ultralytics/yolov5/raw/master/data/images/zidane.jpg'

# perform inference
model.predict(img, imgsz=640)
```
