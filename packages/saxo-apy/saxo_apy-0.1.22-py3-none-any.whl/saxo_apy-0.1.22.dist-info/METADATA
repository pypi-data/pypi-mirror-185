Metadata-Version: 2.1
Name: saxo-apy
Version: 0.1.22
Summary: Python Client for Saxo Bank OpenAPI
Project-URL: Homepage, https://github.com/gidven/saxo-openapi-client-python
Project-URL: Documentation, https://github.com/gidven/saxo-openapi-client-python/blob/main/samples/01_get_started.ipynb
Project-URL: Source, https://github.com/gidven/saxo-openapi-client-python
Project-URL: Changelog, https://github.com/gidven/saxo-openapi-client-python/releases
Author-email: Gid van der Ven <giddevanderven@gmail.com>
License-Expression: MIT
License-File: LICENSE
Classifier: Development Status :: 4 - Beta
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Requires-Python: >=3.7
Requires-Dist: flask==2.2.2
Requires-Dist: httpx==0.23.1
Requires-Dist: loguru==0.6.0
Requires-Dist: pydantic==1.10.2
Requires-Dist: websockets==10.4
Description-Content-Type: text/markdown

```
   _____         __   __  ____                   _____  __     __
  / ____|   /\   \ \ / / / __ \            /\   |  __ \ \ \   / /
 | (___    /  \   \ V / | |  | |  ____    /  \  | |__) | \ \_/ / 
  \___ \  / /\ \   ) (  | |  | | |____|  / /\ \ |  ___/   \   /  
  ____) |/ ____ \ / _ \ | |__| |        / ____ \| |        | |   
 |_____//_/    \//_/ \_\ \____/        /_/    \/|_|        |_|   
```
[![python](https://img.shields.io/pypi/pyversions/saxo-apy?style=flat-square)](https://github.com/gidven/saxo-openapi-client-python)
[![pypi](https://img.shields.io/pypi/v/saxo-apy?style=flat-square)](https://pypi.org/project/saxo-apy)
[![license](https://img.shields.io/github/license/gidven/saxo-openapi-client-python?style=flat-square)](https://github.com/gidven/saxo-openapi-client-python/blob/main/LICENSE)

# Saxo-APY: Python Client for Saxo Bank OpenAPI

*A lightweight Python client for hassle-free tinkering with Saxo OpenAPI.*

> NOTE: This Python package was created by an enthusiast as a learning project. None of the contents in this repository are maintained by Saxo Bank, and Saxo Bank does not guarantee correctness of the provided implementation.


## Features

- [x] Authentication and session management with Saxo SSO
    - Supports OAuth 2.0 `Code` grant type
    - Works seamlessly in both `SIM` and `LIVE` environments
    - Automated handling of callback from SSO (optional)
    - Headless authentication for deployed applications (optional)
    - Keep sessions and active websockets alive by refreshing access tokens via asyncio
- [x] Read operations (`GET` requests)
- [x] Write operations (`POST`, `PUT`, `PATCH`, `DELETE` requests)
- [x] Supports streaming and decoding of streaming messages
- [x] Error handling with comprehensive exception messages


## Installation

`pip install saxo-apy`


## Requirements

- Python 3.7+
- An OpenAPI application registered [on Saxo Bank's Developer Portal](https://www.developer.saxo/openapi/appmanagement)
    - [Create a free developer account](https://www.developer.saxo/accounts/sim/signup) if you don't have one already.
    - Ensure the application is set up with `Grant Type: Code` as authentication flow.
    - At least 1 localhost redirect needs to be defined such as `http://localhost:12321/redirect` (for development/testing purposes)
    - (Optional) enable trading permissions for the app


## Usage


> See [Get Started](/samples/01_get_started.ipynb) for an in-depth example!

Copy your apps's config by clicking `Copy App Object` on the Developer Portal app details page.

The client requires this dictionary to be provided when initializing:

```Python
from saxo_apy import SaxoOpenAPIClient

# copy app config here:
config = {
    "AppName": "Your OpenAPI App",
    "AppKey": "...",
    "AuthorizationEndpoint": "...",
    "TokenEndpoint": "...",
    "GrantType": "Code",
    "OpenApiBaseUrl": "...",
    "RedirectUrls": [
        "...
    ],
    "AppSecret": "..."
}

client = SaxoOpenAPIClient(config)
client.login()
me = client.get("/port/v1/users/me")
print(me)

> {'ClientKey': 'U8SNV3JLdN4gzcQfmThXJA==',
> 'Culture': 'en-US',
> 'Language': 'en',
> ...
```

See [the samples](/samples/README.md) for loads more examples on how to use the client.


## Dependencies

This package requires 4 dependencies:

- `pydantic`, for parsing config and JSON responses 
- `Flask`, to run a local server and catch the callback from Saxo SSO
- `httpx`, for sending requests to OpenAPI and managing the client session
- `websockets`, for setting up a websocket connection to Saxo's streaming service
- `loguru`, to handle logging


## Notes

The client supports OAuth Code flow and will automatically spin up a server to listen for the redirect from Saxo SSO. At least 1 `localhost` redirect needs to be defined in application config for this purpose.

By default, the client will use the _first available localhost redirect_ to run the server on (typically only 1 exists in the config).

The client validates redirect urls in application config automatically. OAuth 2.0 code flow requires a fixed port to be specified on the redirect url. In case this is incorrectly configured, an error message will guide you to ensure app config is correct with OpenAPI:

```
one or more redirect urls have no port configured, which is required for grant type 'Code' - ensure a port is configured in the app config object for each url (example: http://localhost:23432/redirect)
```
