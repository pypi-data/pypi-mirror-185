# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import authz_sdk.api_pb2 as api__pb2


class ApiStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Authenticate = channel.unary_unary(
                '/authz.Api/Authenticate',
                request_serializer=api__pb2.AuthenticateRequest.SerializeToString,
                response_deserializer=api__pb2.AuthenticateResponse.FromString,
                )
        self.Check = channel.unary_unary(
                '/authz.Api/Check',
                request_serializer=api__pb2.CheckRequest.SerializeToString,
                response_deserializer=api__pb2.CheckResponse.FromString,
                )
        self.PolicyCreate = channel.unary_unary(
                '/authz.Api/PolicyCreate',
                request_serializer=api__pb2.PolicyCreateRequest.SerializeToString,
                response_deserializer=api__pb2.PolicyCreateResponse.FromString,
                )
        self.PolicyGet = channel.unary_unary(
                '/authz.Api/PolicyGet',
                request_serializer=api__pb2.PolicyGetRequest.SerializeToString,
                response_deserializer=api__pb2.PolicyGetResponse.FromString,
                )
        self.PolicyDelete = channel.unary_unary(
                '/authz.Api/PolicyDelete',
                request_serializer=api__pb2.PolicyDeleteRequest.SerializeToString,
                response_deserializer=api__pb2.PolicyDeleteResponse.FromString,
                )
        self.PolicyUpdate = channel.unary_unary(
                '/authz.Api/PolicyUpdate',
                request_serializer=api__pb2.PolicyUpdateRequest.SerializeToString,
                response_deserializer=api__pb2.PolicyUpdateResponse.FromString,
                )
        self.PrincipalCreate = channel.unary_unary(
                '/authz.Api/PrincipalCreate',
                request_serializer=api__pb2.PrincipalCreateRequest.SerializeToString,
                response_deserializer=api__pb2.PrincipalCreateResponse.FromString,
                )
        self.PrincipalGet = channel.unary_unary(
                '/authz.Api/PrincipalGet',
                request_serializer=api__pb2.PrincipalGetRequest.SerializeToString,
                response_deserializer=api__pb2.PrincipalGetResponse.FromString,
                )
        self.PrincipalDelete = channel.unary_unary(
                '/authz.Api/PrincipalDelete',
                request_serializer=api__pb2.PrincipalDeleteRequest.SerializeToString,
                response_deserializer=api__pb2.PrincipalDeleteResponse.FromString,
                )
        self.PrincipalUpdate = channel.unary_unary(
                '/authz.Api/PrincipalUpdate',
                request_serializer=api__pb2.PrincipalUpdateRequest.SerializeToString,
                response_deserializer=api__pb2.PrincipalUpdateResponse.FromString,
                )
        self.ResourceCreate = channel.unary_unary(
                '/authz.Api/ResourceCreate',
                request_serializer=api__pb2.ResourceCreateRequest.SerializeToString,
                response_deserializer=api__pb2.ResourceCreateResponse.FromString,
                )
        self.ResourceGet = channel.unary_unary(
                '/authz.Api/ResourceGet',
                request_serializer=api__pb2.ResourceGetRequest.SerializeToString,
                response_deserializer=api__pb2.ResourceGetResponse.FromString,
                )
        self.ResourceDelete = channel.unary_unary(
                '/authz.Api/ResourceDelete',
                request_serializer=api__pb2.ResourceDeleteRequest.SerializeToString,
                response_deserializer=api__pb2.ResourceDeleteResponse.FromString,
                )
        self.ResourceUpdate = channel.unary_unary(
                '/authz.Api/ResourceUpdate',
                request_serializer=api__pb2.ResourceUpdateRequest.SerializeToString,
                response_deserializer=api__pb2.ResourceUpdateResponse.FromString,
                )
        self.RoleCreate = channel.unary_unary(
                '/authz.Api/RoleCreate',
                request_serializer=api__pb2.RoleCreateRequest.SerializeToString,
                response_deserializer=api__pb2.RoleCreateResponse.FromString,
                )
        self.RoleGet = channel.unary_unary(
                '/authz.Api/RoleGet',
                request_serializer=api__pb2.RoleGetRequest.SerializeToString,
                response_deserializer=api__pb2.RoleGetResponse.FromString,
                )
        self.RoleDelete = channel.unary_unary(
                '/authz.Api/RoleDelete',
                request_serializer=api__pb2.RoleDeleteRequest.SerializeToString,
                response_deserializer=api__pb2.RoleDeleteResponse.FromString,
                )
        self.RoleUpdate = channel.unary_unary(
                '/authz.Api/RoleUpdate',
                request_serializer=api__pb2.RoleUpdateRequest.SerializeToString,
                response_deserializer=api__pb2.RoleUpdateResponse.FromString,
                )


class ApiServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Authenticate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Check(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PolicyCreate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PolicyGet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PolicyDelete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PolicyUpdate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PrincipalCreate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PrincipalGet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PrincipalDelete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PrincipalUpdate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResourceCreate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResourceGet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResourceDelete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResourceUpdate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RoleCreate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RoleGet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RoleDelete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RoleUpdate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ApiServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Authenticate': grpc.unary_unary_rpc_method_handler(
                    servicer.Authenticate,
                    request_deserializer=api__pb2.AuthenticateRequest.FromString,
                    response_serializer=api__pb2.AuthenticateResponse.SerializeToString,
            ),
            'Check': grpc.unary_unary_rpc_method_handler(
                    servicer.Check,
                    request_deserializer=api__pb2.CheckRequest.FromString,
                    response_serializer=api__pb2.CheckResponse.SerializeToString,
            ),
            'PolicyCreate': grpc.unary_unary_rpc_method_handler(
                    servicer.PolicyCreate,
                    request_deserializer=api__pb2.PolicyCreateRequest.FromString,
                    response_serializer=api__pb2.PolicyCreateResponse.SerializeToString,
            ),
            'PolicyGet': grpc.unary_unary_rpc_method_handler(
                    servicer.PolicyGet,
                    request_deserializer=api__pb2.PolicyGetRequest.FromString,
                    response_serializer=api__pb2.PolicyGetResponse.SerializeToString,
            ),
            'PolicyDelete': grpc.unary_unary_rpc_method_handler(
                    servicer.PolicyDelete,
                    request_deserializer=api__pb2.PolicyDeleteRequest.FromString,
                    response_serializer=api__pb2.PolicyDeleteResponse.SerializeToString,
            ),
            'PolicyUpdate': grpc.unary_unary_rpc_method_handler(
                    servicer.PolicyUpdate,
                    request_deserializer=api__pb2.PolicyUpdateRequest.FromString,
                    response_serializer=api__pb2.PolicyUpdateResponse.SerializeToString,
            ),
            'PrincipalCreate': grpc.unary_unary_rpc_method_handler(
                    servicer.PrincipalCreate,
                    request_deserializer=api__pb2.PrincipalCreateRequest.FromString,
                    response_serializer=api__pb2.PrincipalCreateResponse.SerializeToString,
            ),
            'PrincipalGet': grpc.unary_unary_rpc_method_handler(
                    servicer.PrincipalGet,
                    request_deserializer=api__pb2.PrincipalGetRequest.FromString,
                    response_serializer=api__pb2.PrincipalGetResponse.SerializeToString,
            ),
            'PrincipalDelete': grpc.unary_unary_rpc_method_handler(
                    servicer.PrincipalDelete,
                    request_deserializer=api__pb2.PrincipalDeleteRequest.FromString,
                    response_serializer=api__pb2.PrincipalDeleteResponse.SerializeToString,
            ),
            'PrincipalUpdate': grpc.unary_unary_rpc_method_handler(
                    servicer.PrincipalUpdate,
                    request_deserializer=api__pb2.PrincipalUpdateRequest.FromString,
                    response_serializer=api__pb2.PrincipalUpdateResponse.SerializeToString,
            ),
            'ResourceCreate': grpc.unary_unary_rpc_method_handler(
                    servicer.ResourceCreate,
                    request_deserializer=api__pb2.ResourceCreateRequest.FromString,
                    response_serializer=api__pb2.ResourceCreateResponse.SerializeToString,
            ),
            'ResourceGet': grpc.unary_unary_rpc_method_handler(
                    servicer.ResourceGet,
                    request_deserializer=api__pb2.ResourceGetRequest.FromString,
                    response_serializer=api__pb2.ResourceGetResponse.SerializeToString,
            ),
            'ResourceDelete': grpc.unary_unary_rpc_method_handler(
                    servicer.ResourceDelete,
                    request_deserializer=api__pb2.ResourceDeleteRequest.FromString,
                    response_serializer=api__pb2.ResourceDeleteResponse.SerializeToString,
            ),
            'ResourceUpdate': grpc.unary_unary_rpc_method_handler(
                    servicer.ResourceUpdate,
                    request_deserializer=api__pb2.ResourceUpdateRequest.FromString,
                    response_serializer=api__pb2.ResourceUpdateResponse.SerializeToString,
            ),
            'RoleCreate': grpc.unary_unary_rpc_method_handler(
                    servicer.RoleCreate,
                    request_deserializer=api__pb2.RoleCreateRequest.FromString,
                    response_serializer=api__pb2.RoleCreateResponse.SerializeToString,
            ),
            'RoleGet': grpc.unary_unary_rpc_method_handler(
                    servicer.RoleGet,
                    request_deserializer=api__pb2.RoleGetRequest.FromString,
                    response_serializer=api__pb2.RoleGetResponse.SerializeToString,
            ),
            'RoleDelete': grpc.unary_unary_rpc_method_handler(
                    servicer.RoleDelete,
                    request_deserializer=api__pb2.RoleDeleteRequest.FromString,
                    response_serializer=api__pb2.RoleDeleteResponse.SerializeToString,
            ),
            'RoleUpdate': grpc.unary_unary_rpc_method_handler(
                    servicer.RoleUpdate,
                    request_deserializer=api__pb2.RoleUpdateRequest.FromString,
                    response_serializer=api__pb2.RoleUpdateResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'authz.Api', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Api(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Authenticate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/authz.Api/Authenticate',
            api__pb2.AuthenticateRequest.SerializeToString,
            api__pb2.AuthenticateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Check(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/authz.Api/Check',
            api__pb2.CheckRequest.SerializeToString,
            api__pb2.CheckResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PolicyCreate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/authz.Api/PolicyCreate',
            api__pb2.PolicyCreateRequest.SerializeToString,
            api__pb2.PolicyCreateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PolicyGet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/authz.Api/PolicyGet',
            api__pb2.PolicyGetRequest.SerializeToString,
            api__pb2.PolicyGetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PolicyDelete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/authz.Api/PolicyDelete',
            api__pb2.PolicyDeleteRequest.SerializeToString,
            api__pb2.PolicyDeleteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PolicyUpdate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/authz.Api/PolicyUpdate',
            api__pb2.PolicyUpdateRequest.SerializeToString,
            api__pb2.PolicyUpdateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PrincipalCreate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/authz.Api/PrincipalCreate',
            api__pb2.PrincipalCreateRequest.SerializeToString,
            api__pb2.PrincipalCreateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PrincipalGet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/authz.Api/PrincipalGet',
            api__pb2.PrincipalGetRequest.SerializeToString,
            api__pb2.PrincipalGetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PrincipalDelete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/authz.Api/PrincipalDelete',
            api__pb2.PrincipalDeleteRequest.SerializeToString,
            api__pb2.PrincipalDeleteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PrincipalUpdate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/authz.Api/PrincipalUpdate',
            api__pb2.PrincipalUpdateRequest.SerializeToString,
            api__pb2.PrincipalUpdateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ResourceCreate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/authz.Api/ResourceCreate',
            api__pb2.ResourceCreateRequest.SerializeToString,
            api__pb2.ResourceCreateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ResourceGet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/authz.Api/ResourceGet',
            api__pb2.ResourceGetRequest.SerializeToString,
            api__pb2.ResourceGetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ResourceDelete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/authz.Api/ResourceDelete',
            api__pb2.ResourceDeleteRequest.SerializeToString,
            api__pb2.ResourceDeleteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ResourceUpdate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/authz.Api/ResourceUpdate',
            api__pb2.ResourceUpdateRequest.SerializeToString,
            api__pb2.ResourceUpdateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RoleCreate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/authz.Api/RoleCreate',
            api__pb2.RoleCreateRequest.SerializeToString,
            api__pb2.RoleCreateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RoleGet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/authz.Api/RoleGet',
            api__pb2.RoleGetRequest.SerializeToString,
            api__pb2.RoleGetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RoleDelete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/authz.Api/RoleDelete',
            api__pb2.RoleDeleteRequest.SerializeToString,
            api__pb2.RoleDeleteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RoleUpdate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/authz.Api/RoleUpdate',
            api__pb2.RoleUpdateRequest.SerializeToString,
            api__pb2.RoleUpdateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
