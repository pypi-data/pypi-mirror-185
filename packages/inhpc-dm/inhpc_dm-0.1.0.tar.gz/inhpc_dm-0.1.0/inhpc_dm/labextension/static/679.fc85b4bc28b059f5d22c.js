"use strict";(self.webpackChunkinhpc_dm=self.webpackChunkinhpc_dm||[]).push([[679],{679:(t,e,i)=>{i.r(e),i.d(e,{default:()=>W});var n=i(714),o=i(740),s=i(773),a=i(0),l=i(305),r=i(544),d=i(918),c=i(992),h=i(813),_=i(15);class p extends h.FileBrowser{constructor(t,e){super(t),this.title.label=e}getListing(){return this.listing}getSelectedDirectory(){var t=this.listing.model.path,e=this.listing.selectedItems().next();return e&&"directory"==e.type&&(t=e.path),t}getCurrentPath(){return this.listing.model.path}async copyFileFrom(t){console.log("File is: "+t);var e=this.getCurrentPath();let i;console.log("I'm here: "+this.getCurrentPath()),await this.listing.model.cd("/"),i=_.PathExt.dirname(t),await this.listing.model.cd(i),console.log("I'm here: "+this.getCurrentPath()),this.listing.clearSelectedItems();var n=_.PathExt.basename(t);this.selectItemByName(n).catch((()=>{console.log("File "+_.PathExt.basename(t)+" on path "+t+" not found!")})),console.log(n+" is selected "),this.copy(),console.log("copied "),console.log(" preparing for cd to "+e),await this.listing.model.cd("/"),console.log("I'm here: "+this.getCurrentPath()),await this.listing.model.cd(e),console.log("I'm here: "+this.getCurrentPath()),this.paste()}}async function u(t="",e={}){const i=l.ServerConnection.makeSettings(),n=_.URLExt.join(i.baseUrl,"inhpc_dm",t);let o;try{o=await l.ServerConnection.makeRequest(n,e,i)}catch(t){if(t instanceof Error)throw new l.ServerConnection.NetworkError(t);{let t;throw t=new TypeError("Serverside was not available, something went wrong"),console.log("Serverside was not available, something went wrong"),new l.ServerConnection.NetworkError(t)}}if(!o.ok){let t;t=o.statusText;try{t+=JSON.stringify(await o.json())}catch(t){}throw new l.ServerConnection.ResponseError(o,t)}return await o.json()}class g extends c.Widget{constructor(t=[],e=""){super(),this.addClass("jp-Input-Dialog"),this._list=document.createElement("select"),t.forEach(((t,e)=>{const i=document.createElement("option");i.value=t,i.textContent=t,this._list.appendChild(i)}));const i=document.createElement("datalist");i.id="input-dialog-items",i.appendChild(this._list),this._input_endpoint=document.createElement("input"),this._input_endpoint.classList.add("jp-mod-styled"),this._input_endpoint.id="jp-dialog-input-id_ep",this._input_endpoint.type="list",this._input_endpoint.value="",this._input_endpoint.setAttribute("list",i.id),this.node.appendChild(i);const n=document.createElement("label");n.textContent="UFTP endpoint",n.htmlFor=this._input_endpoint.id,this.node.appendChild(n),this.node.appendChild(this._input_endpoint),this._input_remoteDir=document.createElement("input"),this._input_remoteDir.classList.add("jp-mod-styled"),this._input_remoteDir.id="jp-dialog-input-id_rd";const o=document.createElement("label");o.textContent="Remote directory",o.htmlFor=this._input_remoteDir.id,this.node.appendChild(o),this.node.appendChild(this._input_remoteDir),this._input_localDir=document.createElement("input"),this._input_localDir.classList.add("jp-mod-styled"),this._input_localDir.id="jp-dialog-input-id_ld",this._input_localDir.value=e;const s=document.createElement("label");s.textContent="Mount point",s.htmlFor=this._input_localDir.id,this.node.appendChild(s),this.node.appendChild(this._input_localDir),this._input_username=document.createElement("input"),this._input_username.classList.add("jp-mod-styled"),this._input_username.id="jp-dialog-input-id_un";const a=document.createElement("label");a.textContent="Username",a.htmlFor=this._input_username.id,this.node.appendChild(a),this.node.appendChild(this._input_username),this._input_password=document.createElement("input"),this._input_password.classList.add("jp-mod-styled"),this._input_password.type="password",this._input_password.id="jp-dialog-input-id_pw";const l=document.createElement("label");l.textContent="Password",l.htmlFor=this._input_password.id,this.node.appendChild(l),this.node.appendChild(this._input_password),this._input_token=document.createElement("input"),this._input_token.classList.add("jp-mod-styled"),this._input_token.id="jp-dialog-input-id_tok";const r=document.createElement("label");r.textContent="OAuth token",r.htmlFor=this._input_token.id,this.node.appendChild(r),this.node.appendChild(this._input_token),this._input_identity=document.createElement("input"),this._input_identity.classList.add("jp-mod-styled"),this._input_identity.id="jp-dialog-input-id_identity";const d=document.createElement("label");d.textContent="Path to private key",d.htmlFor=this._input_identity.id,this.node.appendChild(d),this.node.appendChild(this._input_identity)}getValue(){return{endpoint:this._input_endpoint.value,remote_directory:this._input_remoteDir.value,mount_point:this._input_localDir.value,credentials:{username:this._input_username.value,password:this._input_password.value,token:this._input_token.value,identity:this._input_identity.value}}}}class m extends c.Widget{static createNode(){let t=document.createElement("div"),e=document.createElement("div"),i=document.createElement("textarea");return i.placeholder="Placeholder...",e.appendChild(i),t.appendChild(e),t}constructor(t){super({node:m.createNode()}),this.setFlag(c.Widget.Flag.DisallowLayout),this.addClass("content"),this.addClass(t.toLowerCase()),this.title.label=t,this.title.closable=!0,this.title.caption=`Long description for: ${t}`}get textareaNode(){return this.node.getElementsByTagName("textarea")[0]}onActivateRequest(t){this.isAttached&&this.textareaNode.focus()}}class f extends c.Widget{constructor(t){super(),this._settings={uftp_endpoints:["https://localhost:9000/rest/auth/TEST","https://gridftp-fr1.hww.hlrs.de:9000/rest/auth/HLRS","https://uftp.fz-juelich.de:9112/UFTP_Auth/rest/auth/JUDAC","https://datagw03.supermuc.lrz.de:9000/rest/auth/DATAGW"]},this.addClass("my-dmWidget"),this._actionToolbar=new o.Toolbar,this._actionToolbar.id="actionToolbar";const e=new o.ToolbarButton({icon:r.settingsIcon,onClick:async()=>{try{const t=await u("mount");console.log(t),this._logWidget.textareaNode.value=JSON.stringify(t)}catch(t){console.error(`Error on GET /inhpc_dm/mount".\n${t}`)}},tooltip:"Get mounts information"});this._actionToolbar.addItem("mount_info",e),this._top_panel=new c.SplitPanel({orientation:"horizontal"}),this._top_panel.id="top_panel",this._top_panel.addClass("dm_Widget-main"),this._top_panel.addWidget(this._actionToolbar);let i=new a.DocumentRegistry;const n=new l.ServiceManager;let d=new s.DocumentManager({registry:i,manager:n,opener}),_=new h.FilterFileBrowserModel({manager:d});this._fbWidget_l=new p({id:"filebrowser-left",model:_},"Filebrowser left");const g=new b(this._fbWidget_l,this._settings.uftp_endpoints);this._fbWidget_l.toolbar.addItem("mountBtn",g);const f=new w(this._fbWidget_l);this._fbWidget_l.toolbar.addItem("unmountBtn",f),this._infoWidget_l=new m("Info"),this._infoWidget_l.id="infoWidget_l",this._infoWidget_l.textareaNode.value="<n/a>",this._infoWidget_l.textareaNode.style.width="95%",this._fbPanel_l=new c.SplitPanel({orientation:"vertical",spacing:1}),this._fbPanel_l.id="fb_panel_l",this._fbPanel_l.addWidget(this._fbWidget_l),this._fbPanel_l.addWidget(this._infoWidget_l),this._fbPanel_l.setRelativeSizes([85,15]);let W=new h.FilterFileBrowserModel({manager:d});this._fbWidget_r=new p({id:"filebrowser-right",model:W},"Filebrowser right");const C=new b(this._fbWidget_r,this._settings.uftp_endpoints);this._fbWidget_r.toolbar.addItem("mountBtn",C);const P=new w(this._fbWidget_r);this._fbWidget_r.toolbar.addItem("unmountBtn",P),this._infoWidget_r=new m("Info"),this._infoWidget_r.id="infoWidget_r",this._infoWidget_r.textareaNode.value="<n/a>",this._infoWidget_r.textareaNode.style.width="95%",this._fbPanel_r=new c.SplitPanel({orientation:"vertical",spacing:1}),this._fbPanel_r.id="fb_panel_r",this._fbPanel_r.addWidget(this._fbWidget_r),this._fbPanel_r.addWidget(this._infoWidget_r),this._fbPanel_r.setRelativeSizes([90,10]);const v=new y(this._fbWidget_l,this._fbWidget_r,"--\x3e","Copy left selected to right directory directly"),x=new y(this._fbWidget_r,this._fbWidget_l,"<--","Copy right selected to left directory directly");this._transferBoxPanel=new c.BoxPanel({direction:"top-to-bottom"}),this._transferBoxPanel.id="transferToolbar",this._transferBoxPanel.node.style.maxWidth="100px",this._transferBoxPanel.node.style.maxHeight="100px",this._transferBoxPanel.node.style.top="200px",this._transferBoxPanel.addWidget(v),this._transferBoxPanel.addWidget(x),this._fbPanel=new c.BoxPanel({direction:"left-to-right",spacing:1}),this._fbPanel.id="fb_panel",this._fbPanel.addClass("dm_Widget-main"),this._fbPanel.addWidget(this._fbPanel_l),this._fbPanel.addWidget(this._transferBoxPanel),this._fbPanel.addWidget(this._fbPanel_r),this._logWidget=new m("Log"),this._logWidget.id="logWidget",this._logWidget.textareaNode.value="Log output",this._logWidget.textareaNode.style.width="95%",this._logWidget.textareaNode.style.height="95%",this._mainLayout=this.layout=new c.BoxLayout,this._panel_collection=new c.SplitPanel({orientation:"vertical"}),this._panel_collection.id="panel_collection",this._panel_collection.addWidget(this._top_panel),this._panel_collection.addWidget(this._fbPanel),this._panel_collection.addWidget(this._logWidget),this._panel_collection.setRelativeSizes([10,80,10]),this._mainLayout.addWidget(this._panel_collection)}formatBytes(t,e=2){if(0===t)return"0 Bytes";const i=e<0?0:e,n=Math.floor(Math.log(t)/Math.log(1024));return parseFloat((t/Math.pow(1024,n)).toFixed(i))+" "+["Bytes","KB","MB","GB","TB","PB","EB","ZB","YB"][n]}print_object_details(t){console.log("Print Object Details"),console.log(Object.getOwnPropertyNames(t).sort())}eventSignalHandler(t,e){if("DirListing"===t.constructor.name)if("click"===e){var i="Selected Files Info",n=0;(0,d.each)(this._fbWidget_l.getListing().selectedItems(),(t=>{t.size&&(n+=t.size),t.size&&(i=i+"\n"+t.path+"("+this.formatBytes(t.size)+")")})),i=i+"\nOverall Size: "+this.formatBytes(n),i="Selected Files Info",n=0,(0,d.each)(this._fbWidget_r.getListing().selectedItems(),(t=>{t.size&&(n+=t.size),t.size&&(i=i+"\n"+t.path+"("+this.formatBytes(t.size)+")")})),i=i+"\nOverall Size: "+this.formatBytes(n)}else console.log("Unknown in DirListing: ",e);else console.log("Unknown event sender: ",t.constructor.name)}}class b extends o.ToolbarButton{constructor(t,e){super({icon:r.addIcon,tooltip:"Mount remote filesystem via UFTP",onClick:()=>{this.handle_click(t,e)}})}handle_click(t,e){var i,n;console.log(this),(i=e,n=t.getSelectedDirectory(),function(t={}){return new o.Dialog(t).launch()}({body:new g(i,n),buttons:[o.Dialog.cancelButton({label:"Cancel"}),o.Dialog.okButton({label:"OK"})],focusNodeSelector:"input"})).then((async t=>{var e=JSON.stringify(t.value);if("null"!=e){console.log("mount params: "+e);try{const t=await u("mount",{body:e,method:"POST"});console.log(t),"OK"==t.status?(0,o.showDialog)({title:"OK",body:"Mount successful",buttons:[o.Dialog.okButton()]}):(0,o.showErrorMessage)("Error",t.error_info)}catch(t){console.error(`Error on POST /inhpc_dm/mount".\n${t}`),(0,o.showErrorMessage)("Error",t)}}else console.log("Mount cancelled")}))}}class w extends o.ToolbarButton{constructor(t){super({icon:r.clearIcon,tooltip:"Unmount remote filesystem",onClick:()=>{this.handle_click(t)}})}async handle_click(t){console.log(this);var e=t.getSelectedDirectory(),i=JSON.stringify({mount_point:e});console.log("mount params: "+i);try{const t=await u("unmount",{body:i,method:"POST"});console.log(t),"OK"==t.status?(0,o.showDialog)({title:"OK",body:"Unmount successful",buttons:[o.Dialog.okButton()]}):(0,o.showErrorMessage)("Error",t.error_info)}catch(t){console.error(`Error on POST /inhpc_dm/unmount".\n${t}`),(0,o.showErrorMessage)("Error",t)}}}class y extends o.ToolbarButton{constructor(t,e,i,n){super({label:i,tooltip:n,onClick:()=>{this.handle_click(t,e)}})}async handle_click(t,e){var i=e.getSelectedDirectory(),n=[];(0,d.each)(t.getListing().selectedItems(),(t=>{n.push(t.path)}));var s=JSON.stringify({command:"copy",parameters:{target:i,sources:n}});console.log("Copy command params: "+s);try{const t=await u("tasks",{body:s,method:"POST"});console.log(t),"OK"==t.status?(0,o.showDialog)({title:"OK",body:"Task launched successfully",buttons:[o.Dialog.okButton()]}):(0,o.showErrorMessage)("Error",t.error_info)}catch(t){console.error(`Error on POST /inhpc_dm/tasks".\n${t}`),(0,o.showErrorMessage)("Error",t)}}}const W={id:"jupyterlab_inhpc",autoStart:!0,requires:[o.ICommandPalette,n.ILayoutRestorer],activate:(t,e,i)=>{!function(t,e,i){let n;console.log("JupyterLab extension InHPC data management activating.");const s="inhpc:opendm";t.commands.addCommand(s,{label:"InHPC - Data Management dual browser view",execute:()=>{if(!n||n.isDisposed){const e=new f(t);e.id="dmwidget_id",n=new o.MainAreaWidget({content:e}),n.id="inhpc-datamanagement",n.title.label="Data Management",n.title.closable=!0}a.has(n)||a.add(n),n.isAttached||t.shell.add(n,"main"),n.content.update(),t.shell.activateById(n.id)}}),e.addItem({command:s,category:"Tutorial"});let a=new o.WidgetTracker({namespace:"inhpc_dm"});i.restore(a,{command:s,name:()=>"inhpc_dm"})}(t,e,i)}}}}]);