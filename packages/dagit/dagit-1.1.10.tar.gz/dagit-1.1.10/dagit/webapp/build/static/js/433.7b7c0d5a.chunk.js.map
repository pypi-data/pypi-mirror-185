{"version":3,"file":"static/js/433.7b7c0d5a.chunk.js","mappings":"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","sources":["../../core/src/app/time/TimezoneSelect.tsx","../../core/src/app/UserSettingsRoot.tsx","../../core/src/hooks/useDocumentTitle.tsx","../../ui/src/components/MetadataTable.tsx","../../ui/src/components/PageHeader.tsx","../../ui/src/components/Select.tsx","../../../node_modules/@blueprintjs/select/src/components/select/select.tsx"],"sourcesContent":["import {MenuDivider, MenuItem, Menu, Select} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {TimezoneContext} from './TimezoneContext';\nimport {browserTimezone, browserTimezoneAbbreviation} from './browserTimezone';\n\n/**\n * Render the target date as a string in en-US with the timezone supplied, and use\n * that to extract the GMT offset (+/- HH:MM) of the provided timezone.\n *\n * We use `toLocaleDateString` instead of `formatToParts` here so that we don't have\n * to create new Intl.DateTimeFormat objects for every timezone we're looking at.\n */\nconst extractOffset = (targetDate: Date, timeZone: string) => {\n  const formatted = targetDate.toLocaleDateString('en-US', {\n    year: 'numeric',\n    timeZone,\n    timeZoneName: 'longOffset',\n  });\n  const [_, gmtOffset] = formatted.split(', ');\n  const stripped = gmtOffset.replace(/^GMT/, '').replace(/:/, '');\n\n  // Already GMT.\n  if (stripped === '') {\n    return {label: '0:00', value: 0};\n  }\n\n  const plusMinus = stripped[0];\n  const hours = stripped.slice(1, 3).replace(/^0/, '');\n  const minutes = stripped.slice(3);\n\n  const hourValue = parseInt(`${plusMinus}${hours}`, 10);\n  const minValue = parseInt(`${plusMinus}${minutes}`, 10) / 60;\n\n  return {label: `${plusMinus}${hours}:${minutes}`, value: hourValue + minValue};\n};\n\nconst POPULAR_TIMEZONES = new Set([\n  'UTC',\n  'America/New_York',\n  'America/Chicago',\n  'America/Denver',\n  'America/Los_Angeles',\n]);\n\ninterface Props {\n  trigger: (timezone: string) => React.ReactNode;\n}\n\n/**\n * Show a list of timezones that the user can choose from. The selected timezone\n * is tracked in localStorage. Show sections of timezones, in this order:\n *\n * - Automatic timezone: whatever the user's browser/locale thinks they're in.\n * - Popular timezones: the four US timezones.\n * - Locale timezones: other timezones for the user's locale, if possible.\n * - Everything else\n */\nexport const TimezoneSelect: React.FC<Props> = ({trigger}) => {\n  const [timezone, setTimezone] = React.useContext(TimezoneContext);\n\n  const allTimezoneItems = React.useMemo(() => {\n    const date = new Date();\n    const allTimezoneItems = Intl.supportedValuesOf('timeZone')\n      .map((timeZone) => {\n        const {label, value} = extractOffset(date, timeZone);\n        return {offsetLabel: label, offset: value, key: timeZone};\n      })\n      .sort((a, b) => a.offset - b.offset);\n\n    const automaticOffsetLabel = () => {\n      const abbreviation = browserTimezoneAbbreviation();\n      const {label} = extractOffset(date, browserTimezone());\n      return `${abbreviation} ${label}`;\n    };\n\n    const locale = new Intl.Locale(navigator.language);\n    const timezonesForLocaleSet = new Set<string>(\n      'timeZones' in locale ? (locale.timeZones as string[]) : [],\n    );\n\n    const timezonesForLocale = allTimezoneItems.filter(\n      (tz) => timezonesForLocaleSet.has(tz.key) && !POPULAR_TIMEZONES.has(tz.key),\n    );\n\n    // Some browsers include UTC. (Firefox) Some don't. (Chrome, Safari)\n    // Include it in the \"popular\" list either way.\n    const browserIncludesUTC = allTimezoneItems.some((tz) => tz.key === 'UTC');\n\n    return [\n      {\n        key: 'Automatic',\n        offsetLabel: automaticOffsetLabel(),\n        offset: 0,\n      },\n      {\n        key: 'divider-1',\n        offsetLabel: '',\n        offset: 0,\n      },\n      ...(browserIncludesUTC\n        ? []\n        : [\n            {\n              key: 'UTC',\n              offsetLabel: '0:00',\n              offset: 0,\n            },\n          ]),\n      ...allTimezoneItems.filter((tz) => POPULAR_TIMEZONES.has(tz.key)),\n      ...(timezonesForLocale.length\n        ? [\n            {\n              key: 'divider-2',\n              offsetLabel: '',\n              offset: 0,\n            },\n            ...timezonesForLocale,\n          ]\n        : []),\n      {\n        key: 'divider-3',\n        offsetLabel: '',\n        offset: 0,\n      },\n      ...allTimezoneItems.filter(\n        (tz) => !POPULAR_TIMEZONES.has(tz.key) && !timezonesForLocaleSet.has(tz.key),\n      ),\n    ];\n  }, []);\n\n  return (\n    <Select<typeof allTimezoneItems[0]>\n      popoverProps={{\n        position: 'bottom-left',\n        modifiers: {offset: {enabled: true, offset: '-12px, 8px'}},\n      }}\n      activeItem={allTimezoneItems.find((tz) => tz.key === timezone)}\n      inputProps={{style: {width: '300px'}}}\n      items={allTimezoneItems}\n      itemPredicate={(query, tz) => tz.key.toLowerCase().includes(query.toLowerCase())}\n      itemRenderer={(tz, props) =>\n        tz.key.startsWith('divider') ? (\n          <MenuDivider key={tz.key} />\n        ) : (\n          <MenuItem\n            active={props.modifiers.active}\n            onClick={props.handleClick}\n            label={tz.offsetLabel}\n            key={tz.key}\n            text={tz.key}\n          />\n        )\n      }\n      itemListRenderer={({renderItem, filteredItems}) => {\n        const renderedItems = filteredItems.map(renderItem).filter(Boolean);\n        return <Menu>{renderedItems}</Menu>;\n      }}\n      noResults={<MenuItem disabled text=\"No results.\" />}\n      onItemSelect={(tz) => setTimezone(tz.key)}\n    >\n      {trigger(timezone)}\n    </Select>\n  );\n};\n","import {\n  Box,\n  ButtonLink,\n  Checkbox,\n  Colors,\n  Heading,\n  MetadataTable,\n  PageHeader,\n  Subheading,\n} from '@dagster-io/ui';\nimport * as React from 'react';\n\nimport {useDocumentTitle} from '../hooks/useDocumentTitle';\nimport {useStateWithStorage} from '../hooks/useStateWithStorage';\n\nimport {FeatureFlag, FeatureFlagType, getFeatureFlags, setFeatureFlags} from './Flags';\nimport {SHORTCUTS_STORAGE_KEY} from './ShortcutHandler';\nimport {useTrackPageView} from './analytics';\nimport {TimezoneSelect} from './time/TimezoneSelect';\nimport {automaticLabel} from './time/browserTimezone';\n\nexport interface SettingsRootProps {\n  tabs?: React.ReactNode;\n}\nconst UserSettingsRoot: React.FC<SettingsRootProps> = ({tabs}) => {\n  useTrackPageView();\n  useDocumentTitle('User settings');\n\n  const [flags, setFlags] = React.useState<FeatureFlagType[]>(() => getFeatureFlags());\n  const [shortcutsEnabled, setShortcutsEnabled] = useStateWithStorage(\n    SHORTCUTS_STORAGE_KEY,\n    (value: any) => (typeof value === 'boolean' ? value : true),\n  );\n\n  React.useEffect(() => {\n    setFeatureFlags(flags);\n  });\n\n  const toggleFlag = (flag: FeatureFlagType) => {\n    setFlags(flags.includes(flag) ? flags.filter((f) => f !== flag) : [...flags, flag]);\n    window.location.reload();\n  };\n\n  const trigger = React.useCallback(\n    (timezone: string) => (\n      <ButtonLink>{timezone === 'Automatic' ? automaticLabel() : timezone}</ButtonLink>\n    ),\n    [],\n  );\n\n  const toggleKeyboardShortcuts = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const {checked} = e.target;\n    setShortcutsEnabled(checked);\n    // Delay slightly so that the switch visibly changes first.\n    setTimeout(() => {\n      window.location.reload();\n    }, 1000);\n  };\n\n  return (\n    <div style={{height: '100vh', overflowY: 'auto'}}>\n      <PageHeader title={<Heading>User settings</Heading>} tabs={tabs} />\n      <Box padding={{vertical: 16, horizontal: 24}}>\n        <Box padding={{bottom: 8}}>\n          <Subheading>Preferences</Subheading>\n        </Box>\n        <MetadataTable\n          rows={[\n            {\n              key: 'Timezone',\n              value: (\n                <Box margin={{bottom: 4}}>\n                  <TimezoneSelect trigger={trigger} />\n                </Box>\n              ),\n            },\n            {\n              key: 'Enable keyboard shortcuts',\n              value: (\n                <Checkbox\n                  checked={shortcutsEnabled}\n                  format=\"switch\"\n                  onChange={toggleKeyboardShortcuts}\n                />\n              ),\n            },\n          ]}\n        />\n      </Box>\n      <Box\n        padding={{vertical: 16, horizontal: 24}}\n        border={{side: 'top', width: 1, color: Colors.KeylineGray}}\n      >\n        <Box padding={{bottom: 8}}>\n          <Subheading>Experimental features</Subheading>\n        </Box>\n        <MetadataTable rows={getFeatureFlagRows(flags, toggleFlag)} />\n      </Box>\n    </div>\n  );\n};\n\nexport function getFeatureFlagRows(\n  flags: FeatureFlagType[],\n  toggleFlag: (flag: FeatureFlagType) => void,\n) {\n  return [\n    {\n      key: 'Debug console logging',\n      value: (\n        <Checkbox\n          format=\"switch\"\n          checked={flags.includes(FeatureFlag.flagDebugConsoleLogging)}\n          onChange={() => toggleFlag(FeatureFlag.flagDebugConsoleLogging)}\n        />\n      ),\n    },\n    {\n      key: 'Disable WebSockets',\n      value: (\n        <Checkbox\n          format=\"switch\"\n          checked={flags.includes(FeatureFlag.flagDisableWebsockets)}\n          onChange={() => toggleFlag(FeatureFlag.flagDisableWebsockets)}\n        />\n      ),\n    },\n    {\n      key: 'Experimental schedule/sensor logging view',\n      value: (\n        <Checkbox\n          format=\"switch\"\n          checked={flags.includes(FeatureFlag.flagSensorScheduleLogging)}\n          onChange={() => toggleFlag(FeatureFlag.flagSensorScheduleLogging)}\n        />\n      ),\n    },\n  ];\n}\n\n// Imported via React.lazy, which requires a default export.\n// eslint-disable-next-line import/no-default-export\nexport default UserSettingsRoot;\n","import * as React from 'react';\n\nexport const useDocumentTitle = (title: string) => {\n  React.useEffect(() => {\n    const currentTitle = document.title;\n    document.title = title;\n    return () => {\n      document.title = currentTitle;\n    };\n  }, [title]);\n};\n","import * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {Box} from './Box';\nimport {Colors} from './Colors';\nimport {Table, TableProps} from './Table';\n\nexport type MetadataTableRow = {key: string; label?: React.ReactNode; value: React.ReactNode};\n\ninterface Props {\n  dark?: boolean;\n  rows: (MetadataTableRow | null | undefined)[];\n  spacing: 0 | 2 | 4;\n}\n\nexport const MetadataTable = (props: Props) => {\n  const {rows, spacing, dark = false} = props;\n\n  return (\n    <StyledTable>\n      <tbody>\n        {rows.map((pair: MetadataTableRow | null | undefined) => {\n          if (!pair) {\n            return null;\n          }\n          const {key, label, value} = pair;\n          return (\n            <tr key={key}>\n              <td>\n                <Box padding={{vertical: spacing, right: 32}}>\n                  <MetadataKey $dark={dark}>{label ?? key}</MetadataKey>\n                </Box>\n              </td>\n              <td>\n                <Box padding={{vertical: spacing}}>{value}</Box>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </StyledTable>\n  );\n};\n\nMetadataTable.defaultProps = {\n  spacing: 4,\n};\n\nexport const StyledTable = styled.table`\n  border-spacing: 0;\n  td {\n    vertical-align: top;\n  }\n\n  td .bp3-control {\n    margin-bottom: 0;\n  }\n`;\n\nconst MetadataKey = styled.div<{$dark: boolean}>`\n  color: ${({$dark}) => ($dark ? Colors.Gray200 : Colors.Gray600)};\n  font-weight: 400;\n`;\n\nexport const MetadataTableWIP = styled(Table)<TableProps>`\n  td:first-child {\n    white-space: nowrap;\n    width: 1px;\n    max-width: 400px;\n    word-break: break-word;\n    overflow: hidden;\n    padding-right: 24px;\n    text-overflow: ellipsis;\n  }\n`;\n","import * as React from 'react';\nimport styled from 'styled-components/macro';\n\nimport {Box} from './Box';\nimport {Colors} from './Colors';\nimport {IconName} from './Icon';\n\ninterface Props {\n  title: React.ReactNode;\n  tags?: React.ReactNode;\n  icon?: IconName;\n  description?: React.ReactNode;\n  metadata?: React.ReactNode;\n  right?: React.ReactNode;\n  tabs?: React.ReactNode;\n}\n\nexport const PageHeader = (props: Props) => {\n  const {title, tags, right, tabs} = props;\n  return (\n    <PageHeaderContainer\n      background={Colors.Gray50}\n      padding={{top: 16, left: 24, right: 12}}\n      border={{side: 'bottom', width: 1, color: Colors.KeylineGray}}\n    >\n      <Box flex={{direction: 'row', justifyContent: 'space-between'}} padding={{bottom: 16}}>\n        <Box flex={{direction: 'row', alignItems: 'flex-start', gap: 12, wrap: 'wrap'}}>\n          {title}\n          {tags}\n        </Box>\n        {right}\n      </Box>\n      {tabs}\n    </PageHeaderContainer>\n  );\n};\n\nconst PageHeaderContainer = styled(Box)`\n  width: 100%;\n\n  /**\n   * Blueprint breadcrumbs annoyingly have a built-in height.\n   */\n  .bp3-breadcrumbs {\n    height: auto;\n  }\n`;\n","/* eslint-disable no-restricted-imports */\nimport {IPopoverProps} from '@blueprintjs/core';\nimport {Select as BlueprintSelect, SelectProps} from '@blueprintjs/select';\n/* eslint-enable no-restricted-imports */\nimport deepmerge from 'deepmerge';\nimport * as React from 'react';\n\nexport const Select = <T,>(props: React.PropsWithChildren<SelectProps<T>>) => {\n  const popoverProps: Partial<IPopoverProps> = {\n    ...props.popoverProps,\n    minimal: true,\n    modifiers: deepmerge(\n      {offset: {enabled: true, offset: '0, 8px'}},\n      props.popoverProps?.modifiers || {},\n    ),\n    popoverClassName: `dagit-popover ${props.popoverProps?.className || ''}`,\n  };\n\n  return <BlueprintSelect {...props} popoverProps={popoverProps} />;\n};\n","/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\n\nimport {\n    AbstractPureComponent2,\n    Button,\n    DISPLAYNAME_PREFIX,\n    InputGroupProps2,\n    InputGroup,\n    IPopoverProps,\n    IRef,\n    Keys,\n    Popover,\n    Position,\n    refHandler,\n    setRef,\n} from \"@blueprintjs/core\";\n\nimport { Classes, IListItemsProps } from \"../../common\";\nimport { IQueryListRendererProps, QueryList } from \"../query-list/queryList\";\n\n// eslint-disable-next-line deprecation/deprecation\nexport type SelectProps<T> = ISelectProps<T>;\n/** @deprecated use SelectProps */\nexport interface ISelectProps<T> extends IListItemsProps<T> {\n    /**\n     * Whether the dropdown list can be filtered.\n     * Disabling this option will remove the `InputGroup` and ignore `inputProps`.\n     *\n     * @default true\n     */\n    filterable?: boolean;\n\n    /**\n     * Whether the component is non-interactive.\n     * If true, the list's item renderer will not be called.\n     * Note that you'll also need to disable the component's children, if appropriate.\n     *\n     * @default false\n     */\n    disabled?: boolean;\n\n    /**\n     * Props to spread to the query `InputGroup`. Use `query` and\n     * `onQueryChange` instead of `inputProps.value` and `inputProps.onChange`\n     * to control this input.\n     */\n    inputProps?: InputGroupProps2;\n\n    /** Props to spread to `Popover`. Note that `content` cannot be changed. */\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    popoverProps?: Partial<IPopoverProps> & object;\n\n    /**\n     * Whether the active item should be reset to the first matching item _when\n     * the popover closes_. The query will also be reset to the empty string.\n     *\n     * @default false\n     */\n    resetOnClose?: boolean;\n}\n\nexport interface ISelectState {\n    isOpen: boolean;\n}\n\nexport class Select<T> extends AbstractPureComponent2<SelectProps<T>, ISelectState> {\n    public static displayName = `${DISPLAYNAME_PREFIX}.Select`;\n\n    public static ofType<U>() {\n        return Select as new (props: SelectProps<U>) => Select<U>;\n    }\n\n    public state: ISelectState = { isOpen: false };\n\n    private TypedQueryList = QueryList.ofType<T>();\n\n    public inputElement: HTMLInputElement | null = null;\n\n    private queryList: QueryList<T> | null = null;\n\n    private previousFocusedElement: HTMLElement | undefined;\n\n    private handleInputRef: IRef<HTMLInputElement> = refHandler(this, \"inputElement\", this.props.inputProps?.inputRef);\n\n    private handleQueryListRef = (ref: QueryList<T> | null) => (this.queryList = ref);\n\n    public render() {\n        // omit props specific to this component, spread the rest.\n        const { filterable, inputProps, popoverProps, ...restProps } = this.props;\n\n        return (\n            <this.TypedQueryList\n                {...restProps}\n                onItemSelect={this.handleItemSelect}\n                ref={this.handleQueryListRef}\n                renderer={this.renderQueryList}\n            />\n        );\n    }\n\n    public componentDidUpdate(prevProps: SelectProps<T>, prevState: ISelectState) {\n        if (prevProps.inputProps?.inputRef !== this.props.inputProps?.inputRef) {\n            setRef(prevProps.inputProps?.inputRef, null);\n            this.handleInputRef = refHandler(this, \"inputElement\", this.props.inputProps?.inputRef);\n            setRef(this.props.inputProps?.inputRef, this.inputElement);\n        }\n\n        if (this.state.isOpen && !prevState.isOpen && this.queryList != null) {\n            this.queryList.scrollActiveItemIntoView();\n        }\n    }\n\n    private renderQueryList = (listProps: IQueryListRendererProps<T>) => {\n        // not using defaultProps cuz they're hard to type with generics (can't use <T> on static members)\n        const { filterable = true, disabled = false, inputProps = {}, popoverProps = {} } = this.props;\n\n        const input = (\n            <InputGroup\n                leftIcon=\"search\"\n                placeholder=\"Filter...\"\n                rightElement={this.maybeRenderClearButton(listProps.query)}\n                {...inputProps}\n                inputRef={this.handleInputRef}\n                onChange={listProps.handleQueryChange}\n                value={listProps.query}\n            />\n        );\n\n        const { handleKeyDown, handleKeyUp } = listProps;\n        return (\n            /* eslint-disable-next-line deprecation/deprecation */\n            <Popover\n                autoFocus={false}\n                enforceFocus={false}\n                isOpen={this.state.isOpen}\n                disabled={disabled}\n                position={Position.BOTTOM_LEFT}\n                {...popoverProps}\n                className={classNames(listProps.className, popoverProps.className)}\n                onInteraction={this.handlePopoverInteraction}\n                popoverClassName={classNames(Classes.SELECT_POPOVER, popoverProps.popoverClassName)}\n                onOpening={this.handlePopoverOpening}\n                onOpened={this.handlePopoverOpened}\n                onClosing={this.handlePopoverClosing}\n            >\n                <div\n                    onKeyDown={this.state.isOpen ? handleKeyDown : this.handleTargetKeyDown}\n                    onKeyUp={this.state.isOpen ? handleKeyUp : undefined}\n                >\n                    {this.props.children}\n                </div>\n                <div onKeyDown={handleKeyDown} onKeyUp={handleKeyUp}>\n                    {filterable ? input : undefined}\n                    {listProps.itemList}\n                </div>\n                {/* eslint-disable-next-line deprecation/deprecation */}\n            </Popover>\n        );\n    };\n\n    private maybeRenderClearButton(query: string) {\n        return query.length > 0 ? <Button icon=\"cross\" minimal={true} onClick={this.resetQuery} /> : undefined;\n    }\n\n    private handleTargetKeyDown = (event: React.KeyboardEvent<HTMLElement>) => {\n        // open popover when arrow key pressed on target while closed\n        // HACKHACK: https://github.com/palantir/blueprint/issues/4165\n        // eslint-disable-next-line deprecation/deprecation\n        if (event.which === Keys.ARROW_UP || event.which === Keys.ARROW_DOWN) {\n            event.preventDefault();\n            this.setState({ isOpen: true });\n        }\n    };\n\n    private handleItemSelect = (item: T, event?: React.SyntheticEvent<HTMLElement>) => {\n        this.setState({ isOpen: false });\n        this.props.onItemSelect?.(item, event);\n    };\n\n    private handlePopoverInteraction = (isOpen: boolean) => {\n        this.setState({ isOpen });\n        this.props.popoverProps?.onInteraction?.(isOpen);\n    };\n\n    private handlePopoverOpening = (node: HTMLElement) => {\n        // save currently focused element before popover steals focus, so we can restore it when closing.\n        this.previousFocusedElement = document.activeElement as HTMLElement;\n\n        if (this.props.resetOnClose) {\n            this.resetQuery();\n        }\n\n        this.props.popoverProps?.onOpening?.(node);\n    };\n\n    private handlePopoverOpened = (node: HTMLElement) => {\n        // scroll active item into view after popover transition completes and all dimensions are stable.\n        if (this.queryList != null) {\n            this.queryList.scrollActiveItemIntoView();\n        }\n\n        this.requestAnimationFrame(() => {\n            const { inputProps = {} } = this.props;\n            // autofocus is enabled by default\n            if (inputProps.autoFocus !== false) {\n                this.inputElement?.focus();\n            }\n        });\n\n        this.props.popoverProps?.onOpened?.(node);\n    };\n\n    private handlePopoverClosing = (node: HTMLElement) => {\n        // restore focus to saved element.\n        // timeout allows popover to begin closing and remove focus handlers beforehand.\n        this.requestAnimationFrame(() => {\n            if (this.previousFocusedElement !== undefined) {\n                this.previousFocusedElement.focus();\n                this.previousFocusedElement = undefined;\n            }\n        });\n\n        this.props.popoverProps?.onClosing?.(node);\n    };\n\n    private resetQuery = () => this.queryList && this.queryList.setQuery(\"\", true);\n}\n"],"names":["extractOffset","targetDate","timeZone","toLocaleDateString","year","timeZoneName","split","stripped","replace","label","value","plusMinus","hours","slice","minutes","hourValue","parseInt","minValue","POPULAR_TIMEZONES","Set","TimezoneSelect","trigger","React","TimezoneContext","timezone","setTimezone","allTimezoneItems","date","Date","Intl","supportedValuesOf","map","offsetLabel","offset","key","sort","a","b","locale","Locale","navigator","language","timezonesForLocaleSet","timeZones","timezonesForLocale","filter","tz","has","browserIncludesUTC","some","abbreviation","browserTimezoneAbbreviation","browserTimezone","automaticOffsetLabel","length","Select","popoverProps","position","modifiers","enabled","activeItem","find","inputProps","style","width","items","itemPredicate","query","toLowerCase","includes","itemRenderer","props","startsWith","Menu","active","onClick","handleClick","text","itemListRenderer","renderItem","renderedItems","filteredItems","Boolean","noResults","disabled","onItemSelect","getFeatureFlagRows","flags","toggleFlag","Checkbox","format","checked","FeatureFlag","onChange","tabs","useTrackPageView","useDocumentTitle","getFeatureFlags","setFlags","useStateWithStorage","SHORTCUTS_STORAGE_KEY","shortcutsEnabled","setShortcutsEnabled","setFeatureFlags","ButtonLink","automaticLabel","height","overflowY","PageHeader","title","Box","padding","vertical","horizontal","bottom","MetadataTable","rows","margin","e","target","setTimeout","window","location","reload","border","side","color","Colors","flag","f","currentTitle","document","spacing","dark","StyledTable","pair","right","MetadataKey","$dark","defaultProps","styled","MetadataTableWIP","Table","tags","PageHeaderContainer","background","top","left","flex","direction","justifyContent","alignItems","gap","wrap","minimal","deepmerge","popoverClassName","className","state","isOpen","TypedQueryList","inputElement","queryList","handleInputRef","inputRef","handleQueryListRef","ref","renderQueryList","listProps","filterable","input","leftIcon","placeholder","rightElement","maybeRenderClearButton","handleQueryChange","handleKeyDown","handleKeyUp","autoFocus","enforceFocus","onInteraction","handlePopoverInteraction","onOpening","handlePopoverOpening","onOpened","handlePopoverOpened","onClosing","handlePopoverClosing","onKeyDown","handleTargetKeyDown","onKeyUp","undefined","children","itemList","event","which","preventDefault","setState","handleItemSelect","item","node","previousFocusedElement","activeElement","resetOnClose","resetQuery","scrollActiveItemIntoView","requestAnimationFrame","focus","setQuery","ofType","render","this","restProps","renderer","componentDidUpdate","prevProps","prevState","icon","displayName"],"sourceRoot":""}