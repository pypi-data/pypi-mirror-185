snmp_mib;snmp_label;snmp_index;snmp_oid;snmp_datatype;keypart;name;units;units_factor;description
SNMPv2-MIB;sysContact;0;1.3.6.1.2.1.1.4.0;DisplayString;sys.contact;contact;;;The textual identification of the contact person for this managed node, together with information on how to contact this person. If no contact information is known, the value is the zero-length string.
SNMPv2-MIB;sysName;0;1.3.6.1.2.1.1.5.0;DisplayString;sys.name;name;;;An administratively-assigned name for this managed node. By convention, this is the node's fully-qualified domain name. If the name is unknown, the value is the zero-length string.
SNMPv2-MIB;sysLocation;0;1.3.6.1.2.1.1.6.0;DisplayString;sys.location;location;;;The physical location of this node (e.g., 'telephone closet, 3rd floor'). If the location is unknown, the value is the zero-length string.
SNMPv2-MIB;sysServices;0;1.3.6.1.2.1.1.7.0;Integer32;sys.services;services;;;A value which indicates the set of services that this entity may potentially offer. The value is a sum. This sum initially takes the value zero. Then, for each layer, L, in the range 1 through 7, that this node performs transactions for, 2 raised to (L - 1) is added to the sum. For example, a node which performs only routing functions would have a value of 4 (2^(3-1)). In contrast, a node which is a host offering application services would have a value of 72 (2^(4-1) + 2^(7-1)). Note that in the context of the Internet suite of protocols, values should be calculated accordingly: layer functionality 1 physical (e.g., repeaters) 2 datalink/subnetwork (e.g., bridges) 3 internet (e.g., supports the IP) 4 end-to-end (e.g., supports the TCP) 7 applications (e.g., supports the SMTP) For systems including OSI protocols, layers 5 and 6 may also be counted.
IP-MIB;icmpInEchos;0;1.3.6.1.2.1.5.8.0;Counter32;icmp.echo;icmp echos;count;;The number of ICMP Echo (request) messages received. This object has been deprecated, as a new IP version-neutral table has been added. It is loosely replaced by a column in the icmpMsgStatsTable.
IF-MIB;ifPhysAddress;1;1.3.6.1.2.1.2.2.1.6.1;PhysAddress;eth0.mac;mac address;;;The interface's address at its protocol sub-layer. For example, for an 802.x interface, this object normally contains a MAC address. The interface's media-specific MIB must define the bit and byte ordering and the format of the value of this object. For interfaces which do not have such an address (e.g., a serial line), this object should contain an octet string of zero length.
IP-MIB;ipInDelivers;0;1.3.6.1.2.1.4.9.0;Counter32;ip.in.delivers;ip incoming;count;;The total number of input datagrams successfully delivered to IPv4 user-protocols (including ICMP). This object has been deprecated as a new IP version neutral table has been added. It is loosely replaced by ipSystemStatsIndelivers.
TCP-MIB;tcpActiveOpens;0;1.3.6.1.2.1.6.5.0;Counter32;tcp.active.open;tcp active open;count;;TCP in active open
UDP-MIB;udpInDatagrams;0;1.3.6.1.2.1.7.1.0;Counter32;udp.in.datagram;UDP incoming;count;;The total number of UDP datagrams delivered to UDP users. Discontinuities in the value of this counter can occur at re-initialization of the management system, and at other times as indicated by discontinuities in the value of sysUpTime.
