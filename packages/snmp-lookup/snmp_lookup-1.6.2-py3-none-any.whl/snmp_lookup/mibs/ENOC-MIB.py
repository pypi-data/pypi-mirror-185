#
# PySNMP MIB module ENOC-MIB (http://snmplabs.com/pysmi)
# ASN.1 source file://data/mibs/ENOC-MIB
# Produced by pysmi-0.3.4 at Wed May 13 17:56:00 2020
# On host tide platform Linux version 5.6.11-300.fc32.x86_64 by user spider
# Using Python version 3.8.2 (default, Feb 28 2020, 00:00:00) 
#
Integer, ObjectIdentifier, OctetString = mibBuilder.importSymbols("ASN1", "Integer", "ObjectIdentifier", "OctetString")
NamedValues, = mibBuilder.importSymbols("ASN1-ENUMERATION", "NamedValues")
ValueRangeConstraint, SingleValueConstraint, ValueSizeConstraint, ConstraintsIntersection, ConstraintsUnion = mibBuilder.importSymbols("ASN1-REFINEMENT", "ValueRangeConstraint", "SingleValueConstraint", "ValueSizeConstraint", "ConstraintsIntersection", "ConstraintsUnion")
ModuleCompliance, NotificationGroup = mibBuilder.importSymbols("SNMPv2-CONF", "ModuleCompliance", "NotificationGroup")
ObjectIdentity, MibScalar, MibTable, MibTableRow, MibTableColumn, iso, enterprises, Counter64, ModuleIdentity, NotificationType, MibIdentifier, TimeTicks, Unsigned32, IpAddress, Bits, Gauge32, Integer32, Counter32 = mibBuilder.importSymbols("SNMPv2-SMI", "ObjectIdentity", "MibScalar", "MibTable", "MibTableRow", "MibTableColumn", "iso", "enterprises", "Counter64", "ModuleIdentity", "NotificationType", "MibIdentifier", "TimeTicks", "Unsigned32", "IpAddress", "Bits", "Gauge32", "Integer32", "Counter32")
TextualConvention, DisplayString = mibBuilder.importSymbols("SNMPv2-TC", "TextualConvention", "DisplayString")
enocMIB = ModuleIdentity((1, 3, 6, 1, 4, 1, 30966, 10, 10))
enocMIB.setRevisions(('2020-05-13 00:00',))

if getattr(mibBuilder, 'version', (0, 0, 0)) > (4, 4, 0):
    if mibBuilder.loadTexts: enocMIB.setRevisionsDescriptions(('Humbug',))
if mibBuilder.loadTexts: enocMIB.setLastUpdated('202005130000Z')
if mibBuilder.loadTexts: enocMIB.setOrganization('Modio AB')
if mibBuilder.loadTexts: enocMIB.setContactInfo('spider@modio.se')
if mibBuilder.loadTexts: enocMIB.setDescription('Hacked together mib for ENOC PDU')
clever = MibIdentifier((1, 3, 6, 1, 4, 1, 30966))
enoc = MibIdentifier((1, 3, 6, 1, 4, 1, 30966, 10))
pdu = MibIdentifier((1, 3, 6, 1, 4, 1, 30966, 10, 3))
device = MibIdentifier((1, 3, 6, 1, 4, 1, 30966, 10, 3, 1))
master = MibIdentifier((1, 3, 6, 1, 4, 1, 30966, 10, 3, 2))
deviceName = MibScalar((1, 3, 6, 1, 4, 1, 30966, 10, 3, 1, 1), DisplayString()).setMaxAccess("readonly")
if mibBuilder.loadTexts: deviceName.setStatus('current')
if mibBuilder.loadTexts: deviceName.setDescription('Master device name')
mVoltageA = MibScalar((1, 3, 6, 1, 4, 1, 30966, 10, 3, 2, 1), Integer32()).setUnits('V').setMaxAccess("readonly")
if mibBuilder.loadTexts: mVoltageA.setStatus('current')
if mibBuilder.loadTexts: mVoltageA.setDescription('Voltage of L1 for master device')
mVoltageB = MibScalar((1, 3, 6, 1, 4, 1, 30966, 10, 3, 2, 2), Integer32()).setUnits('V').setMaxAccess("readonly")
if mibBuilder.loadTexts: mVoltageB.setStatus('current')
if mibBuilder.loadTexts: mVoltageB.setDescription('Voltage of L2 for master device')
mVoltageC = MibScalar((1, 3, 6, 1, 4, 1, 30966, 10, 3, 2, 3), Integer32()).setUnits('V').setMaxAccess("readonly")
if mibBuilder.loadTexts: mVoltageC.setStatus('current')
if mibBuilder.loadTexts: mVoltageC.setDescription('Voltage of L3 for master device')
mCurrentA = MibScalar((1, 3, 6, 1, 4, 1, 30966, 10, 3, 2, 4), Integer32()).setUnits('dA').setMaxAccess("readonly")
if mibBuilder.loadTexts: mCurrentA.setStatus('current')
if mibBuilder.loadTexts: mCurrentA.setDescription('Current of L1 for master device')
mCurrentB = MibScalar((1, 3, 6, 1, 4, 1, 30966, 10, 3, 2, 5), Integer32()).setUnits('dA').setMaxAccess("readonly")
if mibBuilder.loadTexts: mCurrentB.setStatus('current')
if mibBuilder.loadTexts: mCurrentB.setDescription('Current of L2 for master device')
mCurrentC = MibScalar((1, 3, 6, 1, 4, 1, 30966, 10, 3, 2, 6), Integer32()).setUnits('dA').setMaxAccess("readonly")
if mibBuilder.loadTexts: mCurrentC.setStatus('current')
if mibBuilder.loadTexts: mCurrentC.setDescription('Current of L3 for master device')
mEnergyA = MibScalar((1, 3, 6, 1, 4, 1, 30966, 10, 3, 2, 7), Integer32()).setUnits('hWh').setMaxAccess("readonly")
if mibBuilder.loadTexts: mEnergyA.setStatus('current')
if mibBuilder.loadTexts: mEnergyA.setDescription('Power Energy of L1 for master device')
mEnergyB = MibScalar((1, 3, 6, 1, 4, 1, 30966, 10, 3, 2, 8), Integer32()).setUnits('hWh').setMaxAccess("readonly")
if mibBuilder.loadTexts: mEnergyB.setStatus('current')
if mibBuilder.loadTexts: mEnergyB.setDescription('Power energy of L2 for master device')
mEnergyC = MibScalar((1, 3, 6, 1, 4, 1, 30966, 10, 3, 2, 9), Integer32()).setUnits('hWh').setMaxAccess("readonly")
if mibBuilder.loadTexts: mEnergyC.setStatus('current')
if mibBuilder.loadTexts: mEnergyC.setDescription('Power energy of L3 for master device')
mibBuilder.exportSymbols("ENOC-MIB", pdu=pdu, enocMIB=enocMIB, mVoltageC=mVoltageC, device=device, mCurrentA=mCurrentA, clever=clever, mVoltageB=mVoltageB, mCurrentC=mCurrentC, deviceName=deviceName, enoc=enoc, mEnergyB=mEnergyB, master=master, mCurrentB=mCurrentB, mEnergyC=mEnergyC, PYSNMP_MODULE_ID=enocMIB, mVoltageA=mVoltageA, mEnergyA=mEnergyA)
