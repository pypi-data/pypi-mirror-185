from .Gaussiandistribution import work_dy


def helps():  # поддержка
    print('work_dy(string).get_vowels()   # Получаем гласные')
    print('Этот пример возвращает в строке найденные гласные "a e i o u".'
          ' Это может оказаться полезным при поиске или обнаружении гласных.')
    print('work_dy(string).capitalize() - Первая буква в верхнем регистре')
    print()
    print('Этот пример используется для превращения каждой первой буквы символов строки в прописную букву. '
          'Он работает со строкой из одного или нескольких символов и будет полезен при анализе текста или записи данных в файл и т.п.')
    print('work_dy(list).check_duplicate() - Проверка дубликатов ')
    print('Это самый быстрый способ проверки наличия повторяющихся значений в списке.')
    print('work_dy(list).Filtering() - Фильтрация значений ')
    print('Этот пример используется для устранения всех ложных значений из списка, например false, 0, None, " "')
    print('work_dy(string).ByteSize() - Размер в байтах ')
    print('Этот пример возвращает длину строки в байтах, что удобно, когда вам нужно знать размер строковой переменной.')
    print('work_dy(string1, string2).anagrams() - Анаграммы ')
    print('Этот код полезен для проверки того, является ли строка анаграммой. Анаграмма — это слово, полученное перестановкой букв другого слова.')
    print('work_dy(data).palindrome() - Проверка палиндромов ')
    print('Неэффективный, как быстро проверить наличие палиндромов.')
    print('work_dy(list, int).chunk() - Разбиение на фрагменты ')
    print('Этот пример поможет, разбить список на фрагменты и разделить его на меньшие части.')
    print('work_dy(dict1, dict2).merge() - Объединяем два словаря ')
    print('Этот пример выполняет слияние двух словарей в один.')


