import{d as g,Q as v,ak as k,$ as D,c as m,u as t,a as b,w as p,e as F,a1 as S,a2 as T,o as x,b as d,aX as B,aY as j,aZ as I,a_ as N,q as i}from"./index-f1382dab-33a61378.js";import{u as V}from"./usePageTitle-14f0a7e2.js";import"./index-7d7f7986.js";import{r as y}from"./routes-f652c86d.js";import"./meta-26546594.js";const Q=g({__name:"FlowRunCreate",setup($){const u=v(),a=k("deploymentId"),n=T(),f=D(u.deployments.getDeployment,[a]),e=m(()=>f.response),w=async s=>{var r,o;try{const l=await u.deployments.createDeploymentFlowRun(a.value,s),c=((o=(r=s.state)==null?void 0:r.stateDetails)==null?void 0:o.scheduledTime)??void 0,h=!c,C=I(N,{flowRun:l,flowRunRoute:y.flowRun,router:n,immediate:h,startTime:c});i(C,"success"),n.push(y.deployment(a.value))}catch(l){i("Something went wrong trying to create a flow run","error"),console.error(l)}},_=()=>{n.back()},R=m(()=>e.value?`Create Flow Run for Deployment: ${e.value.name}`:"Create Flow Run for Deployment");return V(R),(s,r)=>{const o=S("p-layout-default");return t(e)?(x(),b(o,{key:0},{header:p(()=>[d(t(B),{deployment:t(e)},null,8,["deployment"])]),default:p(()=>[d(t(j),{deployment:t(e),onSubmit:w,onCancel:_},null,8,["deployment"])]),_:1})):F("",!0)}}});export{Q as default};
