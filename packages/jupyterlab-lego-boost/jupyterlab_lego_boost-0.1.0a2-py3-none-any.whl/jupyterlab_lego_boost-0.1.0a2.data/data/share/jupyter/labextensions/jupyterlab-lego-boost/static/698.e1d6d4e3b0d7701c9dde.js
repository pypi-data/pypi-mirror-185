/*! For license information please see 698.e1d6d4e3b0d7701c9dde.js.LICENSE.txt */
(self.webpackChunkjupyterlab_lego_boost=self.webpackChunkjupyterlab_lego_boost||[]).push([[698],{8698:function(o,t,l){var e,n,r;n=[l(8256),l(9809)],void 0===(r="function"==typeof(e=function(o,t){return t})?e.apply(t,n):e)||(o.exports=r)},9809:function(o,t,l){var e,n,r;n=[l(1334)],void 0===(r="function"==typeof(e=function(o){const t=o.internal_;var l=new t.module$exports$Blockly$Generator.Generator("Python");l.addReservedWords("False,None,True,and,as,assert,break,class,continue,def,del,elif,else,except,exec,finally,for,from,global,if,import,in,is,lambda,nonlocal,not,or,pass,print,raise,return,try,while,with,yield,NotImplemented,Ellipsis,__debug__,quit,exit,copyright,license,credits,ArithmeticError,AssertionError,AttributeError,BaseException,BlockingIOError,BrokenPipeError,BufferError,BytesWarning,ChildProcessError,ConnectionAbortedError,ConnectionError,ConnectionRefusedError,ConnectionResetError,DeprecationWarning,EOFError,Ellipsis,EnvironmentError,Exception,FileExistsError,FileNotFoundError,FloatingPointError,FutureWarning,GeneratorExit,IOError,ImportError,ImportWarning,IndentationError,IndexError,InterruptedError,IsADirectoryError,KeyError,KeyboardInterrupt,LookupError,MemoryError,ModuleNotFoundError,NameError,NotADirectoryError,NotImplemented,NotImplementedError,OSError,OverflowError,PendingDeprecationWarning,PermissionError,ProcessLookupError,RecursionError,ReferenceError,ResourceWarning,RuntimeError,RuntimeWarning,StandardError,StopAsyncIteration,StopIteration,SyntaxError,SyntaxWarning,SystemError,SystemExit,TabError,TimeoutError,TypeError,UnboundLocalError,UnicodeDecodeError,UnicodeEncodeError,UnicodeError,UnicodeTranslateError,UnicodeWarning,UserWarning,ValueError,Warning,ZeroDivisionError,_,__build_class__,__debug__,__doc__,__import__,__loader__,__name__,__package__,__spec__,abs,all,any,apply,ascii,basestring,bin,bool,buffer,bytearray,bytes,callable,chr,classmethod,cmp,coerce,compile,complex,copyright,credits,delattr,dict,dir,divmod,enumerate,eval,exec,execfile,exit,file,filter,float,format,frozenset,getattr,globals,hasattr,hash,help,hex,id,input,int,intern,isinstance,issubclass,iter,len,license,list,locals,long,map,max,memoryview,min,next,object,oct,open,ord,pow,print,property,quit,range,raw_input,reduce,reload,repr,reversed,round,set,setattr,slice,sorted,staticmethod,str,sum,super,tuple,type,unichr,unicode,vars,xrange,zip"),l.ORDER_ATOMIC=0,l.ORDER_COLLECTION=1,l.ORDER_STRING_CONVERSION=1,l.ORDER_MEMBER=2.1,l.ORDER_FUNCTION_CALL=2.2,l.ORDER_EXPONENTIATION=3,l.ORDER_UNARY_SIGN=4,l.ORDER_BITWISE_NOT=4,l.ORDER_MULTIPLICATIVE=5,l.ORDER_ADDITIVE=6,l.ORDER_BITWISE_SHIFT=7,l.ORDER_BITWISE_AND=8,l.ORDER_BITWISE_XOR=9,l.ORDER_BITWISE_OR=10,l.ORDER_RELATIONAL=11,l.ORDER_LOGICAL_NOT=12,l.ORDER_LOGICAL_AND=13,l.ORDER_LOGICAL_OR=14,l.ORDER_CONDITIONAL=15,l.ORDER_LAMBDA=16,l.ORDER_NONE=99,l.ORDER_OVERRIDES=[[l.ORDER_FUNCTION_CALL,l.ORDER_MEMBER],[l.ORDER_FUNCTION_CALL,l.ORDER_FUNCTION_CALL],[l.ORDER_MEMBER,l.ORDER_MEMBER],[l.ORDER_MEMBER,l.ORDER_FUNCTION_CALL],[l.ORDER_LOGICAL_NOT,l.ORDER_LOGICAL_NOT],[l.ORDER_LOGICAL_AND,l.ORDER_LOGICAL_AND],[l.ORDER_LOGICAL_OR,l.ORDER_LOGICAL_OR]],l.isInitialized=!1,l.init=function(o){Object.getPrototypeOf(this).init.call(this),this.PASS=this.INDENT+"pass\n",this.nameDB_?this.nameDB_.reset():this.nameDB_=new t.module$exports$Blockly$Names.Names(this.RESERVED_WORDS_),this.nameDB_.setVariableMap(o.getVariableMap()),this.nameDB_.populateVariables(o),this.nameDB_.populateProcedures(o);for(var l=[],e=(0,t.module$exports$Blockly$Variables.allDeveloperVariables)(o),n=0;n<e.length;n++)l.push(this.nameDB_.getName(e[n],t.module$exports$Blockly$Names.Names.DEVELOPER_VARIABLE_TYPE)+" = None");for(o=(0,t.module$exports$Blockly$Variables.allUsedVarModels)(o),e=0;e<o.length;e++)l.push(this.nameDB_.getName(o[e].getId(),t.module$exports$Blockly$Names.NameType.VARIABLE)+" = None");this.definitions_.variables=l.join("\n"),this.isInitialized=!0},l.finish=function(o){var t,l=[],e=[];for(t in this.definitions_){var n=this.definitions_[t];n.match(/^(from\s+\S+\s+)?import\s+\S+/)?l.push(n):e.push(n)}return o=Object.getPrototypeOf(this).finish.call(this,o),this.isInitialized=!1,this.nameDB_.reset(),(l.join("\n")+"\n\n"+e.join("\n\n")).replace(/\n\n+/g,"\n\n").replace(/\n*$/,"\n\n\n")+o},l.scrubNakedValue=function(o){return o+"\n"},l.quote_=function(o){var t="'";return-1!==(o=o.replace(/\\/g,"\\\\").replace(/\n/g,"\\\n")).indexOf("'")&&(-1===o.indexOf('"')?t='"':o=o.replace(/'/g,"\\'")),t+o+t},l.multiline_quote_=function(o){return o.split(/\n/g).map(this.quote_).join(" + '\\n' + \n")},l.scrub_=function(o,l,e){var n="";if(!o.outputConnection||!o.outputConnection.targetConnection){var r=o.getCommentText();r&&(r=(0,t.module$exports$Blockly$utils$string.wrap)(r,this.COMMENT_WRAP-3),n+=this.prefixLines(r+"\n","# "));for(var y=0;y<o.inputList.length;y++)o.inputList[y].type===t.module$exports$Blockly$inputTypes.inputTypes.VALUE&&(r=o.inputList[y].connection.targetBlock())&&(r=this.allNestedComments(r))&&(n+=this.prefixLines(r,"# "))}return o=o.nextConnection&&o.nextConnection.targetBlock(),n+l+(e?"":this.blockToCode(o))},l.getAdjustedInt=function(o,l,e,n){e=e||0,o.workspace.options.oneBasedIndex&&e--;var r=o.workspace.options.oneBasedIndex?"1":"0";return o=this.valueToCode(o,l,e?this.ORDER_ADDITIVE:this.ORDER_NONE)||r,(0,t.module$exports$Blockly$utils$string.isNumber)(o)?(o=parseInt(o,10)+e,n&&(o=-o)):(o=0<e?"int("+o+" + "+e+")":0>e?"int("+o+" - "+-e+")":"int("+o+")",n&&(o="-"+o)),o},t.Blockly.Python=l,t.Blockly.Python.variables_get=function(o){return[t.Blockly.Python.nameDB_.getName(o.getFieldValue("VAR"),t.module$exports$Blockly$Names.NameType.VARIABLE),t.Blockly.Python.ORDER_ATOMIC]},t.Blockly.Python.variables_set=function(o){var l=t.Blockly.Python.valueToCode(o,"VALUE",t.Blockly.Python.ORDER_NONE)||"0";return t.Blockly.Python.nameDB_.getName(o.getFieldValue("VAR"),t.module$exports$Blockly$Names.NameType.VARIABLE)+" = "+l+"\n"},t.Blockly.Python.variables_get_dynamic=t.Blockly.Python.variables_get,t.Blockly.Python.variables_set_dynamic=t.Blockly.Python.variables_set,t.Blockly.Python.text=function(o){return[t.Blockly.Python.quote_(o.getFieldValue("TEXT")),t.Blockly.Python.ORDER_ATOMIC]},t.Blockly.Python.text_multiline=function(o){var l=-1!==(o=t.Blockly.Python.multiline_quote_(o.getFieldValue("TEXT"))).indexOf("+")?t.Blockly.Python.ORDER_ADDITIVE:t.Blockly.Python.ORDER_ATOMIC;return[o,l]};var e=/^\s*'([^']|\\')*'\s*$/,n=function(o){return e.test(o)?[o,t.Blockly.Python.ORDER_ATOMIC]:["str("+o+")",t.Blockly.Python.ORDER_FUNCTION_CALL]};return t.Blockly.Python.text_join=function(o){switch(o.itemCount_){case 0:return["''",t.Blockly.Python.ORDER_ATOMIC];case 1:return o=t.Blockly.Python.valueToCode(o,"ADD0",t.Blockly.Python.ORDER_NONE)||"''",n(o);case 2:var l=t.Blockly.Python.valueToCode(o,"ADD0",t.Blockly.Python.ORDER_NONE)||"''";return o=t.Blockly.Python.valueToCode(o,"ADD1",t.Blockly.Python.ORDER_NONE)||"''",[n(l)[0]+" + "+n(o)[0],t.Blockly.Python.ORDER_ADDITIVE];default:l=[];for(var e=0;e<o.itemCount_;e++)l[e]=t.Blockly.Python.valueToCode(o,"ADD"+e,t.Blockly.Python.ORDER_NONE)||"''";return["''.join([str("+(o=t.Blockly.Python.nameDB_.getDistinctName("x",t.module$exports$Blockly$Names.NameType.VARIABLE))+") for "+o+" in ["+l.join(", ")+"]])",t.Blockly.Python.ORDER_FUNCTION_CALL]}},t.Blockly.Python.text_append=function(o){var l=t.Blockly.Python.nameDB_.getName(o.getFieldValue("VAR"),t.module$exports$Blockly$Names.NameType.VARIABLE);return o=t.Blockly.Python.valueToCode(o,"TEXT",t.Blockly.Python.ORDER_NONE)||"''",l+" = str("+l+") + "+n(o)[0]+"\n"},t.Blockly.Python.text_length=function(o){return["len("+(t.Blockly.Python.valueToCode(o,"VALUE",t.Blockly.Python.ORDER_NONE)||"''")+")",t.Blockly.Python.ORDER_FUNCTION_CALL]},t.Blockly.Python.text_isEmpty=function(o){return["not len("+(t.Blockly.Python.valueToCode(o,"VALUE",t.Blockly.Python.ORDER_NONE)||"''")+")",t.Blockly.Python.ORDER_LOGICAL_NOT]},t.Blockly.Python.text_indexOf=function(o){var l="FIRST"===o.getFieldValue("END")?"find":"rfind",e=t.Blockly.Python.valueToCode(o,"FIND",t.Blockly.Python.ORDER_NONE)||"''";return l=(t.Blockly.Python.valueToCode(o,"VALUE",t.Blockly.Python.ORDER_MEMBER)||"''")+"."+l+"("+e+")",o.workspace.options.oneBasedIndex?[l+" + 1",t.Blockly.Python.ORDER_ADDITIVE]:[l,t.Blockly.Python.ORDER_FUNCTION_CALL]},t.Blockly.Python.text_charAt=function(o){var l=o.getFieldValue("WHERE")||"FROM_START",e=t.Blockly.Python.valueToCode(o,"VALUE","RANDOM"===l?t.Blockly.Python.ORDER_NONE:t.Blockly.Python.ORDER_MEMBER)||"''";switch(l){case"FIRST":return[e+"[0]",t.Blockly.Python.ORDER_MEMBER];case"LAST":return[e+"[-1]",t.Blockly.Python.ORDER_MEMBER];case"FROM_START":return[e+"["+(o=t.Blockly.Python.getAdjustedInt(o,"AT"))+"]",t.Blockly.Python.ORDER_MEMBER];case"FROM_END":return[e+"["+(o=t.Blockly.Python.getAdjustedInt(o,"AT",1,!0))+"]",t.Blockly.Python.ORDER_MEMBER];case"RANDOM":return t.Blockly.Python.definitions_.import_random="import random",[t.Blockly.Python.provideFunction_("text_random_letter",["def "+t.Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(text):","  x = int(random.random() * len(text))","  return text[x];"])+"("+e+")",t.Blockly.Python.ORDER_FUNCTION_CALL]}throw Error("Unhandled option (text_charAt).")},t.Blockly.Python.text_getSubstring=function(o){var l=o.getFieldValue("WHERE1"),e=o.getFieldValue("WHERE2"),n=t.Blockly.Python.valueToCode(o,"STRING",t.Blockly.Python.ORDER_MEMBER)||"''";switch(l){case"FROM_START":0===(l=t.Blockly.Python.getAdjustedInt(o,"AT1"))&&(l="");break;case"FROM_END":l=t.Blockly.Python.getAdjustedInt(o,"AT1",1,!0);break;case"FIRST":l="";break;default:throw Error("Unhandled option (text_getSubstring)")}switch(e){case"FROM_START":o=t.Blockly.Python.getAdjustedInt(o,"AT2",1);break;case"FROM_END":o=t.Blockly.Python.getAdjustedInt(o,"AT2",0,!0),(0,t.module$exports$Blockly$utils$string.isNumber)(String(o))?0===o&&(o=""):(t.Blockly.Python.definitions_.import_sys="import sys",o+=" or sys.maxsize");break;case"LAST":o="";break;default:throw Error("Unhandled option (text_getSubstring)")}return[n+"["+l+" : "+o+"]",t.Blockly.Python.ORDER_MEMBER]},t.Blockly.Python.text_changeCase=function(o){var l={UPPERCASE:".upper()",LOWERCASE:".lower()",TITLECASE:".title()"}[o.getFieldValue("CASE")];return[(t.Blockly.Python.valueToCode(o,"TEXT",t.Blockly.Python.ORDER_MEMBER)||"''")+l,t.Blockly.Python.ORDER_FUNCTION_CALL]},t.Blockly.Python.text_trim=function(o){var l={LEFT:".lstrip()",RIGHT:".rstrip()",BOTH:".strip()"}[o.getFieldValue("MODE")];return[(t.Blockly.Python.valueToCode(o,"TEXT",t.Blockly.Python.ORDER_MEMBER)||"''")+l,t.Blockly.Python.ORDER_FUNCTION_CALL]},t.Blockly.Python.text_print=function(o){return"print("+(t.Blockly.Python.valueToCode(o,"TEXT",t.Blockly.Python.ORDER_NONE)||"''")+")\n"},t.Blockly.Python.text_prompt_ext=function(o){var l=t.Blockly.Python.provideFunction_("text_prompt",["def "+t.Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(msg):","  try:","    return raw_input(msg)","  except NameError:","    return input(msg)"]);return l=l+"("+(o.getField("TEXT")?t.Blockly.Python.quote_(o.getFieldValue("TEXT")):t.Blockly.Python.valueToCode(o,"TEXT",t.Blockly.Python.ORDER_NONE)||"''")+")","NUMBER"===o.getFieldValue("TYPE")&&(l="float("+l+")"),[l,t.Blockly.Python.ORDER_FUNCTION_CALL]},t.Blockly.Python.text_prompt=t.Blockly.Python.text_prompt_ext,t.Blockly.Python.text_count=function(o){return[(t.Blockly.Python.valueToCode(o,"TEXT",t.Blockly.Python.ORDER_MEMBER)||"''")+".count("+(o=t.Blockly.Python.valueToCode(o,"SUB",t.Blockly.Python.ORDER_NONE)||"''")+")",t.Blockly.Python.ORDER_FUNCTION_CALL]},t.Blockly.Python.text_replace=function(o){return[(t.Blockly.Python.valueToCode(o,"TEXT",t.Blockly.Python.ORDER_MEMBER)||"''")+".replace("+(t.Blockly.Python.valueToCode(o,"FROM",t.Blockly.Python.ORDER_NONE)||"''")+", "+(o=t.Blockly.Python.valueToCode(o,"TO",t.Blockly.Python.ORDER_NONE)||"''")+")",t.Blockly.Python.ORDER_MEMBER]},t.Blockly.Python.text_reverse=function(o){return[(t.Blockly.Python.valueToCode(o,"TEXT",t.Blockly.Python.ORDER_MEMBER)||"''")+"[::-1]",t.Blockly.Python.ORDER_MEMBER]},t.Blockly.Python.procedures_defreturn=function(o){for(var l,e=[],n=o.workspace,r=(0,t.module$exports$Blockly$Variables.allUsedVarModels)(n)||[],y=0;l=r[y];y++)l=l.name,-1===o.getVars().indexOf(l)&&e.push(t.Blockly.Python.nameDB_.getName(l,t.module$exports$Blockly$Names.NameType.VARIABLE));for(n=(0,t.module$exports$Blockly$Variables.allDeveloperVariables)(n),r=0;r<n.length;r++)e.push(t.Blockly.Python.nameDB_.getName(n[r],t.module$exports$Blockly$Names.NameType.DEVELOPER_VARIABLE));n=e.length?t.Blockly.Python.INDENT+"global "+e.join(", ")+"\n":"",e=t.Blockly.Python.nameDB_.getName(o.getFieldValue("NAME"),t.module$exports$Blockly$Names.NameType.PROCEDURE),r="",t.Blockly.Python.STATEMENT_PREFIX&&(r+=t.Blockly.Python.injectId(t.Blockly.Python.STATEMENT_PREFIX,o)),t.Blockly.Python.STATEMENT_SUFFIX&&(r+=t.Blockly.Python.injectId(t.Blockly.Python.STATEMENT_SUFFIX,o)),r&&(r=t.Blockly.Python.prefixLines(r,t.Blockly.Python.INDENT)),y="",t.Blockly.Python.INFINITE_LOOP_TRAP&&(y=t.Blockly.Python.prefixLines(t.Blockly.Python.injectId(t.Blockly.Python.INFINITE_LOOP_TRAP,o),t.Blockly.Python.INDENT)),l=t.Blockly.Python.statementToCode(o,"STACK");var c=t.Blockly.Python.valueToCode(o,"RETURN",t.Blockly.Python.ORDER_NONE)||"",i="";l&&c&&(i=r),c?c=t.Blockly.Python.INDENT+"return "+c+"\n":l||(l=t.Blockly.Python.PASS);for(var a=[],E=o.getVars(),s=0;s<E.length;s++)a[s]=t.Blockly.Python.nameDB_.getName(E[s],t.module$exports$Blockly$Names.NameType.VARIABLE);return n="def "+e+"("+a.join(", ")+"):\n"+n+r+y+l+i+c,n=t.Blockly.Python.scrub_(o,n),t.Blockly.Python.definitions_["%"+e]=n,null},t.Blockly.Python.procedures_defnoreturn=t.Blockly.Python.procedures_defreturn,t.Blockly.Python.procedures_callreturn=function(o){for(var l=t.Blockly.Python.nameDB_.getName(o.getFieldValue("NAME"),t.module$exports$Blockly$Names.NameType.PROCEDURE),e=[],n=o.getVars(),r=0;r<n.length;r++)e[r]=t.Blockly.Python.valueToCode(o,"ARG"+r,t.Blockly.Python.ORDER_NONE)||"None";return[l+"("+e.join(", ")+")",t.Blockly.Python.ORDER_FUNCTION_CALL]},t.Blockly.Python.procedures_callnoreturn=function(o){return t.Blockly.Python.procedures_callreturn(o)[0]+"\n"},t.Blockly.Python.procedures_ifreturn=function(o){var l="if "+(t.Blockly.Python.valueToCode(o,"CONDITION",t.Blockly.Python.ORDER_NONE)||"False")+":\n";return t.Blockly.Python.STATEMENT_SUFFIX&&(l+=t.Blockly.Python.prefixLines(t.Blockly.Python.injectId(t.Blockly.Python.STATEMENT_SUFFIX,o),t.Blockly.Python.INDENT)),o.hasReturnValue_?(o=t.Blockly.Python.valueToCode(o,"VALUE",t.Blockly.Python.ORDER_NONE)||"None",l+=t.Blockly.Python.INDENT+"return "+o+"\n"):l+=t.Blockly.Python.INDENT+"return\n",l},t.Blockly.Python.addReservedWords("math,random,Number"),t.Blockly.Python.math_number=function(o){if(1/0===(o=Number(o.getFieldValue("NUM")))){o='float("inf")';var l=t.Blockly.Python.ORDER_FUNCTION_CALL}else-1/0===o?(o='-float("inf")',l=t.Blockly.Python.ORDER_UNARY_SIGN):l=0>o?t.Blockly.Python.ORDER_UNARY_SIGN:t.Blockly.Python.ORDER_ATOMIC;return[o,l]},t.Blockly.Python.math_arithmetic=function(o){var l={ADD:[" + ",t.Blockly.Python.ORDER_ADDITIVE],MINUS:[" - ",t.Blockly.Python.ORDER_ADDITIVE],MULTIPLY:[" * ",t.Blockly.Python.ORDER_MULTIPLICATIVE],DIVIDE:[" / ",t.Blockly.Python.ORDER_MULTIPLICATIVE],POWER:[" ** ",t.Blockly.Python.ORDER_EXPONENTIATION]}[o.getFieldValue("OP")],e=l[0];return l=l[1],[(t.Blockly.Python.valueToCode(o,"A",l)||"0")+e+(o=t.Blockly.Python.valueToCode(o,"B",l)||"0"),l]},t.Blockly.Python.math_single=function(o){var l=o.getFieldValue("OP");if("NEG"===l){var e=t.Blockly.Python.valueToCode(o,"NUM",t.Blockly.Python.ORDER_UNARY_SIGN)||"0";return["-"+e,t.Blockly.Python.ORDER_UNARY_SIGN]}switch(t.Blockly.Python.definitions_.import_math="import math",o="SIN"===l||"COS"===l||"TAN"===l?t.Blockly.Python.valueToCode(o,"NUM",t.Blockly.Python.ORDER_MULTIPLICATIVE)||"0":t.Blockly.Python.valueToCode(o,"NUM",t.Blockly.Python.ORDER_NONE)||"0",l){case"ABS":e="math.fabs("+o+")";break;case"ROOT":e="math.sqrt("+o+")";break;case"LN":e="math.log("+o+")";break;case"LOG10":e="math.log10("+o+")";break;case"EXP":e="math.exp("+o+")";break;case"POW10":e="math.pow(10,"+o+")";break;case"ROUND":e="round("+o+")";break;case"ROUNDUP":e="math.ceil("+o+")";break;case"ROUNDDOWN":e="math.floor("+o+")";break;case"SIN":e="math.sin("+o+" / 180.0 * math.pi)";break;case"COS":e="math.cos("+o+" / 180.0 * math.pi)";break;case"TAN":e="math.tan("+o+" / 180.0 * math.pi)"}if(e)return[e,t.Blockly.Python.ORDER_FUNCTION_CALL];switch(l){case"ASIN":e="math.asin("+o+") / math.pi * 180";break;case"ACOS":e="math.acos("+o+") / math.pi * 180";break;case"ATAN":e="math.atan("+o+") / math.pi * 180";break;default:throw Error("Unknown math operator: "+l)}return[e,t.Blockly.Python.ORDER_MULTIPLICATIVE]},t.Blockly.Python.math_constant=function(o){var l={PI:["math.pi",t.Blockly.Python.ORDER_MEMBER],E:["math.e",t.Blockly.Python.ORDER_MEMBER],GOLDEN_RATIO:["(1 + math.sqrt(5)) / 2",t.Blockly.Python.ORDER_MULTIPLICATIVE],SQRT2:["math.sqrt(2)",t.Blockly.Python.ORDER_MEMBER],SQRT1_2:["math.sqrt(1.0 / 2)",t.Blockly.Python.ORDER_MEMBER],INFINITY:["float('inf')",t.Blockly.Python.ORDER_ATOMIC]};return"INFINITY"!==(o=o.getFieldValue("CONSTANT"))&&(t.Blockly.Python.definitions_.import_math="import math"),l[o]},t.Blockly.Python.math_number_property=function(o){var l=t.Blockly.Python.valueToCode(o,"NUMBER_TO_CHECK",t.Blockly.Python.ORDER_MULTIPLICATIVE)||"0",e=o.getFieldValue("PROPERTY");if("PRIME"===e)return t.Blockly.Python.definitions_.import_math="import math",t.Blockly.Python.definitions_.from_numbers_import_Number="from numbers import Number",[t.Blockly.Python.provideFunction_("math_isPrime",["def "+t.Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(n):","  # https://en.wikipedia.org/wiki/Primality_test#Naive_methods","  # If n is not a number but a string, try parsing it.","  if not isinstance(n, Number):","    try:","      n = float(n)","    except:","      return False","  if n == 2 or n == 3:","    return True","  # False if n is negative, is 1, or not whole, or if n is divisible by 2 or 3.","  if n <= 1 or n % 1 != 0 or n % 2 == 0 or n % 3 == 0:","    return False","  # Check all the numbers of form 6k +/- 1, up to sqrt(n).","  for x in range(6, int(math.sqrt(n)) + 2, 6):","    if n % (x - 1) == 0 or n % (x + 1) == 0:","      return False","  return True"])+"("+l+")",t.Blockly.Python.ORDER_FUNCTION_CALL];switch(e){case"EVEN":var n=l+" % 2 == 0";break;case"ODD":n=l+" % 2 == 1";break;case"WHOLE":n=l+" % 1 == 0";break;case"POSITIVE":n=l+" > 0";break;case"NEGATIVE":n=l+" < 0";break;case"DIVISIBLE_BY":if(!(o=t.Blockly.Python.valueToCode(o,"DIVISOR",t.Blockly.Python.ORDER_MULTIPLICATIVE))||"0"===o)return["False",t.Blockly.Python.ORDER_ATOMIC];n=l+" % "+o+" == 0"}return[n,t.Blockly.Python.ORDER_RELATIONAL]},t.Blockly.Python.math_change=function(o){t.Blockly.Python.definitions_.from_numbers_import_Number="from numbers import Number";var l=t.Blockly.Python.valueToCode(o,"DELTA",t.Blockly.Python.ORDER_ADDITIVE)||"0";return(o=t.Blockly.Python.nameDB_.getName(o.getFieldValue("VAR"),t.module$exports$Blockly$Names.NameType.VARIABLE))+" = ("+o+" if isinstance("+o+", Number) else 0) + "+l+"\n"},t.Blockly.Python.math_round=t.Blockly.Python.math_single,t.Blockly.Python.math_trig=t.Blockly.Python.math_single,t.Blockly.Python.math_on_list=function(o){var l=o.getFieldValue("OP");switch(o=t.Blockly.Python.valueToCode(o,"LIST",t.Blockly.Python.ORDER_NONE)||"[]",l){case"SUM":l="sum("+o+")";break;case"MIN":l="min("+o+")";break;case"MAX":l="max("+o+")";break;case"AVERAGE":t.Blockly.Python.definitions_.from_numbers_import_Number="from numbers import Number",l=t.Blockly.Python.provideFunction_("math_mean",["def "+t.Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(myList):","  localList = [e for e in myList if isinstance(e, Number)]","  if not localList: return","  return float(sum(localList)) / len(localList)"])+"("+o+")";break;case"MEDIAN":t.Blockly.Python.definitions_.from_numbers_import_Number="from numbers import Number",l=t.Blockly.Python.provideFunction_("math_median",["def "+t.Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(myList):","  localList = sorted([e for e in myList if isinstance(e, Number)])","  if not localList: return","  if len(localList) % 2 == 0:","    return (localList[len(localList) // 2 - 1] + localList[len(localList) // 2]) / 2.0","  else:","    return localList[(len(localList) - 1) // 2]"])+"("+o+")";break;case"MODE":l=t.Blockly.Python.provideFunction_("math_modes",["def "+t.Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(some_list):","  modes = []","  # Using a lists of [item, count] to keep count rather than dict",'  # to avoid "unhashable" errors when the counted item is itself a list or dict.',"  counts = []","  maxCount = 1","  for item in some_list:","    found = False","    for count in counts:","      if count[0] == item:","        count[1] += 1","        maxCount = max(maxCount, count[1])","        found = True","    if not found:","      counts.append([item, 1])","  for counted_item, item_count in counts:","    if item_count == maxCount:","      modes.append(counted_item)","  return modes"])+"("+o+")";break;case"STD_DEV":t.Blockly.Python.definitions_.import_math="import math",l=t.Blockly.Python.provideFunction_("math_standard_deviation",["def "+t.Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(numbers):","  n = len(numbers)","  if n == 0: return","  mean = float(sum(numbers)) / n","  variance = sum((x - mean) ** 2 for x in numbers) / n","  return math.sqrt(variance)"])+"("+o+")";break;case"RANDOM":t.Blockly.Python.definitions_.import_random="import random",l="random.choice("+o+")";break;default:throw Error("Unknown operator: "+l)}return[l,t.Blockly.Python.ORDER_FUNCTION_CALL]},t.Blockly.Python.math_modulo=function(o){return[(t.Blockly.Python.valueToCode(o,"DIVIDEND",t.Blockly.Python.ORDER_MULTIPLICATIVE)||"0")+" % "+(o=t.Blockly.Python.valueToCode(o,"DIVISOR",t.Blockly.Python.ORDER_MULTIPLICATIVE)||"0"),t.Blockly.Python.ORDER_MULTIPLICATIVE]},t.Blockly.Python.math_constrain=function(o){return["min(max("+(t.Blockly.Python.valueToCode(o,"VALUE",t.Blockly.Python.ORDER_NONE)||"0")+", "+(t.Blockly.Python.valueToCode(o,"LOW",t.Blockly.Python.ORDER_NONE)||"0")+"), "+(o=t.Blockly.Python.valueToCode(o,"HIGH",t.Blockly.Python.ORDER_NONE)||"float('inf')")+")",t.Blockly.Python.ORDER_FUNCTION_CALL]},t.Blockly.Python.math_random_int=function(o){return t.Blockly.Python.definitions_.import_random="import random",["random.randint("+(t.Blockly.Python.valueToCode(o,"FROM",t.Blockly.Python.ORDER_NONE)||"0")+", "+(o=t.Blockly.Python.valueToCode(o,"TO",t.Blockly.Python.ORDER_NONE)||"0")+")",t.Blockly.Python.ORDER_FUNCTION_CALL]},t.Blockly.Python.math_random_float=function(o){return t.Blockly.Python.definitions_.import_random="import random",["random.random()",t.Blockly.Python.ORDER_FUNCTION_CALL]},t.Blockly.Python.math_atan2=function(o){t.Blockly.Python.definitions_.import_math="import math";var l=t.Blockly.Python.valueToCode(o,"X",t.Blockly.Python.ORDER_NONE)||"0";return["math.atan2("+(t.Blockly.Python.valueToCode(o,"Y",t.Blockly.Python.ORDER_NONE)||"0")+", "+l+") / math.pi * 180",t.Blockly.Python.ORDER_MULTIPLICATIVE]},t.Blockly.Python.controls_repeat_ext=function(o){var l=o.getField("TIMES")?String(parseInt(o.getFieldValue("TIMES"),10)):t.Blockly.Python.valueToCode(o,"TIMES",t.Blockly.Python.ORDER_NONE)||"0";l=(0,t.module$exports$Blockly$utils$string.isNumber)(l)?parseInt(l,10):"int("+l+")";var e=t.Blockly.Python.statementToCode(o,"DO");return e=t.Blockly.Python.addLoopTrap(e,o)||t.Blockly.Python.PASS,"for "+t.Blockly.Python.nameDB_.getDistinctName("count",t.module$exports$Blockly$Names.NameType.VARIABLE)+" in range("+l+"):\n"+e},t.Blockly.Python.controls_repeat=t.Blockly.Python.controls_repeat_ext,t.Blockly.Python.controls_whileUntil=function(o){var l="UNTIL"===o.getFieldValue("MODE"),e=t.Blockly.Python.valueToCode(o,"BOOL",l?t.Blockly.Python.ORDER_LOGICAL_NOT:t.Blockly.Python.ORDER_NONE)||"False",n=t.Blockly.Python.statementToCode(o,"DO");return l&&(e="not "+e),"while "+e+":\n"+(t.Blockly.Python.addLoopTrap(n,o)||t.Blockly.Python.PASS)},t.Blockly.Python.controls_for=function(o){var l=t.Blockly.Python.nameDB_.getName(o.getFieldValue("VAR"),t.module$exports$Blockly$Names.NameType.VARIABLE),e=t.Blockly.Python.valueToCode(o,"FROM",t.Blockly.Python.ORDER_NONE)||"0",n=t.Blockly.Python.valueToCode(o,"TO",t.Blockly.Python.ORDER_NONE)||"0",r=t.Blockly.Python.valueToCode(o,"BY",t.Blockly.Python.ORDER_NONE)||"1",y=t.Blockly.Python.statementToCode(o,"DO");y=t.Blockly.Python.addLoopTrap(y,o)||t.Blockly.Python.PASS;var c="";o=function(){return t.Blockly.Python.provideFunction_("upRange",["def "+t.Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(start, stop, step):","  while start <= stop:","    yield start","    start += abs(step)"])};var i=function(){return t.Blockly.Python.provideFunction_("downRange",["def "+t.Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(start, stop, step):","  while start >= stop:","    yield start","    start -= abs(step)"])};if((0,t.module$exports$Blockly$utils$string.isNumber)(e)&&(0,t.module$exports$Blockly$utils$string.isNumber)(n)&&(0,t.module$exports$Blockly$utils$string.isNumber)(r))e=Number(e),n=Number(n),r=Math.abs(Number(r)),0==e%1&&0==n%1&&0==r%1?(e<=n?(n++,o=0===e&&1===r?n:e+", "+n,1!==r&&(o+=", "+r)):o=e+", "+--n+", -"+r,o="range("+o+")"):(o=e<n?o():i(),o+="("+e+", "+n+", "+r+")");else{var a=function(o,e){return(0,t.module$exports$Blockly$utils$string.isNumber)(o)?o=Number(o):o.match(/^\w+$/)?o="float("+o+")":(e=t.Blockly.Python.nameDB_.getDistinctName(l+e,t.module$exports$Blockly$Names.NameType.VARIABLE),c+=e+" = float("+o+")\n",o=e),o};e=a(e,"_start"),n=a(n,"_end"),r=a(r,"_inc"),"number"==typeof e&&"number"==typeof n?(o=e<n?o():i(),o+="("+e+", "+n+", "+r+")"):o="("+e+" <= "+n+") and "+o()+"("+e+", "+n+", "+r+") or "+i()+"("+e+", "+n+", "+r+")"}return c+="for "+l+" in "+o+":\n"+y},t.Blockly.Python.controls_forEach=function(o){var l=t.Blockly.Python.nameDB_.getName(o.getFieldValue("VAR"),t.module$exports$Blockly$Names.NameType.VARIABLE),e=t.Blockly.Python.valueToCode(o,"LIST",t.Blockly.Python.ORDER_RELATIONAL)||"[]",n=t.Blockly.Python.statementToCode(o,"DO");return"for "+l+" in "+e+":\n"+(t.Blockly.Python.addLoopTrap(n,o)||t.Blockly.Python.PASS)},t.Blockly.Python.controls_flow_statements=function(o){var l="";if(t.Blockly.Python.STATEMENT_PREFIX&&(l+=t.Blockly.Python.injectId(t.Blockly.Python.STATEMENT_PREFIX,o)),t.Blockly.Python.STATEMENT_SUFFIX&&(l+=t.Blockly.Python.injectId(t.Blockly.Python.STATEMENT_SUFFIX,o)),t.Blockly.Python.STATEMENT_PREFIX){var e=o.getSurroundLoop();e&&!e.suppressPrefixSuffix&&(l+=t.Blockly.Python.injectId(t.Blockly.Python.STATEMENT_PREFIX,e))}switch(o.getFieldValue("FLOW")){case"BREAK":return l+"break\n";case"CONTINUE":return l+"continue\n"}throw Error("Unknown flow statement.")},t.Blockly.Python.controls_if=function(o){var l=0,e="";t.Blockly.Python.STATEMENT_PREFIX&&(e+=t.Blockly.Python.injectId(t.Blockly.Python.STATEMENT_PREFIX,o));do{var n=t.Blockly.Python.valueToCode(o,"IF"+l,t.Blockly.Python.ORDER_NONE)||"False",r=t.Blockly.Python.statementToCode(o,"DO"+l)||t.Blockly.Python.PASS;t.Blockly.Python.STATEMENT_SUFFIX&&(r=t.Blockly.Python.prefixLines(t.Blockly.Python.injectId(t.Blockly.Python.STATEMENT_SUFFIX,o),t.Blockly.Python.INDENT)+r),e+=(0===l?"if ":"elif ")+n+":\n"+r,l++}while(o.getInput("IF"+l));return(o.getInput("ELSE")||t.Blockly.Python.STATEMENT_SUFFIX)&&(r=t.Blockly.Python.statementToCode(o,"ELSE")||t.Blockly.Python.PASS,t.Blockly.Python.STATEMENT_SUFFIX&&(r=t.Blockly.Python.prefixLines(t.Blockly.Python.injectId(t.Blockly.Python.STATEMENT_SUFFIX,o),t.Blockly.Python.INDENT)+r),e+="else:\n"+r),e},t.Blockly.Python.controls_ifelse=t.Blockly.Python.controls_if,t.Blockly.Python.logic_compare=function(o){var l={EQ:"==",NEQ:"!=",LT:"<",LTE:"<=",GT:">",GTE:">="}[o.getFieldValue("OP")],e=t.Blockly.Python.ORDER_RELATIONAL;return[(t.Blockly.Python.valueToCode(o,"A",e)||"0")+" "+l+" "+(o=t.Blockly.Python.valueToCode(o,"B",e)||"0"),e]},t.Blockly.Python.logic_operation=function(o){var l="AND"===o.getFieldValue("OP")?"and":"or",e="and"===l?t.Blockly.Python.ORDER_LOGICAL_AND:t.Blockly.Python.ORDER_LOGICAL_OR,n=t.Blockly.Python.valueToCode(o,"A",e);if(o=t.Blockly.Python.valueToCode(o,"B",e),n||o){var r="and"===l?"True":"False";n||(n=r),o||(o=r)}else o=n="False";return[n+" "+l+" "+o,e]},t.Blockly.Python.logic_negate=function(o){return["not "+(t.Blockly.Python.valueToCode(o,"BOOL",t.Blockly.Python.ORDER_LOGICAL_NOT)||"True"),t.Blockly.Python.ORDER_LOGICAL_NOT]},t.Blockly.Python.logic_boolean=function(o){return["TRUE"===o.getFieldValue("BOOL")?"True":"False",t.Blockly.Python.ORDER_ATOMIC]},t.Blockly.Python.logic_null=function(o){return["None",t.Blockly.Python.ORDER_ATOMIC]},t.Blockly.Python.logic_ternary=function(o){var l=t.Blockly.Python.valueToCode(o,"IF",t.Blockly.Python.ORDER_CONDITIONAL)||"False";return[(t.Blockly.Python.valueToCode(o,"THEN",t.Blockly.Python.ORDER_CONDITIONAL)||"None")+" if "+l+" else "+(o=t.Blockly.Python.valueToCode(o,"ELSE",t.Blockly.Python.ORDER_CONDITIONAL)||"None"),t.Blockly.Python.ORDER_CONDITIONAL]},t.Blockly.Python.lists_create_empty=function(o){return["[]",t.Blockly.Python.ORDER_ATOMIC]},t.Blockly.Python.lists_create_with=function(o){for(var l=Array(o.itemCount_),e=0;e<o.itemCount_;e++)l[e]=t.Blockly.Python.valueToCode(o,"ADD"+e,t.Blockly.Python.ORDER_NONE)||"None";return["["+l.join(", ")+"]",t.Blockly.Python.ORDER_ATOMIC]},t.Blockly.Python.lists_repeat=function(o){return["["+(t.Blockly.Python.valueToCode(o,"ITEM",t.Blockly.Python.ORDER_NONE)||"None")+"] * "+(o=t.Blockly.Python.valueToCode(o,"NUM",t.Blockly.Python.ORDER_MULTIPLICATIVE)||"0"),t.Blockly.Python.ORDER_MULTIPLICATIVE]},t.Blockly.Python.lists_length=function(o){return["len("+(t.Blockly.Python.valueToCode(o,"VALUE",t.Blockly.Python.ORDER_NONE)||"[]")+")",t.Blockly.Python.ORDER_FUNCTION_CALL]},t.Blockly.Python.lists_isEmpty=function(o){return["not len("+(t.Blockly.Python.valueToCode(o,"VALUE",t.Blockly.Python.ORDER_NONE)||"[]")+")",t.Blockly.Python.ORDER_LOGICAL_NOT]},t.Blockly.Python.lists_indexOf=function(o){var l=t.Blockly.Python.valueToCode(o,"FIND",t.Blockly.Python.ORDER_NONE)||"[]",e=t.Blockly.Python.valueToCode(o,"VALUE",t.Blockly.Python.ORDER_NONE)||"''",n=" -1",r="",y=" - 1";return o.workspace.options.oneBasedIndex&&(n=" 0",r=" + 1",y=""),"FIRST"===o.getFieldValue("END")?[t.Blockly.Python.provideFunction_("first_index",["def "+t.Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(my_list, elem):","  try: index = my_list.index(elem)"+r,"  except: index ="+n,"  return index"])+"("+e+", "+l+")",t.Blockly.Python.ORDER_FUNCTION_CALL]:[t.Blockly.Python.provideFunction_("last_index",["def "+t.Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(my_list, elem):","  try: index = len(my_list) - my_list[::-1].index(elem)"+y,"  except: index ="+n,"  return index"])+"("+e+", "+l+")",t.Blockly.Python.ORDER_FUNCTION_CALL]},t.Blockly.Python.lists_getIndex=function(o){var l=o.getFieldValue("MODE")||"GET",e=o.getFieldValue("WHERE")||"FROM_START",n=t.Blockly.Python.valueToCode(o,"VALUE","RANDOM"===e?t.Blockly.Python.ORDER_NONE:t.Blockly.Python.ORDER_MEMBER)||"[]";switch(e){case"FIRST":if("GET"===l)return[n+"[0]",t.Blockly.Python.ORDER_MEMBER];if("GET_REMOVE"===l)return[n+".pop(0)",t.Blockly.Python.ORDER_FUNCTION_CALL];if("REMOVE"===l)return n+".pop(0)\n";break;case"LAST":if("GET"===l)return[n+"[-1]",t.Blockly.Python.ORDER_MEMBER];if("GET_REMOVE"===l)return[n+".pop()",t.Blockly.Python.ORDER_FUNCTION_CALL];if("REMOVE"===l)return n+".pop()\n";break;case"FROM_START":if(o=t.Blockly.Python.getAdjustedInt(o,"AT"),"GET"===l)return[n+"["+o+"]",t.Blockly.Python.ORDER_MEMBER];if("GET_REMOVE"===l)return[n+".pop("+o+")",t.Blockly.Python.ORDER_FUNCTION_CALL];if("REMOVE"===l)return n+".pop("+o+")\n";break;case"FROM_END":if(o=t.Blockly.Python.getAdjustedInt(o,"AT",1,!0),"GET"===l)return[n+"["+o+"]",t.Blockly.Python.ORDER_MEMBER];if("GET_REMOVE"===l)return[n+".pop("+o+")",t.Blockly.Python.ORDER_FUNCTION_CALL];if("REMOVE"===l)return n+".pop("+o+")\n";break;case"RANDOM":if(t.Blockly.Python.definitions_.import_random="import random","GET"===l)return["random.choice("+n+")",t.Blockly.Python.ORDER_FUNCTION_CALL];if(n=t.Blockly.Python.provideFunction_("lists_remove_random_item",["def "+t.Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(myList):","  x = int(random.random() * len(myList))","  return myList.pop(x)"])+"("+n+")","GET_REMOVE"===l)return[n,t.Blockly.Python.ORDER_FUNCTION_CALL];if("REMOVE"===l)return n+"\n"}throw Error("Unhandled combination (lists_getIndex).")},t.Blockly.Python.lists_setIndex=function(o){var l=t.Blockly.Python.valueToCode(o,"LIST",t.Blockly.Python.ORDER_MEMBER)||"[]",e=o.getFieldValue("MODE")||"GET",n=o.getFieldValue("WHERE")||"FROM_START",r=t.Blockly.Python.valueToCode(o,"TO",t.Blockly.Python.ORDER_NONE)||"None";switch(n){case"FIRST":if("SET"===e)return l+"[0] = "+r+"\n";if("INSERT"===e)return l+".insert(0, "+r+")\n";break;case"LAST":if("SET"===e)return l+"[-1] = "+r+"\n";if("INSERT"===e)return l+".append("+r+")\n";break;case"FROM_START":if(o=t.Blockly.Python.getAdjustedInt(o,"AT"),"SET"===e)return l+"["+o+"] = "+r+"\n";if("INSERT"===e)return l+".insert("+o+", "+r+")\n";break;case"FROM_END":if(o=t.Blockly.Python.getAdjustedInt(o,"AT",1,!0),"SET"===e)return l+"["+o+"] = "+r+"\n";if("INSERT"===e)return l+".insert("+o+", "+r+")\n";break;case"RANDOM":if(t.Blockly.Python.definitions_.import_random="import random",l.match(/^\w+$/)?o="":(n=(o=t.Blockly.Python.nameDB_.getDistinctName("tmp_list",t.module$exports$Blockly$Names.NameType.VARIABLE))+" = "+l+"\n",l=o,o=n),o+=(n=t.Blockly.Python.nameDB_.getDistinctName("tmp_x",t.module$exports$Blockly$Names.NameType.VARIABLE))+" = int(random.random() * len("+l+"))\n","SET"===e)return o+(l+"[")+n+"] = "+r+"\n";if("INSERT"===e)return o+(l+".insert(")+n+", "+r+")\n"}throw Error("Unhandled combination (lists_setIndex).")},t.Blockly.Python.lists_getSublist=function(o){var l=t.Blockly.Python.valueToCode(o,"LIST",t.Blockly.Python.ORDER_MEMBER)||"[]",e=o.getFieldValue("WHERE1"),n=o.getFieldValue("WHERE2");switch(e){case"FROM_START":0===(e=t.Blockly.Python.getAdjustedInt(o,"AT1"))&&(e="");break;case"FROM_END":e=t.Blockly.Python.getAdjustedInt(o,"AT1",1,!0);break;case"FIRST":e="";break;default:throw Error("Unhandled option (lists_getSublist)")}switch(n){case"FROM_START":o=t.Blockly.Python.getAdjustedInt(o,"AT2",1);break;case"FROM_END":o=t.Blockly.Python.getAdjustedInt(o,"AT2",0,!0),(0,t.module$exports$Blockly$utils$string.isNumber)(String(o))?0===o&&(o=""):(t.Blockly.Python.definitions_.import_sys="import sys",o+=" or sys.maxsize");break;case"LAST":o="";break;default:throw Error("Unhandled option (lists_getSublist)")}return[l+"["+e+" : "+o+"]",t.Blockly.Python.ORDER_MEMBER]},t.Blockly.Python.lists_sort=function(o){var l=t.Blockly.Python.valueToCode(o,"LIST",t.Blockly.Python.ORDER_NONE)||"[]",e=o.getFieldValue("TYPE");return o="1"===o.getFieldValue("DIRECTION")?"False":"True",[t.Blockly.Python.provideFunction_("lists_sort",["def "+t.Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(my_list, type, reverse):","  def try_float(s):","    try:","      return float(s)","    except:","      return 0","  key_funcs = {",'    "NUMERIC": try_float,','    "TEXT": str,','    "IGNORE_CASE": lambda s: str(s).lower()',"  }","  key_func = key_funcs[type]","  list_cpy = list(my_list)","  return sorted(list_cpy, key=key_func, reverse=reverse)"])+"("+l+', "'+e+'", '+o+")",t.Blockly.Python.ORDER_FUNCTION_CALL]},t.Blockly.Python.lists_split=function(o){var l=o.getFieldValue("MODE");if("SPLIT"===l)o=(l=t.Blockly.Python.valueToCode(o,"INPUT",t.Blockly.Python.ORDER_MEMBER)||"''")+".split("+(o=t.Blockly.Python.valueToCode(o,"DELIM",t.Blockly.Python.ORDER_NONE))+")";else{if("JOIN"!==l)throw Error("Unknown mode: "+l);l=t.Blockly.Python.valueToCode(o,"INPUT",t.Blockly.Python.ORDER_NONE)||"[]",o=(t.Blockly.Python.valueToCode(o,"DELIM",t.Blockly.Python.ORDER_MEMBER)||"''")+".join("+l+")"}return[o,t.Blockly.Python.ORDER_FUNCTION_CALL]},t.Blockly.Python.lists_reverse=function(o){return["list(reversed("+(t.Blockly.Python.valueToCode(o,"LIST",t.Blockly.Python.ORDER_NONE)||"[]")+"))",t.Blockly.Python.ORDER_FUNCTION_CALL]},t.Blockly.Python.colour_picker=function(o){return[t.Blockly.Python.quote_(o.getFieldValue("COLOUR")),t.Blockly.Python.ORDER_ATOMIC]},t.Blockly.Python.colour_random=function(o){return t.Blockly.Python.definitions_.import_random="import random",["'#%06x' % random.randint(0, 2**24 - 1)",t.Blockly.Python.ORDER_FUNCTION_CALL]},t.Blockly.Python.colour_rgb=function(o){return[t.Blockly.Python.provideFunction_("colour_rgb",["def "+t.Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(r, g, b):","  r = round(min(100, max(0, r)) * 2.55)","  g = round(min(100, max(0, g)) * 2.55)","  b = round(min(100, max(0, b)) * 2.55)","  return '#%02x%02x%02x' % (r, g, b)"])+"("+(t.Blockly.Python.valueToCode(o,"RED",t.Blockly.Python.ORDER_NONE)||0)+", "+(t.Blockly.Python.valueToCode(o,"GREEN",t.Blockly.Python.ORDER_NONE)||0)+", "+(o=t.Blockly.Python.valueToCode(o,"BLUE",t.Blockly.Python.ORDER_NONE)||0)+")",t.Blockly.Python.ORDER_FUNCTION_CALL]},t.Blockly.Python.colour_blend=function(o){return[t.Blockly.Python.provideFunction_("colour_blend",["def "+t.Blockly.Python.FUNCTION_NAME_PLACEHOLDER_+"(colour1, colour2, ratio):","  r1, r2 = int(colour1[1:3], 16), int(colour2[1:3], 16)","  g1, g2 = int(colour1[3:5], 16), int(colour2[3:5], 16)","  b1, b2 = int(colour1[5:7], 16), int(colour2[5:7], 16)","  ratio = min(1, max(0, ratio))","  r = round(r1 * (1 - ratio) + r2 * ratio)","  g = round(g1 * (1 - ratio) + g2 * ratio)","  b = round(b1 * (1 - ratio) + b2 * ratio)","  return '#%02x%02x%02x' % (r, g, b)"])+"("+(t.Blockly.Python.valueToCode(o,"COLOUR1",t.Blockly.Python.ORDER_NONE)||"'#000000'")+", "+(t.Blockly.Python.valueToCode(o,"COLOUR2",t.Blockly.Python.ORDER_NONE)||"'#000000'")+", "+(o=t.Blockly.Python.valueToCode(o,"RATIO",t.Blockly.Python.ORDER_NONE)||0)+")",t.Blockly.Python.ORDER_FUNCTION_CALL]},t.Blockly.Python})?e.apply(t,n):e)||(o.exports=r)}}]);