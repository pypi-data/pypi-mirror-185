
stages:
  - test
  - build
  - upload
  - release


unittests:
  stage: test
  image: python:${python_version}
  before_script:
    - pip install --upgrade pip
    - pip install . coverage
  script:
    - coverage run -m unittest discover tests
    - coverage xml
    - coverage report
  parallel:
    matrix:
      - python_version: ["3.7", "3.8", "3.9", "3.10", "3.11"]
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml


flake8 checks:
  stage: test
  image: python:${python_version}
  before_script:
    - pip install --upgrade pip
    - pip install flake8
  script:
    - python -m flake8
  parallel:
    matrix:
      - python_version: ["3.7", "3.8", "3.9", "3.10", "3.11"]


mypy checks:
  stage: test
  image: python:${python_version}
  before_script:
    - pip install --upgrade pip
    - pip install . mypy
  script:
    - python -m mypy
  parallel:
    matrix:
      - python_version: ["3.7", "3.8", "3.9", "3.10", "3.11"]


build packages:
  stage: build
  image: python:3.9
  rules:
    - if: '$CI_COMMIT_TAG != null'
  script:
    - python setup.py sdist bdist_wheel
    - ls -lah dist/
  artifacts:
    paths:
      - dist/*.tar.gz
      - dist/*.whl


upload to PyPI:
  stage: upload
  image: python:3.9
  rules:
    - if: '$CI_COMMIT_TAG != null'
  before_script:
    - ls -lah dist/
    - pip install twine
  script:
    - twine upload --non-interactive dist/*


create release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli
  rules:
    - if: '$CI_COMMIT_TAG != null'
  script:
    - >
      release-cli create --name $CI_COMMIT_TAG --description "# Changelog$(cat CHANGELOG.md | awk '/## '$CI_COMMIT_TAG'/{flag=1;next}/##/{flag=0}flag')"
      --tag-name $CI_COMMIT_TAG --ref $CI_COMMIT_SHA
      --assets-links-name "Package Files on PyPI"
      --assets-links-url "https://pypi.org/project/tololib/$CI_COMMIT_TAG/#files"
  needs:
    - upload to PyPI

pages:
  stage: build
  image: python:3.9
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
  before_script:
    - pip install --upgrade pip
    - pip install pdoc3
  script:
    - pdoc3 --html --template-dir docs/pdoc3-templates --force -o docs/generated tololib
    - mv docs/generated/tololib public
  artifacts:
    paths:
      - public
    expire_in: 1h


include:
  - template: Dependency-Scanning.gitlab-ci.yml
  - template: SAST.gitlab-ci.yml
