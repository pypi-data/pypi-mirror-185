# SPDX-FileCopyrightText: 2019â€“2023 Pynguin Contributors
#
# SPDX-License-Identifier: LGPL-3.0-or-later

[tool.poetry]
name = "pynguin"
version = "0.28.0"
description = "Pynguin is a tool for automated unit test generation for Python"
authors = ["Stephan Lukasczyk <stephan@lukasczyk.me>"]
license = "LGPL-3.0-or-later"
readme = "README.md"
repository = "https://github.com/se2p/pynguin"
documentation = "https://pynguin.readthedocs.io"
homepage = "https://www.pynguin.eu"
keywords = [
    "unit test",
    "random testing",
    "search based",
    "test generation"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Education :: Testing",
    "Topic :: Software Development :: Testing",
    "Topic :: Software Development :: Testing :: Unit",
    "Typing :: Typed",
]

[tool.poetry.dependencies]
python = ">=3.10, <3.11"
astroid = "^2.13.2"
black = "^22.12.0"
bytecode = "0.13"
jellyfish = "^0.9.0"
Jinja2 = "^3.1.2"
MutPy-Pynguin = "^0.7.1"
networkx = "^3.0"
rich = "^13.0.1"
pydot = "^1.4.2"
Pygments = "^2.14.0"
pytest = "^7.2.0"
simple-parsing = "^0.0.21.post1"
typing_inspect = "^0.8.0"
asciitree = "^0.3.3"
libcst = "^0.4.9"
requests = "^2.28.1"

[tool.poetry.group.dev.dependencies]
bandit = "^1.7.4"
black = "^22.12.0"
darglint = "^1.8.1"
flake8 = "^6.0.0"
isort = {extras = ["pyproject"], version = "^5.11.4"}
mypy = "^0.991"
pre-commit = "^2.21.0"
pylint = "^2.15.10"
pyupgrade = "^3.3.1"
safety = "^2.3.5"
types-requests = "^2.28.11.7"
requests-mock = "^1.10.0"
ruff = "^0.0.217"

[tool.poetry.group.docs.dependencies]
sphinx = "^6.1.2"
sphinx-autodoc-typehints = "^1.20.1"
sphinx-hoverxref = "^1.3.0"
sphinx-selective-exclude = "^1.0.3"

[tool.poetry.group.test.dependencies]
coverage = "^7.0.4"
hypothesis = "^6.62.0"
pytest = "^7.2.0"
pytest-cov = "^4.0.0"
pytest-mock = "^3.10.0"
pytest-picked = "^0.4.6"
pytest-sugar = "^0.9.6"

[tool.poetry.scripts]
pynguin = "pynguin.cli:main"

[tool.black]
line-length = 88
target_version = ['py310']
include = '\.pyi?$'
exclude = '''

(
  /(
      \.eggs          # exclude a few common directories in the
    | \.git           # root of the project
    | \.pytest_cache
    | \.mypy_cache
    | \.venv
    | venv
    | _build
    | build
    | dist
    | pynguin.egg-info
  )/
)
'''

[tool.coverage.run]
branch = true
source = ["pynguin", "tests"]
omit = ["tests/fixtures/*"]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "def __repr__",
  "def __str__",
  "raise AssertionError",
  "raise NotImplementedError",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
  "if typing.TYPE_CHECKING:"
]

[tool.coverage.html]
directory = "cov_html"

[tool.isort]
line_length=88
multi_line_output=3
include_trailing_comma=true
indent='    '

[tool.mypy]
check_untyped_defs = true
ignore_errors = false
ignore_missing_imports = true
strict_optional = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true

[tool.pytest.ini_options]
minversion = "6.0.0rc1"
# Always using Coverage.py disables debugging.
# addopts = "--cov=pynguin --cov-branch --cov-report html:cov_html --cov-report=term-missing"
testpaths = [
  "tests",
]
# A lot of our own classes start with Test so pytest will pick them up during test collection.
# But they don't actually contains tests, so we set an empty matcher for the class name.
python_classes = ''

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.ruff]
line-length = 88

select = ["E", "F", "W", "T20"]

ignore = ["E999"]
# E999: Pattern matching currently not supported.


# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]
per-file-ignores = {}

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.10.
target-version = "py310"

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10
