name: CI
on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "*"
  schedule:
    - cron: "0 13 * * 1"

jobs:
  detect-ci-trigger:
    name: detect ci trigger
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    outputs:
      triggered: ${{ steps.detect-trigger.outputs.trigger-found }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - uses: xarray-contrib/ci-trigger@v1
        id: detect-trigger
        with:
          keyword: "[full-cloud-ci]"

  build:
    name: Build (${{ matrix.python-version }} | ${{ matrix.os }})
    if: github.repository == 'jbusecke/xmip'
    runs-on: ${{ matrix.os }}
    timeout-minutes: 45
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
        python-version: ["3.8", "3.9", "3.10"]
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ github.token }}
      - uses: actions/checkout@v3
      - name: Cache conda
        uses: actions/cache@v3
        env:
          # Increase this value to reset cache if ci/environment.yml has not changed
          CACHE_NUMBER: 0
        with:
          path: ~/conda_pkgs_dir
          key: ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles('ci/environment.yml') }}
      - uses: conda-incubator/setup-miniconda@v2.2.0
        with:
          channels: conda-forge
          mamba-version: '*'
          channel-priority: strict
          activate-environment: test_env_xmip # Defined in ci/environment.yml
          auto-update-conda: false
          python-version: ${{ matrix.python-version }}
          environment-file: ci/environment.yml
          use-only-tar-bz2: true # IMPORTANT: This needs to be set for caching to work properly!
      - name: Conda List (pre)
        run: conda list
      - name: Set up conda environment
        run: python -m pip install -e . --no-deps --force-reinstall
      - name: Conda List
        run: conda list
      - name: Check Machine Config
        run: lscpu
      - name: Run Tests
        run: |
          pytest -n auto --cov=./ --cov-report=xml --ignore=tests/test_preprocessing_cloud.py
      - name: Upload code coverage to Codecov
        uses: codecov/codecov-action@v3.1.1
        with:
          file: ./coverage.xml
          flags: unittests
          env_vars: OS,PYTHON
          name: codecov-umbrella
          fail_ci_if_error: false

  upstream-dev:
    name: Build (upstream-dev)
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:
    - name: Cancel previous runs
      uses: styfle/cancel-workflow-action@0.11.0
      with:
        access_token: ${{ github.token }}
    - uses: actions/checkout@v3
    - name: Cache conda
      uses: actions/cache@v3
      env:
        # Increase this value to reset cache if ci/environment-upstream-dev.yml has not changed
        CACHE_NUMBER: 0
      with:
        path: ~/conda_pkgs_dir
        key: ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles('ci/environment-upstream-dev.yml') }}
    - uses: conda-incubator/setup-miniconda@v2.2.0
      with:
        channels: conda-forge
        mamba-version: '*'
        channel-priority: strict
        activate-environment: test_env_xmip # Defined in ci/environment-upstream-dev.yml
        auto-update-conda: false
        python-version: "3.10"
        environment-file: ci/environment-upstream-dev.yml
        use-only-tar-bz2: true # IMPORTANT: This needs to be set for caching to work properly!
    - name: Set up conda environment
      run: python -m pip install -e . --no-deps --force-reinstall
    - name: Conda List
      run: conda list
    - name: Run Tests
      run: |
        pytest -n auto --ignore=tests/test_preprocessing_cloud.py

  cloud-tests:
    needs: detect-ci-trigger
    if: needs.detect-ci-trigger.outputs.triggered == 'true'
    name: Build (cloud-data-tests | ${{ matrix.variable_id }} | ${{ matrix.experiment_id }} | ${{ matrix.grid_label }})
    strategy:
      fail-fast: false
      matrix:
        variable_id: ["thetao", "o2", "so", "uo"]
        experiment_id: ["historical", "ssp585"]
        grid_label: ["gn", "gr"]
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:
    - name: Cancel previous runs
      uses: styfle/cancel-workflow-action@0.11.0
      with:
        access_token: ${{ github.token }}
    - uses: actions/checkout@v3
    - name: Cache conda
      uses: actions/cache@v3
      env:
        # Increase this value to reset cache if ci/environment-upstream-dev.yml has not changed
        CACHE_NUMBER: 0
      with:
        path: ~/conda_pkgs_dir
        key: ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles('ci/environment-upstream-dev.yml') }}
    - uses: conda-incubator/setup-miniconda@v2.2.0
      with:
        channels: conda-forge
        mamba-version: '*'
        channel-priority: strict
        activate-environment: test_env_xmip # Defined in ci/environment-upstream-dev.yml
        auto-update-conda: false
        python-version: "3.10"
        environment-file: ci/environment-cloud-test.yml
        use-only-tar-bz2: true # IMPORTANT: This needs to be set for caching to work properly!
    - name: Set up conda environment
      run: python -m pip install -e . --no-deps --force-reinstall
    - name: Conda List
      run: conda list
    - name: Check Machine Config
      run: lscpu
    - name: Run Tests
      run: |
        pwd
        echo $PYTHONPATH
        pytest -n auto --reruns 1 --reruns-delay 5 tests/test_preprocessing_cloud.py --gl ${{ matrix.grid_label }} --ei ${{ matrix.experiment_id }} --vi ${{ matrix.variable_id }}
